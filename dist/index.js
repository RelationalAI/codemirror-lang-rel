import { LRParser } from '@lezer/lr';
import { LRLanguage, LanguageSupport } from '@codemirror/language';
import { styleTags, tags } from '@lezer/highlight';
import { completeFromList } from '@codemirror/autocomplete';

// This file was generated by lezer-generator. You probably shouldn't edit it.
const spec_BasicId = {__proto__:null,doc:14, inline:23, function:25, ondemand:27, raw:54, def:58, Any:62, String:64, Int:66, Number:68, Char:70, Missing:72, Float:74, Floating:76, UnsignedInt:78, SignedInt:80, Rational:82, FixedDecimal:84, RelName:86, Entity:88, AutoNumber:90, Hash:92, FilePos:94, Date:96, DateTime:98, Year:100, Month:102, Week:104, Day:106, Hour:108, Minute:110, Second:112, Millisecond:114, Microsecond:116, Nanosecond:118, Pattern:120, Boolean:122, type:124, entity:126, value:128, output:137, insert:139, delete:141, abort:143, export:145, where:194, for:196, from:198, if:274, then:276, else:278, end:280, forall:282, exists:284, and:288, or:292, implies:296, not:302, iff:306, xor:312, in:332, ic:344, module:348, with:352, use:354, as:358};
const spec_Operator = {__proto__:null,".":183, "^":203, "-":205, "/":207, "%":209, "*":211, "÷":213, "×":215, "⊗":217, "⊙":219, "+":221, "∩":223, "⊕":225, "∪":227, "⊓":229, "⊔":231, "=":233, "!=":235, "≈":237, "∼":239, "→":241, "←":243, "≼":245, "≽":247, "≺":249, "≻":251, "≠":253, "<":255, ">":257, "<=":259, "≤":261, ">=":263, "≥":265, "⊆":267, "⊇":269, "⊂":271, "⊃":273, "∧":291, "∨":295, "⇒":299, "⇐":301, "¬":305, "≡":309, "⇔":311, "≢":315, "⇎":317, "⊻":319, "<:":321, ":>":323, "<++":325, "++>":327, "∈":335};
const parser = LRParser.deserialize({
  version: 14,
  states: "!6dO]QPOOOwQPO'#CfOOQO'#GX'#GXO!SQPO'#GjO!SQPO'#GjOOQO'#Gi'#GiOOQO'#GW'#GWQ]QPOOO!hQPO'#CaO!pQPO'#F{O#RQQO'#GRO'fQPO,59QOOQO'#Gl'#GlOOQO-E:V-E:VO'}QPO,5=UOOQO-E:U-E:UOOQO,58{,58{O(cQPO,58zO+UQPO,5<gO+ZQPO,5<hO.OQPO,5<iO(cQPO,5<kO.`QSO'#CnOOQO'#Cn'#CnOOQO'#Ck'#CkO4TQQO'#G{O4_QQO'#G{O4fQQO'#EXO>]QQO'#DwO>dQPO'#DqO>iQQO'#EYOB|QPO'#E`OHkQQO'#EXOOQO'#EX'#EXOCXQQO'#EXOKeQQO'#EWONSQQO'#EXONaQPO'#EXO#RQQO'#EWO! |QQO'#EVO!#hQQO'#EUO!%PQQO'#ETO!&VQPO'#HUO!'dQPO'#EROOQO'#ES'#ESO!(nQPO'#FvOOQO'#ER'#ERO!(sQWO'#EOO!)OQ`O'#FwOOQO'#D{'#D{OOQO'#Dz'#DzO!)ZQPO'#DyO!)iQWO'#CvOOQO'#G|'#G|OOQO'#G{'#G{OOQO'#G}'#G}O!)wQQO'#EXO#RQQO'#EXO!-{QQO'#EWO!.]QPO,5<mO!.bQQO1G.lO!0QQPO'#G{O!0XQPO'#G{O!0`QQO'#DoO!1cQPO'#DwO!1jQPO'#CzOOQO'#Cz'#CzO!1qQPO1G.fO(cQPO1G2RO(cQPO1G2SO!2PQQO'#FzO!4tQQO'#DxOOQO'#G`'#G`O!7iQPO'#HOOOQO'#HO'#HOO!7wQPO1G2TO!1qQPO1G2TO!8PQPO1G2VOOQO,59Y,59YO!8ZQSO,59YOOQO,59Z,59ZOOQO,59],59]O!8cQPO'#G_O!9fQQO,5:]O!={QPO,5:ZO!>ZQPO,5:zOOQO,5:s,5:sO!>cQPO,5:sO!>hQPO,5:sO!>sQPO,5:tO!>xQQO,5:zO!HOQQO,5:sO!HYQQO,5:fO!KpQQO,5:sO# jQQO,5:sO!)wQQO,5:sO!)wQQO,5:sO!)wQQO,5:sO!)wQQO,5:sO!)wQQO,5:sO!)wQQO,5:sO#%dQPO,5:sO#%iQPO,5:sO#%tQQO,5:sO#(iQPO'#FaOOQO,5:r,5:rO!-{QQO,5:rO!-{QQO,5:rO!-{QQO,5:rO!-{QQO,5:rO!-{QQO,5:rO!-{QQO,5:qO!-{QQO,5:pO!-{QQO,5:oO!-{QQO,5=pO#%tQQO,5<bO#RQQO,5<bO#(nQSO'#EQOOQO'#EP'#EPO>iQQO'#EPO#(sQWO,5:jO!(vQPO,5:jO#)RQ`O,5<cO!(vQPO,5<cO#)aQQO'#GdO#,RQPO,5:eO#,aQpO'#CxO#,iQpO'#CxO#,tQpO'#CxO#-SQpO'#CxOOQO,59b,59bO4fQQO'#EXO#-eQQO'#EXO#2fQQO,5:sO#2|QPO,5:sO#5eQQO1G2XO#5lQPO'#GnOOQO'#Cj'#CjO#5tQPO7+$WO#5yQPO,5:]O#6TQPO,5:ZO#6YQQO'#FzO#8}QPO7+$QO#9VQPO7+'mO#:TQPO7+'nO#<cQQO'#DzOOQO,5<f,5<fO#>OQPO,5<fOOQO,5:d,5:dO#>TQPO,5:dOOQO-E:^-E:^OOQO,5=j,5=jO#RQQO7+'oO#RQQO7+'oO#>YQPO7+'oO#>bQPO7+'qO#>lQPO7+'qOOQO7+'q7+'qOOQO1G.t1G.tOOQO'#Dw'#DwOOQO,5<y,5<yOOQO-E:]-E:]OOQO1G/u1G/uOOQO1G0f1G0fOOQO1G0_1G0_O#>sQPO1G0_OOQO1G0`1G0`O#?vQQO1G0fO!HYQQO1G0QO#BmQQO1G0QO#DSQQO'#HXO#DnQPO'#E]OOQO'#E^'#E^O#ESQPO'#E_OOQO'#E]'#E]O#EXQPO'#E[OOQO'#E['#E[O#EmQQO'#EdO#EwQPO'#H[O#E|QPO1G0_O#JuQQO1G0_O#K`QQO1G0_O$!|QQO1G0_O$#WQQO1G0_O$#bQQO1G0_O$&SQPO1G0_O#%tQQO'#E`O$&XQPO1G0_O!-{QQO,5;{P#%tQQO,5;{OOQO1G0^1G0^O$(mQQO1G0^O$+WQQO1G0^O$+hQQO1G0^O$-cQQO1G0^O$/dQQO1G0]O$1hQQO1G0[O$3PQQO1G0ZO$4VQPO1G3[OOQO1G1|1G1|OOQO,5:l,5:lO$5dQPO,5:kOOQO'#Gb'#GbO$5iQWO1G0UOOQO1G0U1G0UO$5iQWO1G0UOOQO'#Gc'#GcO$5wQ`O1G1}OOQO1G1}1G1}O$5wQ`O1G1}OOQO,5=O,5=OOOQO-E:b-E:bOOQO'#GY'#GYO$6VQpO,59dOOQO,59d,59dOOQO'#GZ'#GZO$6_QpO,59dOOQO'#G['#G[O$6jQpO,59dOOQO'#G]'#G]O$6xQpO,59dO#RQQO1G0_O$7ZQPO'#GUO$8RQPO'#HcOOQO7+'s7+'sO!.bQQO'#G^O$8vQPO,5=YOOQO<<Gr<<GrO#RQQO<<GlO#RQQO<<GlO$9OQPO<<KXO$9WQPO<<KYO$:pQQO,5:fOOQO1G2Q1G2QOOQO1G0O1G0OOOQO<<KZ<<KZO$<YQPO<<KZO#RQQO<<KZO#RQQO<<KZO$<_QPO<<K]OOQO<<K]<<K]OOQO7+%y7+%yOOQO,5:],5:]O$=gQQO,5:rO$=wQQO7+%lO$?^QQO,5=sO#%tQQO,5:yO$?nQQO,5:yO$CeQQO,5=vO!>^QPO,5:zO>iQQO7+%yO$CxQQO1G1gP$EhQQO'#E`OOQO1G1g1G1gO$F|QQO'#DyOOQO1G0V1G0VOOQO-E:`-E:`OOQO7+%p7+%pO$HcQWO7+%pOOQO-E:a-E:aOOQO7+'i7+'iO$HqQ`O7+'iOOQO-E:W-E:WOOQO1G/O1G/OOOQO-E:X-E:XOOQO-E:Y-E:YOOQO-E:Z-E:ZO$IPQPO7+%yO$KeQQO,5<pO#3RQQO'#GeO$KlQPO,5=}OOQO,5<x,5<xOOQO-E:[-E:[OOQOAN=WAN=WO$LaQPOAN=WO#RQQOAN@sO#RQQOAN@sO#RQQOAN@tO#RQQOAN@tOOQOAN@uAN@uO$LfQPOAN@uOOQOAN@wAN@wO$LkQQO1G3_OOQO1G0e1G0eOOQO'#Ed'#EdO$NTQQO'#EdO$N_QPO1G3bO$NgQPO<<IeO% yQQO,5:eOOQO<<I[<<I[OOQO<<KT<<KTO#RQQO<<IeOOQO1G2[1G2[OOQO,5=P,5=POOQO-E:c-E:cOOQOG22rG22rOOQOG26_G26_O%#`QPOG26_OOQOG26`G26`O%#eQPOG26`OOQOG26aG26aO$CeQQO'#GaO%#jQPO7+(|OOQOAN?PAN?PO%#rQPOAN?POOQOLD+yLD+yOOQOLD+zLD+zOOQO,5<{,5<{OOQO-E:_-E:_OOQOG24kG24kO%'uQQO'#G{O%)[QQO'#G{O%-aQQO'#DwO>dQPO'#DqO>dQPO'#DqO%-nQQO'#EXO%3bQQO'#EXO%8PQQO'#EXO%-wQQO'#EXO%.UQQO'#EXO%3oQQO'#EXO>iQQO'#EWO$?nQQO'#EWO$?nQQO'#EWO%8^QQO'#EWO%8^QQO'#EWO#RQQO'#EWO>iQQO'#EWO!HYQQO'#EXO%<TQQO'#EWO$?^QQO'#EWO%<eQQO'#EWO!>xQQO'#EWO%<uQQO'#EWO$ChQQO'#EWO%@iQQO'#EWO%<eQQO,5:zP$?^QQO,5:zP!-{QQO,5:zP%<TQQO,5:zO$ChQQO,5:zO%@iQQO,5:zP%<uQQO,5:zO%D}QQO,5:sO!BlQQO,5:sO%EUQQO,5:sO!)wQQO,5:fO!HYQQO,5:sO!HYQQO,5:sO!HYQQO,5:sO!HYQQO,5:sO!HYQQO,5:sO!HYQQO,5:sO%<TQQO,5:rO$?^QQO,5:rO%<eQQO,5:rO!>xQQO,5:rO%<uQQO,5:rO$ChQQO,5:rO%@iQQO,5:rO%<TQQO,5:rO$?^QQO,5:rO%<eQQO,5:rO!>xQQO,5:rO%<uQQO,5:rO$ChQQO,5:rO%@iQQO,5:rO%<TQQO,5:rO$?^QQO,5:rO%<eQQO,5:rO!>xQQO,5:rO%<uQQO,5:rO$ChQQO,5:rO%@iQQO,5:rO%<TQQO,5:rO$?^QQO,5:rO%<eQQO,5:rO!>xQQO,5:rO%<uQQO,5:rO$ChQQO,5:rO%@iQQO,5:rO%<TQQO,5:rO$?^QQO,5:rO%<eQQO,5:rO!>xQQO,5:rO%<uQQO,5:rO$ChQQO,5:rO%@iQQO,5:rO%<TQQO,5:qO$?^QQO,5:qO%<TQQO,5:pO$?^QQO,5:pO%<TQQO,5:oO%<TQQO,5=pO>iQQO,5<bO%ElQQO,5:sO%IjQQO'#DzO%KOQQO1G0fP%LOQQO1G0fP%MOQQO1G0fP%N|QQO1G0fO& pQQO1G0fO&#OQQO1G0fP&$ZQQO1G0fO!)wQQO1G0QO&$nQQO1G0QO&'`QQO'#EdO&+kQQO1G0_O&,UQQO1G0_O&0gQQO1G0_O&0qQQO1G0_O&0{QQO1G0_O%<TQQO,5;{O$?^QQO,5;{O%<eQQO,5;{O!>xQQO,5;{O%<uQQO,5;{O$ChQQO,5;{O%@iQQO,5;{O&2bQQO,5;{O&4{QQO1G0^O&5YQQO1G0^O&7ZQQO1G0^O&8iQQO1G0^O&8sQQO1G0^O&:UQQO1G0^O&:fQQO1G0^O&<TQQO1G0^O&<eQQO1G0^O&=hQQO1G0^O&>pQQO1G0^O&@RQQO1G0^O&AaQQO1G0^O&BlQQO1G0^O&B|QQO1G0^O&C^QQO1G0^O&FTQQO1G0^O&FeQQO1G0^O&FuQQO1G0^O&GVQQO1G0^O&GgQQO1G0^O&GwQQO1G0^O&HkQQO1G0^O&InQQO1G0^O&JOQQO1G0^O&JYQQO1G0^O&JmQQO1G0^O&J}QQO1G0^O&K[QQO1G0]O&L|QQO1G0]O&MpQQO1G0[O&M}QQO1G0[O&NoQQO1G0ZO&N|QPO1G3[O' bQQO,5:fO'!sQQO,5:rO'#WQQO7+%lO'%xQQO,5=vO'&]QQO1G1gO''PQQO1G1gO'(oQQO1G1gO'*oQQO1G1gO'*yQQO1G1gO'+^QQO1G1gO'+nQQO1G1gP'-fQQO'#E`P'-pQQO'#E`O'/OQQO'#E`O'1SQQO'#E`P'1ZQQO'#E`O'2oQQO'#E`O'2|QQO'#E`O'3WQQO'#EdO'%xQQO'#GaO'3bQPO7+(|O'-wQPO'#E`O'3jQPO'#E`O'3xQPO'#E`O'4WQQO'#EWO'5gQQO'#EVO'6ZQQO'#EVO'6}QQO'#EUO'7[QQO'#EUO'7|QQO'#ETO'8ZQPO'#HUO'8oQPO'#ERO'9TQPO'#FvO'9YQPO'#FaO'9_QPO'#FaO'9dQPO'#FaO'9iQPO'#FaO'9nQPO'#FaO'9sQPO'#FaO'9xQPO'#FaO&2bQQO,5<bO&2bQQO,5<bO'9}QQO'#GdO$NlQPO,5:eO';QQPO'#H[P&2bQQO,5;{P&2bQQO,5;{O&2bQQO,5;{O&2bQQO,5;{O&2bQQO,5;{O';VQQO'#DyO';aQPO1G3bO';iQQO,5:eP&2bQQO,5;{O'<|QQO,5:rO'>VQQO,5:rO'>jQPO'#ERO'?OQPO'#DyO#RQQO,5<bO'@]QPO'#ERO'@nQPO'#FvO>iQQO,5<bO'@sQPO'#Fv",
  stateData: "'A[~O%[OSPOSQOS~OVWO$vYO%_POm%^P!a%^P!b%^P$r%^P$t%^P~OZ[O[[O][O~O%_POm%^X!a%^X!b%^X$r%^X$t%^X~OW`OX`O~OmaO!acO!bbO$rdO$teO~OUiO`hOahOdhOfhOghOhhOihOk!UOo!VOp!VOq!VOr!VOs!VOt!VOu!VOv!VOw!VOx!VOy!VOz!VO{!VO|!VO}!VO!O!VO!P!VO!Q!VO!R!VO!S!VO!T!VO!U!VO!V!VO!W!VO!X!VO!Y!VO!Z!VO![!VO!]!VO!^!VO!_!VO!`!WO!a!WO!b!WO!d!SO!f!XO!g!XO!h!XO!i!XO!j!XO!p!RO!q!RO#Y!YO#}!ZO$RuO$SvO$]![O$^![O%akO%cfO%fqO%ggO%h!PO%j!QO%znO&PtO&RuO&SvO~O%a!^OmYa!aYa!bYa$rYa$tYa%_Ya~O%_POm%^a!a%^a!b%^a$r%^a$t%^a~OU!_Oo!VOp!VOq!VOr!VOs!VOt!VOu!VOv!VOw!VOx!VOy!VOz!VO{!VO|!VO}!VO!O!VO!P!VO!Q!VO!R!VO!S!VO!T!VO!U!VO!V!VO!W!VO!X!VO!Y!VO!Z!VO![!VO!]!VO!^!VO!_!VO!`!WO!a!WO!b!WO!f!XO!g!XO!h!XO!i!XO!j!XO%a!aO~O!`!fO~O!`!gO~OU!_Oo!VOp!VOq!VOr!VOs!VOt!VOu!VOv!VOw!VOx!VOy!VOz!VO{!VO|!VO}!VO!O!VO!P!VO!Q!VO!R!VO!S!VO!T!VO!U!VO!V!VO!W!VO!X!VO!Y!VO!Z!VO![!VO!]!VO!^!VO!_!VO!`!WO!a!WO!b!WO!f!XO!g!XO!h!XO!i!XO!j!XO~O%a!hO%t!iO&P%rP&U%rP~P+`Od!rOf!sO%d!qO%e!pO%f!pO~O!}%oX#T%oX#U%oX#V%oX#X%oX#Y%oX#Z%oX#[%oX#]%oX#^%oX#_%oX#`%oX#a%oX#b%oX#c%oX#d%oX#e%oX#f%oX#g%oX#h%oX#i%oX#j%oX#k%oX#l%oX#m%oX#n%oX#o%oX#p%oX#q%oX#r%oX#s%oX#t%oX#u%oX#v%oX#w%oX#x%oX#y%oX#z%oX#{%oX#|%oX$U%oX$V%oX$W%oX$X%oX$Y%oX$Z%oX$[%oX$_%oX$`%oX$a%oX$b%oX$c%oX$d%oX$e%oX$f%oX$g%oX$h%oX$i%oX$l%oX$m%oX$w%oX%a%oX%m%oX%t%oX%y%oX%|%oX%}%oX%n%oX&Q%oX$O%oX%s%oXV%oXm%oX!a%oX!b%oX$r%oX$t%oX$v%oX%Y%oX%_%oX$P%oX$Q%oX~O%c!kX%c%oX~P.qO%c!tO~P.qOUiO`hOahOdhOfhOghOhhOihOk!UOo!VOp!VOq!VOr!VOs!VOt!VOu!VOv!VOw!VOx!VOy!VOz!VO{!VO|!VO}!VO!O!VO!P!VO!Q!VO!R!VO!S!VO!T!VO!U!VO!V!VO!W!VO!X!VO!Y!VO!Z!VO![!VO!]!VO!^!VO!_!VO!`!WO!a!WO!b!WO!d!vO!f!XO!g!XO!h!XO!i!XO!j!XO!p!RO!q!RO#Y!YO#}!ZO$RuO$S'}O$](VO$^(VO%akO%cfO%fqO%ggO%h!PO%j!QO%m!yO%n!xO%znO%|!yO&PtO&RuO&S'}O~O!}!{X#U!{X#V!{X#X!{X#Y!{X#Z!{X#[!{X#]!{X#^!{X#_!{X#`!{X#a!{X#b!{X#c!{X#d!{X#e!{X#f!{X#g!{X#h!{X#i!{X#j!{X#k!{X#l!{X#m!{X#n!{X#o!{X#p!{X#q!{X#r!{X#s!{X#t!{X#u!{X#v!{X#w!{X#x!{X#y!{X#z!{X#{!{X#|!{X$U!{X$V!{X$W!{X$X!{X$Y!{X$Z!{X$[!{X$_!{X$`!{X$a!{X$b!{X$c!{X$d!{X$e!{X$f!{X$g!{X$h!{X$i!{X$w!{X%a!{X%m!{X%t!{X%|!{X%}!{X%n!{X&Q!{X$O!{X%s!{XV!{Xm!{X!a!{X!b!{X$r!{X$t!{X$v!{X%Y!{X%_!{X$P!{X#T!{X$Q!{X~O%c!kX~P9SO%c!tO~OUiO`hOahOdhOfhOghOhhOihOk!UOo!VOp!VOq!VOr!VOs!VOt!VOu!VOv!VOw!VOx!VOy!VOz!VO{!VO|!VO}!VO!O!VO!P!VO!Q!VO!R!VO!S!VO!T!VO!U!VO!V!VO!W!VO!X!VO!Y!VO!Z!VO![!VO!]!VO!^!VO!_!VO!`!WO!a!WO!b!WO!d!SO!f!XO!g!XO!h!XO!i!XO!j!XO!p!RO!q!RO#Y!YO#}!ZO$RuO$S'}O$](VO$^(VO%akO%cfO%fqO%ggO%h!PO%j!QO%znO&PtO&RuO&S'}O~O#T!|O%c#SX%n#SX~O!}!{X#T!nX#U!{X#V!{X#X!{X#Y!{X#Z!{X#[!{X#]!{X#^!{X#_!{X#`!{X#a!{X#b!{X#c!{X#d!{X#e!{X#f!{X#g!{X#h!{X#i!{X#j!{X#k!{X#l!{X#m!{X#n!{X#o!{X#p!{X#q!{X#r!{X#s!{X#t!{X#u!{X#v!{X#w!{X#x!{X#y!{X#z!{X#{!{X#|!{X$U!{X$V!{X$W!{X$X!{X$Y!{X$Z!{X$[!{X$_!{X$`!{X$a!{X$b!{X$c!{X$d!{X$e!{X$f!{X$g!{X$h!{X$i!{X$w!{X%a!{X%c!nX%m!nX%m!{X%t!{X%|!{X%}!{X%n!nX%n!{X&Q!{X$O!{X%s!{XV!{Xm!{X!a!{X!b!{X$r!{X$t!{X$v!{X%Y!{X%_!{X$P!{X$Q!{X~O$l#OO$m#OO%y!}O~PCXO!}#RO#X#SO#Y#TO#Z#SO#[#SO#]#SO#^#SO#_#SO#`#SO#a#SO#b#TO#c#TO#d#TO#e#UO#f#TO#g#UO#h#VO#i#VO#j#VO#k#VO#l#WO#m#VO#n#VO#o#VO#p#VO#q#VO#r#VO#s#VO#t#VO#u#VO#v#VO#w#VO#x#VO#y#VO#z#VO#{#VO#|#VO%a#QO%t#PO~O#U!zX#V!zX$U!zX$V!zX$W!zX$X!zX$Y!zX$Z!zX$[!zX$_!zX$`!zX$a!zX$b!zX$c!zX$d!zX$e!zX$f!zX$g!zX$h!zX$i!zX$w!zX%m!zX%|!zX%}!zX%n!zX&Q!zX$O!zX%s!zXV!zXm!zX!a!zX!b!zX$r!zX$t!zX$v!zX%Y!zX%_!zX$P!zX$Q!zX~PHxO%m#XO%|#XO&Q!xO~P#RO%a#ZO~O$U#^O$V#^O$W#_O$X#_O$Y#`O$Z#`O$[#`O$_#aO$`#aO$a#aO$b#bO$c#bO$d#bO$e#bO#U!yX#V!yX$f!yX$g!yX$h!yX$i!yX%|!yX%}!yX~O$w!yX%m!yX&Q!yX$O!yXV!yXm!yX!a!yX!b!yX$r!yX$t!yX$v!yX%Y!yX%_!yX$P!yX$Q!yX~PNfO#U!xX#V!xX$h!xX$i!xX%m!xX%|!xX%}!xX~O$f#cO$g#cO$w!xX&Q!xX$O!xXV!xXm!xX!a!xX!b!xX$r!xX$t!xX$v!xX%Y!xX%_!xX$P!xX$Q!xX~P!#PO#U!wX#V!wX%m!wX%|!wX%}!wX~O$h#dO$i#dO$w!wX&Q!wX$O!wXV!wXm!wX!a!wX!b!wX$r!wX$t!wX$v!wX%Y!wX%_!wX$P!wX$Q!wX~P!$nO%m#eO#U%xX#V%xX$w%xX%|%xX%}%xX&Q%xX$O%xXV%xXm%xX!a%xX!b%xX$r%xX$t%xX$v%xX%Y%xX%_%xX$P%xX$Q%xX~O#U#gO#V#gO%|#fO%}#gO$w!uX$O!uXV!uXm!uX!a!uX!b!uX$r!uX$t!uX$v!uX%Y!uX%_!uX&Q!uX$P!uX$Q!uX~O%c#hO~O%u#mO%v#iO%w#kO~O%v#iO%w#kO&T#oO~O%m#pO#T!mX%c!mX%n!mX~O%h#rO%j#sO%k#tO%l#uO~OU'rO`hOahOdhOfhOghOhhOihOk!UOo!VOp!VOq!VOr!VOs!VOt!VOu!VOv!VOw!VOx!VOy!VOz!VO{!VO|!VO}!VO!O!VO!P!VO!Q!VO!R!VO!S!VO!T!VO!U!VO!V!VO!W!VO!X!VO!Y!VO!Z!VO![!VO!]!VO!^!VO!_!VO!`!WO!a!WO!b!WO!f!XO!g!XO!h!XO!i!XO!j!XO!p!RO!q!RO#Y!YO#}!ZO$RuO%a#wO%cfO%fqO%ggO%h!PO%j!QO%znO&PtO&RuO~O$SvO$]![O$^![O&SvO~P!)wO$w#{O~O`hOahOdhOfhOghOhhOihOk!UO%cfO%ggO~O%a%oX%t%oX&P%oX&U%oXV%oXm%oX!a%oX!b%oX$Q%oX$r%oX$t%oX$v%oX%_%oX%Y%oX~O%c!kX~P!/SO%c!tO~P!/SO!d$QO~O%anX%tnX&PnX&UnXVnXmnX!anX!bnX$QnX$rnX$tnX$vnX%_nX%YnX~O%c!kX~P!0eO%c!tO~P!0eO%a$RO%t!iO&P%rP&U%rP~OU!WOo!VOp!VOq!VOr!VOs!VOt!VOu!VOv!VOw!VOx!VOy!VOz!VO{!VO|!VO}!VO!O!VO!P!VO!Q!VO!R!VO!S!VO!T!VO!U!VO!V!VO!W!VO!X!VO!Y!VO!Z!VO![!VO!]!VO!^!VO!_!VO!`!WO!a!WO!b!WO!d!vO!p!RO!q!RO%h!PO%j!QO%n$WO~P!.bOU!WOo!VOp!VOq!VOr!VOs!VOt!VOu!VOv!VOw!VOx!VOy!VOz!VO{!VO|!VO}!VO!O!VO!P!VO!Q!VO!R!VO!S!VO!T!VO!U!VO!V!VO!W!VO!X!VO!Y!VO!Z!VO![!VO!]!VO!^!VO!_!VO!`!WO!a!WO!b!WO!d!SO!p!RO!q!RO%h!PO%j!QO%s$YO~P!.bO%a$RO%t!iO&P%rX&U%rX~O&P$_O&U$^O~O$Q$cO%t!iO~P]O%e$dO%f$dO~OU$eO%a!aO~O%c!tO%a!ea%t!eaV!eam!ea!a!ea!b!ea$r!ea$t!ea$v!ea%Y!ea%_!ea$Q!ea~O!}!ea#U!ea#V!ea#X!ea#Y!ea#Z!ea#[!ea#]!ea#^!ea#_!ea#`!ea#a!ea#b!ea#c!ea#d!ea#e!ea#f!ea#g!ea#h!ea#i!ea#j!ea#k!ea#l!ea#m!ea#n!ea#o!ea#p!ea#q!ea#r!ea#s!ea#t!ea#u!ea#v!ea#w!ea#x!ea#y!ea#z!ea#{!ea#|!ea$U!ea$V!ea$W!ea$X!ea$Y!ea$Z!ea$[!ea$_!ea$`!ea$a!ea$b!ea$c!ea$d!ea$e!ea$f!ea$g!ea$h!ea$i!ea$w!ea%m!ea%|!ea%}!ea%n!ea&Q!ea$O!ea%s!ea$P!ea#T!ea~P!8kO%n$hO#T!nX%c!nX%m!nX~O%c)jO%n$iO~O%n$jO~O%m$kO%n$jO%|$kO~O%n$lO~OUiOo!VOp!VOq!VOr!VOs!VOt!VOu!VOv!VOw!VOx!VOy!VOz!VO{!VO|!VO}!VO!O!VO!P!VO!Q!VO!R!VO!S!VO!T!VO!U!VO!V!VO!W!VO!X!VO!Y!VO!Z!VO![!VO!]!VO!^!VO!_!VO!`!WO!a!WO!b!WO!f!XO!g!XO!h!XO!i!XO!j!XO!p!RO!q!RO#Y(UO#}!ZO$RuO$S(QO$](YO$^(YO%a#wO%fqO%h!PO%j!QO%znO&PtO&RuO&S(QO~P!.bO$l$nO$m$nO!}!{a#T!na#U!{a#V!{a#X!{a#Y!{a#Z!{a#[!{a#]!{a#^!{a#_!{a#`!{a#a!{a#b!{a#c!{a#d!{a#e!{a#f!{a#g!{a#h!{a#i!{a#j!{a#k!{a#l!{a#m!{a#n!{a#o!{a#p!{a#q!{a#r!{a#s!{a#t!{a#u!{a#v!{a#w!{a#x!{a#y!{a#z!{a#{!{a#|!{a$U!{a$V!{a$W!{a$X!{a$Y!{a$Z!{a$[!{a$_!{a$`!{a$a!{a$b!{a$c!{a$d!{a$e!{a$f!{a$g!{a$h!{a$i!{a$w!{a%a!{a%c!na%m!na%t!{a%|!{a%}!{a%n!{a&Q!{a$O!{a%s!{aV!{am!{a!a!{a!b!{a$r!{a$t!{a$v!{a%Y!{a%_!{a$P!{a$Q!{a~O%m!{a%n!na~P!BlOUiOo!VOp!VOq!VOr!VOs!VOt!VOu!VOv!VOw!VOx!VOy!VOz!VO{!VO|!VO}!VO!O!VO!P!VO!Q!VO!R!VO!S!VO!T!VO!U!VO!V!VO!W!VO!X!VO!Y!VO!Z!VO![!VO!]!VO!^!VO!_!VO!`!WO!a!WO!b!WO!f!XO!g!XO!h!XO!i!XO!j!XO!p!RO!q!RO#Y(UO#}!ZO$RuO%a#wO%fqO%h!PO%j!QO%znO&PtO&RuO~P!.bOUiOo!VOp!VOq!VOr!VOs!VOt!VOu!VOv!VOw!VOx!VOy!VOz!VO{!VO|!VO}!VO!O!VO!P!VO!Q!VO!R!VO!S!VO!T!VO!U!VO!V!VO!W!VO!X!VO!Y!VO!Z!VO![!VO!]!VO!^!VO!_!VO!`!WO!a!WO!b!WO!d$uO!f!XO!g!XO!h!XO!i!XO!j!XO!p!RO!q!RO#Y!YO#}!ZO$RuO$SvO$]![O$^![O%akO%fqO%h!PO%j!QO%s$jO%znO&PtO&RuO&SvO~P!.bOUiOo!VOp!VOq!VOr!VOs!VOt!VOu!VOv!VOw!VOx!VOy!VOz!VO{!VO|!VO}!VO!O!VO!P!VO!Q!VO!R!VO!S!VO!T!VO!U!VO!V!VO!W!VO!X!VO!Y!VO!Z!VO![!VO!]!VO!^!VO!_!VO!`!WO!a!WO!b!WO!d$uO!f!XO!g!XO!h!XO!i!XO!j!XO!p!RO!q!RO#Y!YO#}!ZO$RuO$S'}O$](VO$^(VO%akO%fqO%h!PO%j!QO%n$jO%znO&PtO&RuO&S'}O~P!.bO&Q$jO~O%m%PO%|%PO&Q$jO~OU!WOo!VOp!VOq!VOr!VOs!VOt!VOu!VOv!VOw!VOx!VOy!VOz!VO{!VO|!VO}!VO!O!VO!P!VO!Q!VO!R!VO!S!VO!T!VO!U!VO!V!VO!W!VO!X!VO!Y!VO!Z!VO![!VO!]!VO!^!VO!_!VO!`!WO!a!WO!b!WO!d!SO!p!RO!q!RO%a%QO%h!PO%j!QO~P!.bO%c%SO~O%e%`O~O%h%dO%u%bO%v#iO%w#kO~O%j%hO%v#iO%w#kO&T%fO~OU!WOo!VOp!VOq!VOr!VOs!VOt!VOu!VOv!VOw!VOx!VOy!VOz!VO{!VO|!VO}!VO!O!VO!P!VO!Q!VO!R!VO!S!VO!T!VO!U!VO!V!VO!W!VO!X!VO!Y!VO!Z!VO![!VO!]!VO!^!VO!_!VO!`!WO!a!WO!b!WO!d!SO!p!RO!q!RO%h!PO%j!QO~P!.bO%m#pO#T!ma%c!ma%n!ma~O%h%nO%i%lO~O%h%oO%i%oO%j%nO~O%h%qO%i%qO%j%qO%k%nO~O%h%sO%i%sO%j%sO%k%sO%l%nO~O%y!xO%c!{X~P9SO#U!{a#V!{a#Y!{a#Z!{a#[!{a#]!{a#^!{a#_!{a#`!{a#a!{a#b!{a#c!{a#d!{a#e!{a#f!{a#g!{a#h!{a#i!{a#j!{a#k!{a#l!{a#m!{a#n!{a#o!{a#p!{a#q!{a#r!{a#s!{a#t!{a#u!{a#v!{a#w!{a#x!{a#y!{a#z!{a#{!{a#|!{a$U!{a$V!{a$W!{a$X!{a$Y!{a$Z!{a$[!{a$_!{a$`!{a$a!{a$b!{a$c!{a$d!{a$e!{a$f!{a$g!{a$h!{a$i!{a$w!{a%|!{a%}!{a%n!{a&Q!{a$O!{a%s!{aV!{am!{a!a!{a!b!{a$r!{a$t!{a$v!{a%Y!{a%_!{a$P!{a$Q!{a~O!}#RO#X#SO%a#QO%t#PO%m!{a#T!{a~P#-oO$O%uO~OU!WOo!VOp!VOq!VOr!VOs!VOt!VOu!VOv!VOw!VOx!VOy!VOz!VO{!VO|!VO}!VO!O!VO!P!VO!Q!VO!R!VO!S!VO!T!VO!U!VO!V!VO!W!VO!X!VO!Y!VO!Z!VO![!VO!]!VO!^!VO!_!VO!`!WO!a!WO!b!WO!d%vO~O%y%xO~P#3RO%m%yO%n%bX~O%n%{O~O&P!ea&U!ea~P!8kO%n$hO~OU!WOo!VOp!VOq!VOr!VOs!VOt!VOu!VOv!VOw!VOx!VOy!VOz!VO{!VO|!VO}!VO!O!VO!P!VO!Q!VO!R!VO!S!VO!T!VO!U!VO!V!VO!W!VO!X!VO!Y!VO!Z!VO![!VO!]!VO!^!VO!_!VO!`!WO!a!WO!b!WO!d!SO!p!RO!q!RO%h!PO%j!QO%n$WO~P!.bO&P%}O&U%|O~O%a$RO%t!iOV$oqm$oq!a$oq!b$oq$r$oq$t$oq$v$oq%Y$oq%_$oq&P%rP&U%rP$Q$oq~O%a$RO%t!iOV$pqm$pq!a$pq!b$pq$r$pq$t$pq$v$pq%Y$pq%_$pq&P%rP&U%rP$Q$pq~O%m!nX%n!nX#T!nX#U!nX#V!nX$U!nX$V!nX$W!nX$X!nX$Y!nX$Z!nX$[!nX$_!nX$`!nX$a!nX$b!nX$c!nX$d!nX$e!nX%}!nX~O$l(hO$m(hO%y&QO%s!nX$w!nX%|!nX&Q!nX$f!nX$g!nX$h!nX$i!nX$O!nXV!nXm!nX!a!nX!b!nX$r!nX$t!nX$v!nX%Y!nX%_!nX$P!nX$Q!nX~P#;RO%n&RO~O%s&SO~O&P&WO&U&VO~O$Q&YO%t!iO~P]O$Q&YO~P]O%n&ZO~O$U(rO$V(rO$W(yO$X(yO$Y)QO$Z)QO$[)QO$_)XO$`)XO$a)XO$b)`O$c)`O$d)`O$e)`O~O%c#Si%n#Si~P#>xO!}(iO#X(jO#Y(kO#Z(jO#[(jO#](jO#^(jO#_(jO#`(jO#a(jO#b(kO#c(kO#d(kO#e(lO#f(kO#g(lO#h(mO#i(mO#j(mO#k(mO#l(nO#m(mO#n(mO#o(mO#p(mO#q(mO#r(mO#s(mO#t(mO#u(mO#v(mO#w(mO#x(mO#y(mO#z(mO#{(mO#|(mO%a#QO%t#PO~O#T!ni%c!ni%m!ni%n!ni$U!ni$V!ni$W!ni$X!ni$Y!ni$Z!ni$[!ni$_!ni$`!ni$a!ni$b!ni$c!ni$d!ni$e!ni#U!ni#V!ni%}!ni~P#@QO$h)gO$i)gO#U%{X#V%{X%s%{X%|%{X%}%{X%n%{X~O#U&`O#V&`O%|&_O%}&`O%s#PX%n#PX~O%c&aO~O#T!nX%c!nX%m!nX%m#WX%s#OX%n#OX~O%m#WX%s!yX~PNfO%m&bO~O%s&ZO~O!}#RO#X#SO%a#QO%t#PO#U!{i#V!{i#Y!{i#b!{i#c!{i#d!{i#e!{i#f!{i#g!{i#h!{i#i!{i#j!{i#k!{i#l!{i#m!{i#n!{i#o!{i#p!{i#q!{i#r!{i#s!{i#t!{i#u!{i#v!{i#w!{i#x!{i#y!{i#z!{i#{!{i#|!{i$U!{i$V!{i$W!{i$X!{i$Y!{i$Z!{i$[!{i$_!{i$`!{i$a!{i$b!{i$c!{i$d!{i$e!{i$f!{i$g!{i$h!{i$i!{i$w!{i%m!{i%|!{i%}!{i%n!{i&Q!{i$O!{i%s!{iV!{im!{i!a!{i!b!{i$r!{i$t!{i$v!{i%Y!{i%_!{i$P!{i#T!{i$Q!{i~O#Z!{i#[!{i#]!{i#^!{i#_!{i#`!{i#a!{i~P#FRO#Z#SO#[#SO#]#SO#^#SO#_#SO#`#SO#a#SO~P#FRO!}#RO#X#SO#Y#TO#Z#SO#[#SO#]#SO#^#SO#_#SO#`#SO#a#SO#b#TO#c#TO#d#TO#f#TO%a#QO%t#PO#U!{i#V!{i#h!{i#i!{i#j!{i#k!{i#l!{i#m!{i#n!{i#o!{i#p!{i#q!{i#r!{i#s!{i#t!{i#u!{i#v!{i#w!{i#x!{i#y!{i#z!{i#{!{i#|!{i$U!{i$V!{i$W!{i$X!{i$Y!{i$Z!{i$[!{i$_!{i$`!{i$a!{i$b!{i$c!{i$d!{i$e!{i$f!{i$g!{i$h!{i$i!{i$w!{i%m!{i%|!{i%}!{i%n!{i&Q!{i$O!{i%s!{iV!{im!{i!a!{i!b!{i$r!{i$t!{i$v!{i%Y!{i%_!{i$P!{i#T!{i$Q!{i~O#e!{i#g!{i~P#KyO#e#UO#g#UO~P#KyO#U!{i#V!{i$U!{i$V!{i$W!{i$X!{i$Y!{i$Z!{i$[!{i$_!{i$`!{i$a!{i$b!{i$c!{i$d!{i$e!{i$f!{i$g!{i$h!{i$i!{i$w!{i%m!{i%|!{i%}!{i%n!{i&Q!{i$O!{i%s!{iV!{im!{i!a!{i!b!{i$r!{i$t!{i$v!{i%Y!{i%_!{i$P!{i#T!{i$Q!{i~PHxO&Q&ZO~O%c&dO~O#U!zi#V!zi$W!zi$X!zi$Y!zi$Z!zi$[!zi$_!zi$`!zi$a!zi$b!zi$c!zi$d!zi$e!zi$f!zi$g!zi$h!zi$i!zi$w!zi%|!zi%}!zi&Q!zi$O!zi%s!ziV!zim!zi!a!zi!b!zi$r!zi$t!zi$v!zi%Y!zi%_!zi$P!zi$Q!zi~O$U#^O$V#^O%m!zi~P$&^O$U#^O$V#^O$W#_O$X#_O$Y#`O$Z#`O#U!zi#V!zi$b!zi$c!zi$d!zi$e!zi$f!zi$g!zi$h!zi$i!zi$w!zi%m!zi%|!zi%}!zi&Q!zi$O!zi%s!ziV!zim!zi!a!zi!b!zi$r!zi$t!zi$v!zi%Y!zi%_!zi$P!zi$Q!zi~O$[!zi$_!zi$`!zi$a!zi~P$(zO$[#`O$_#aO$`#aO$a#aO~P$(zO#U!zi#V!zi$f!zi$g!zi$h!zi$i!zi$w!zi%|!zi%}!zi&Q!zi$O!zi%s!ziV!zim!zi!a!zi!b!zi$r!zi$t!zi$v!zi%Y!zi%_!zi$P!zi$Q!zi~O$U#^O$V#^O$W#_O$X#_O$Y#`O$Z#`O$[#`O$_#aO$`#aO$a#aO$b#bO$c#bO$d#bO$e#bO%m!zi~P$+xO$U#^O$V#^O$W#_O$X#_O$Y#`O$Z#`O$[#`O$_#aO$`#aO$a#aO$b#bO$c#bO$d#bO$e#bO~O#U!yi#V!yi$f!yi$g!yi$h!yi$i!yi$w!yi%m!yi%|!yi%}!yi&Q!yi$O!yiV!yim!yi!a!yi!b!yi$r!yi$t!yi$v!yi%Y!yi%_!yi$P!yi$Q!yi~P$.fO#U!xi#V!xi$h!xi$i!xi%m!xi%|!xi%}!xi~O$f#cO$g#cO$w!xi&Q!xi$O!xiV!xim!xi!a!xi!b!xi$r!xi$t!xi$v!xi%Y!xi%_!xi$P!xi$Q!xi~P$1PO#U!wi#V!wi%m!wi%|!wi%}!wi~O$h#dO$i#dO$w!wi&Q!wi$O!wiV!wim!wi!a!wi!b!wi$r!wi$t!wi$v!wi%Y!wi%_!wi$P!wi$Q!wi~P$2nO%m#eO#U%xi#V%xi$w%xi%|%xi%}%xi&Q%xi$O%xiV%xim%xi!a%xi!b%xi$r%xi$t%xi$v%xi%Y%xi%_%xi$P%xi$Q%xi~O%n&iO~O%h&kO%u%bO%v#iO%w#kO~O%j&nO%v#iO%w#kO&T%fO~O%h&qO%i%lO~O%h%oO%i%oO%j&qO~O%h%qO%i%qO%j%qO%k&qO~O%h%sO%i%sO%j%sO%k%sO%l&qO~O$y&vOV$xXm$xX!a$xX!b$xX$r$xX$t$xX$v$xX%Y$xX%_$xX%m$xX$Q$xX~O%m&wOV&VXm&VX!a&VX!b&VX$r&VX$t&VX$v&VX%Y&VX%_&VX$Q&VX~O%m%yO%n%ba~O&P'OO&U&}O~O&P'QO&U'PO~O%m!na%n!na#T!na#U!na#V!na$U!na$V!na$W!na$X!na$Y!na$Z!na$[!na$_!na$`!na$a!na$b!na$c!na$d!na$e!na%}!na~O$l)tO$m)tO%s!na$w!na%|!na&Q!na$f!na$g!na$h!na$i!na$O!naV!nam!na!a!na!b!na$r!na$t!na$v!na%Y!na%_!na$P!na$Q!na~P$9`O&Q'RO~O$Q'TO~P]O$U!za$V!za$W!za$X!za$Y!za$Z!za$[!za$_!za$`!za$a!za$b!za$c!za$d!za$e!za%n!za~O#U*TO#V*TO%}*TO%c!za~P$<fO#T!nq%c!nq%m!nq%n!nq$U!nq$V!nq$W!nq$X!nq$Y!nq$Z!nq$[!nq$_!nq$`!nq$a!nq$b!nq$c!nq$d!nq$e!nq#U!nq#V!nq%}!nq~P#@QO$S(OO$](WO$^(WO&S(OO~P!)wOUiOo!VOp!VOq!VOr!VOs!VOt!VOu!VOv!VOw!VOx!VOy!VOz!VO{!VO|!VO}!VO!O!VO!P!VO!Q!VO!R!VO!S!VO!T!VO!U!VO!V!VO!W!VO!X!VO!Y!VO!Z!VO![!VO!]!VO!^!VO!_!VO!`!WO!a!WO!b!WO!d!SO!f!XO!g!XO!h!XO!i!XO!j!XO!p!RO!q!RO#Y!YO#}!ZO$RuO$S(OO$](WO$^(WO%akO%fqO%h!PO%j!QO%znO&PtO&RuO&S(OO~P!.bO!d'WO$S(SO$]([O$^([O&S(SO~P!)wO#U$Ti#V$Ti$f$Ti$g$Ti$h$Ti$i$Ti$w$Ti%m$Ti%|$Ti%}$Ti&Q$Ti$O$Ti%s$TiV$Tim$Ti!a$Ti!b$Ti$r$Ti$t$Ti$v$Ti%Y$Ti%_$Ti$P$Ti$Q$Ti~P$.fO#T(`O~Q#SX#T!mX#U!mX#V!mX$U!mX$V!mX$W!mX$X!mX$Y!mX$Z!mX$[!mX$_!mX$`!mX$a!mX$b!mX$c!mX$d!mX$e!mX%}!mX%n!mX~O%m+tO$f!mX$g!mX$h!mX$i!mX$w!mX%|!mX&Q!mX$O!mX%s!mXV!mXm!mX!a!mX!b!mX$r!mX$t!mX$v!mX%Y!mX%_!mX$P!mX$Q!mX~P$EoO%h']O%u%bO%v#iO%w#kO~O%j'^O%v#iO%w#kO&T%fO~O$P'_O~OU!WOo!VOp!VOq!VOr!VOs!VOt!VOu!VOv!VOw!VOx!VOy!VOz!VO{!VO|!VO}!VO!O!VO!P!VO!Q!VO!R!VO!S!VO!T!VO!U!VO!V!VO!W!VO!X!VO!Y!VO!Z!VO![!VO!]!VO!^!VO!_!VO!`!WO!a!WO!b!WO~O!d'`O~P$IUO%m&wOV&Vam&Va!a&Va!b&Va$r&Va$t&Va$v&Va%Y&Va%_&Va$Q&Va~O&Q'cO~O&Q'hO~O$h)gO$i)gO#U%{i#V%{i%s%{i%|%{i%}%{i%n%{i~O$U(tO$V(tO$W({O$X({O$Y)SO$Z)SO$[)SO$_)ZO$`)ZO$a)ZO$b)bO$c)bO$d)bO$e)bO~O%m#WX%s#WX~P$MVO%m'iO%s&Oi~O%n'kO~O%m+tO#T!ma$w!ma%|!ma%n!ma&Q!ma$O!ma%s!maV!mam!ma!a!ma!b!ma$r!ma$t!ma$v!ma%Y!ma%_!ma$P!ma$Q!ma~O#U!ma#V!ma$U!ma$V!ma$W!ma$X!ma$Y!ma$Z!ma$[!ma$_!ma$`!ma$a!ma$b!ma$c!ma$d!ma$e!ma$f!ma$g!ma$h!ma$i!ma%}!ma~P$NlO&Q'mO~O&Q'nO~O%m'iO%s&Oq~O$Q'qO~O!}%oX#U%oX#V%oX#X%oX#Y%oX#Z%oX#[%oX#]%oX#^%oX#_%oX#`%oX#a%oX#b%oX#c%oX#d%oX#e%oX#f%oX#g%oX#h%oX#i%oX#j%oX#k%oX#l%oX#m%oX#n%oX#o%oX#p%oX#q%oX#r%oX#s%oX#t%oX#u%oX#v%oX#w%oX#x%oX#y%oX#z%oX#{%oX#|%oX$U%oX$V%oX$W%oX$X%oX$Y%oX$Z%oX$[%oX$_%oX$`%oX$a%oX$b%oX$c%oX$d%oX$e%oX%a%oX%m%oX%t%oX%y%oX%}%oX%n%oX#T%oX~O$f%oX$g%oX$h%oX$i%oX$w%oX%c!kX%|%oX&Q%oX$O%oX%s%oXV%oXm%oX!a%oX!b%oX$r%oX$t%oX$v%oX%Y%oX%_%oX$P%oX$Q%oX~P%#wO%c!tO$l%oX$m%oX~P%#wO!}!{X#X!{X#Y!{X#Z!{X#[!{X#]!{X#^!{X#_!{X#`!{X#a!{X#b!{X#c!{X#d!{X#e!{X#f!{X#g!{X#h!{X#i!{X#j!{X#k!{X#l!{X#m!{X#n!{X#o!{X#p!{X#q!{X#r!{X#s!{X#t!{X#u!{X#v!{X#w!{X#x!{X#y!{X#z!{X#{!{X#|!{X$U!{X$V!{X$W!{X$X!{X$Y!{X$Z!{X$[!{X$_!{X$`!{X$a!{X$b!{X$c!{X$d!{X$e!{X%a!{X%c!{X%t!{X%n!{X#U!{X#V!{X%}!{X~O%c!kX#T!{X%m!{X~P%)iO$l#OO$m#OO%y(eO#T!nX%c!nX%m!nX~P%)iO!}!{X#T!nX#U!{X#V!{X#X!{X#Y!{X#Z!{X#[!{X#]!{X#^!{X#_!{X#`!{X#a!{X#b!{X#c!{X#d!{X#e!{X#f!{X#g!{X#h!{X#i!{X#j!{X#k!{X#l!{X#m!{X#n!{X#o!{X#p!{X#q!{X#r!{X#s!{X#t!{X#u!{X#v!{X#w!{X#x!{X#y!{X#z!{X#{!{X#|!{X$U!{X$V!{X$W!{X$X!{X$Y!{X$Z!{X$[!{X$_!{X$`!{X$a!{X$b!{X$c!{X$d!{X$e!{X$f!{X$g!{X$h!{X$i!{X%a!{X%c!nX%m!nX%s!{X%t!{X%|!{X%}!{X%n!{X$w!{X$O!{XV!{Xm!{X!a!{X!b!{X$r!{X$t!{X$v!{X%Y!{X%_!{X&Q!{X$P!{X$Q!{X~O$l#OO$m#OO%y(fO~P%.UO!}!{X#T!nX#U!{X#V!{X#X!{X#Y!{X#Z!{X#[!{X#]!{X#^!{X#_!{X#`!{X#a!{X#b!{X#c!{X#d!{X#e!{X#f!{X#g!{X#h!{X#i!{X#j!{X#k!{X#l!{X#m!{X#n!{X#o!{X#p!{X#q!{X#r!{X#s!{X#t!{X#u!{X#v!{X#w!{X#x!{X#y!{X#z!{X#{!{X#|!{X$U!{X$V!{X$W!{X$X!{X$Y!{X$Z!{X$[!{X$_!{X$`!{X$a!{X$b!{X$c!{X$d!{X$e!{X$f!{X$g!{X$h!{X$i!{X%a!{X%c!nX%m!nX%m!{X%n!{X%t!{X%|!{X%}!{X~O$l#OO$m#OO%y(gO~P%3oOUiOo!VOp!VOq!VOr!VOs!VOt!VOu!VOv!VOw!VOx!VOy!VOz!VO{!VO|!VO}!VO!O!VO!P!VO!Q!VO!R!VO!S!VO!T!VO!U!VO!V!VO!W!VO!X!VO!Y!VO!Z!VO![!VO!]!VO!^!VO!_!VO!`!WO!a!WO!b!WO!d!SO!f!XO!g!XO!h!XO!i!XO!j!XO!p!RO!q!RO#Y(UO#}!ZO$RuO$S(RO$](ZO$^(ZO%akO%fqO%h!PO%j!QO%znO&PtO&RuO&S(RO~P!.bO$S'}O$](VO$^(VO&S'}O~P!)wO$S(PO$](XO$^(XO&S(PO~P!)wOUiOo!VOp!VOq!VOr!VOs!VOt!VOu!VOv!VOw!VOx!VOy!VOz!VO{!VO|!VO}!VO!O!VO!P!VO!Q!VO!R!VO!S!VO!T!VO!U!VO!V!VO!W!VO!X!VO!Y!VO!Z!VO![!VO!]!VO!^!VO!_!VO!`!WO!a!WO!b!WO!f!XO!g!XO!h!XO!i!XO!j!XO!p!RO!q!RO#Y(UO#}!ZO$RuO$S(RO$](ZO$^(ZO%a#wO%fqO%h!PO%j!QO%znO&PtO&RuO&S(RO~P!.bO$S(TO$](]O$^(]O&S(TO~P!)wO$l$nO$m$nO!}!{a#T!na#U!{a#V!{a#X!{a#Y!{a#Z!{a#[!{a#]!{a#^!{a#_!{a#`!{a#a!{a#b!{a#c!{a#d!{a#e!{a#f!{a#g!{a#h!{a#i!{a#j!{a#k!{a#l!{a#m!{a#n!{a#o!{a#p!{a#q!{a#r!{a#s!{a#t!{a#u!{a#v!{a#w!{a#x!{a#y!{a#z!{a#{!{a#|!{a$U!{a$V!{a$W!{a$X!{a$Y!{a$Z!{a$[!{a$_!{a$`!{a$a!{a$b!{a$c!{a$d!{a$e!{a%a!{a%c!na%m!na%t!{a%}!{a%n!{a~O%c!{a~P%@yO$f!{a$g!{a$h!{a$i!{a%m!{a%|!{a~P%@yO!}(iO#X(jO%a#QO%t#PO#Y!{a#Z!{a#[!{a#]!{a#^!{a#_!{a#`!{a#a!{a#b!{a#c!{a#d!{a#e!{a#f!{a#g!{a#h!{a#i!{a#j!{a#k!{a#l!{a#m!{a#n!{a#o!{a#p!{a#q!{a#r!{a#s!{a#t!{a#u!{a#v!{a#w!{a#x!{a#y!{a#z!{a#{!{a#|!{a$U!{a$V!{a$W!{a$X!{a$Y!{a$Z!{a$[!{a$_!{a$`!{a$a!{a$b!{a$c!{a$d!{a$e!{a%c!{a#T!{a%m!{a%n!{a#U!{a#V!{a%}!{a~O$l#OO$m#OO%y*xO%c!nX~P#;RO$w#Si%n#Si$O#Si%s#SiV#Sim#Si!a#Si!b#Si$r#Si$t#Si$v#Si%Y#Si%_#Si&Q#Si$P#Si$Q#Si~O$U(qO$V(qO$W(xO$X(xO$Y)PO$Z)PO$[)PO$_)WO$`)WO$a)WO$b)_O$c)_O$d)_O$e)_O~P%IzO$U(pO$V(pO$W(wO$X(wO$Y)OO$Z)OO$[)OO$_)VO$`)VO$a)VO$b)^O$c)^O$d)^O$e)^O~Q#Si$U#^O$V#^O$W#_O$X#_O$Y#`O$Z#`O$[#`O$_#aO$`#aO$a#aO$b#bO$c#bO$d#bO$e#bO~Q#Si$U(oO$V(oO$W(vO$X(vO$Y(}O$Z(}O$[(}O$_)UO$`)UO$a)UO$b)]O$c)]O$d)]O$e)]O~O#U#Si#V#Si$f#Si$g#Si$h#Si$i#Si%m#Si%n#Si%|#Si%}#Si~P%NOO%m#Si%|#Si&Q#Si%s#Si~P$MVO$U(uO$V(uO$W(|O$X(|O$Y)TO$Z)TO$[)TO$_)[O$`)[O$a)[O$b)cO$c)cO$d)cO$e)cO~O%m#Si%n#Si%|#Si~P&!QO$U(sO$V(sO$W(zO$X(zO$Y)RO$Z)RO$[)RO$_)YO$`)YO$a)YO$b)aO$c)aO$d)aO$e)aO~O#U#Si#V#Si%c#Si%}#Si%n#Si~P&#]O%m!ni%n!ni%s!ni#T!ni$w!ni%|!ni&Q!ni#U!ni#V!ni$U!ni$V!ni$W!ni$X!ni$Y!ni$Z!ni$[!ni$_!ni$`!ni$a!ni$b!ni$c!ni$d!ni$e!ni$f!ni$g!ni$h!ni$i!ni%}!ni$O!niV!nim!ni!a!ni!b!ni$r!ni$t!ni$v!ni%Y!ni%_!ni$P!ni$Q!ni~PHxO#U!yX#V!yX$f!yX$g!yX$h!yX$i!yX%m#WX%n!yX%|!yX%}!yX~P%NOO!}(iO#X(jO%a#QO%t#PO#Y!{i#b!{i#c!{i#d!{i#e!{i#f!{i#g!{i#h!{i#i!{i#j!{i#k!{i#l!{i#m!{i#n!{i#o!{i#p!{i#q!{i#r!{i#s!{i#t!{i#u!{i#v!{i#w!{i#x!{i#y!{i#z!{i#{!{i#|!{i$U!{i$V!{i$W!{i$X!{i$Y!{i$Z!{i$[!{i$_!{i$`!{i$a!{i$b!{i$c!{i$d!{i$e!{i%c!{i#T!{i%m!{i%n!{i#U!{i#V!{i%}!{i~O#Z!{i#[!{i#]!{i#^!{i#_!{i#`!{i#a!{i~P&(SO#Z(jO#[(jO#](jO#^(jO#_(jO#`(jO#a(jO~P&(SO!}(iO#X(jO#Y(kO#Z(jO#[(jO#](jO#^(jO#_(jO#`(jO#a(jO#b(kO#c(kO#d(kO#f(kO%a#QO%t#PO#h!{i#i!{i#j!{i#k!{i#l!{i#m!{i#n!{i#o!{i#p!{i#q!{i#r!{i#s!{i#t!{i#u!{i#v!{i#w!{i#x!{i#y!{i#z!{i#{!{i#|!{i$U!{i$V!{i$W!{i$X!{i$Y!{i$Z!{i$[!{i$_!{i$`!{i$a!{i$b!{i$c!{i$d!{i$e!{i%c!{i#T!{i%m!{i%n!{i#U!{i#V!{i%}!{i~O#e!{i#g!{i~P&,oO#e(lO#g(lO~P&,oO$U!{i$V!{i$W!{i$X!{i$Y!{i$Z!{i$[!{i$_!{i$`!{i$a!{i$b!{i$c!{i$d!{i$e!{i%c!{i#T!{i%m!{i%n!{i#U!{i#V!{i%}!{i~P#@QO`hOahOdhOfhOghOhhOihOk!UO!d!SO!p!RO!q!RO%a%QO%cfO%ggO%h!PO%j!QO~P$IUO#U!zi#V!zi$W!zi$X!zi$Y!zi$Z!zi$[!zi$_!zi$`!zi$a!zi$b!zi$c!zi$d!zi$e!zi$f!zi$g!zi$h!zi$i!zi%n!zi%|!zi%}!zi~O$U(oO$V(oO%m!zi~P&3hO$U(pO$V(pO%n!zi~P$&^O$U(qO$V(qO$[!zi$_!zi$`!zi$a!zi$b!zi$c!zi$d!zi$e!zi$w!zi%n!zi$O!zi%s!ziV!zim!zi!a!zi!b!zi$r!zi$t!zi$v!zi%Y!zi%_!zi&Q!zi$P!zi$Q!zi~O$W!zi$X!zi$Y!zi$Z!zi~P&5gO$W!zi$X!zi$Y!zi$Z!zi$[!zi$_!zi$`!zi$a!zi$b!zi$c!zi$d!zi$e!zi%c!zi%n!zi~O$U(rO$V(rO~P&7kO$U(sO$V(sO#U!zi#V!zi%}!zi~P&7kO$W!zi$X!zi$Y!zi$Z!zi$[!zi$_!zi$`!zi$a!zi$b!zi$c!zi$d!zi$e!zi%m!zi%|!zi~O$U(tO$V(tO%s!zi&Q!zi~P&9WO$U(uO$V(uO%n!zi~P&9WO$U(oO$V(oO$W(vO$X(vO$Y(}O$Z(}O#U!zi#V!zi$b!zi$c!zi$d!zi$e!zi$f!zi$g!zi$h!zi$i!zi%m!zi%n!zi%|!zi%}!zi~O$[!zi$_!zi$`!zi$a!zi~P&:sO$U(pO$V(pO$W(wO$X(wO$Y)OO$Z)OO$[!zi$_!zi$`!zi$a!zi$b!zi$c!zi$d!zi$e!zi%n!zi~P$+xO$W(xO$X(xO$Y)PO$Z)PO~P&5gO$U(rO$V(rO$W(yO$X(yO$Y)QO$Z)QO$b!zi$c!zi$d!zi$e!zi%c!zi%n!zi~O$[!zi$_!zi$`!zi$a!zi~P&=xO$U(sO$V(sO$W(zO$X(zO$Y)RO$Z)RO#U!zi#V!zi$b!zi$c!zi$d!zi$e!zi%c!zi%}!zi%n!zi~O$[!zi$_!zi$`!zi$a!zi~P&?QO$U(tO$V(tO$W({O$X({O$Y)SO$Z)SO$b!zi$c!zi$d!zi$e!zi%m!zi%s!zi%|!zi&Q!zi~O$[!zi$_!zi$`!zi$a!zi~P&@cO$U(uO$V(uO$W(|O$X(|O$Y)TO$Z)TO$b!zi$c!zi$d!zi$e!zi%m!zi%n!zi%|!zi~O$[!zi$_!zi$`!zi$a!zi~P&AqO$[(}O$_)UO$`)UO$a)UO~P&:sO$U(pO$V(pO$W(wO$X(wO$Y)OO$Z)OO$[)OO$_)VO$`)VO$a)VO$b!zi$c!zi$d!zi$e!zi%n!zi~P$+xO$U(qO$V(qO$W(xO$X(xO$Y)PO$Z)PO$[)PO$_)WO$`)WO$a)WO$w!zi%n!zi$O!zi%s!ziV!zim!zi!a!zi!b!zi$r!zi$t!zi$v!zi%Y!zi%_!zi&Q!zi$P!zi$Q!zi~O$b!zi$c!zi$d!zi$e!zi~P&DaO$[)QO$_)XO$`)XO$a)XO~P&=xO$[)RO$_)YO$`)YO$a)YO~P&?QO$[)SO$_)ZO$`)ZO$a)ZO~P&@cO$[)TO$_)[O$`)[O$a)[O~P&AqO#U!zi#V!zi$f!zi$g!zi$h!zi$i!zi%m!zi%n!zi%|!zi%}!zi~P%NOO$U(pO$V(pO$W(wO$X(wO$Y)OO$Z)OO$[)OO$_)VO$`)VO$a)VO$b)^O$c)^O$d)^O$e)^O%n!zi~P$+xO$b)_O$c)_O$d)_O$e)_O~P&DaO%c!zi%n!zi~P#>xO#U!zi#V!zi%c!zi%}!zi%n!zi~P&#]O%m!zi%s!zi%|!zi&Q!zi~P$MVO%m!zi%n!zi%|!zi~P&!QO#U!yi#V!yi$f!yi$g!yi$h!yi$i!yi%m!yi%n!yi%|!yi%}!yi~P%NOO$U(pO$V(pO$W(wO$X(wO$Y)OO$Z)OO$[)OO$_)VO$`)VO$a)VO$b)^O$c)^O$d)^O$e)^O~O#U!yi#V!yi$f!yi$g!yi$h!yi$i!yi%s!yi%|!yi%}!yi%n!yi~P&LOO$f)dO$g)dO%n!xi~P$1PO$f)eO$g)eO#U!xi#V!xi$h!xi$i!xi%s!xi%|!xi%}!xi%n!xi~O$h)fO$i)fO%n!wi~P$2nO%m)hO#U%xi#V%xi%n%xi%|%xi%}%xi~O$l$nO$m$nO%c!na~P$9`O$U!za$V!za$W!za$X!za$Y!za$Z!za$[!za$_!za$`!za$a!za$b!za$c!za$d!za$e!za%s!za&Q!za~O#U+zO#V+zO%}+zO%m!za%|!za~P' oO%m!nq%n!nq%s!nq#T!nq$w!nq%|!nq&Q!nq#U!nq#V!nq$U!nq$V!nq$W!nq$X!nq$Y!nq$Z!nq$[!nq$_!nq$`!nq$a!nq$b!nq$c!nq$d!nq$e!nq$f!nq$g!nq$h!nq$i!nq%}!nq$O!nqV!nqm!nq!a!nq!b!nq$r!nq$t!nq$v!nq%Y!nq%_!nq$P!nq$Q!nq~PHxO!d'WO$S(TO$](]O$^(]O&S(TO~P!)wO#U$Ti#V$Ti$f$Ti$g$Ti$h$Ti$i$Ti%m$Ti%n$Ti%|$Ti%}$Ti~P%NOO#U$Ti#V$Ti$f$Ti$g$Ti$h$Ti$i$Ti%s$Ti%|$Ti%}$Ti%n$Ti$w$Ti$O$TiV$Tim$Ti!a$Ti!b$Ti$r$Ti$t$Ti$v$Ti%Y$Ti%_$Ti&Q$Ti$P$Ti$Q$Ti~P&LOO$U(qO$V(qO$W(xO$X(xO$Y)PO$Z)PO$[)PO$_)WO$`)WO$a)WO$b)_O$c)_O$d)_O$e)_O$w$Ti%n$Ti$O$Ti%s$TiV$Tim$Ti!a$Ti!b$Ti$r$Ti$t$Ti$v$Ti%Y$Ti%_$Ti&Q$Ti$P$Ti$Q$Ti~O%c$Ti%n$Ti~P#>xO#U$Ti#V$Ti%c$Ti%}$Ti%n$Ti~P&#]O%m$Ti%s$Ti%|$Ti&Q$Ti~P$MVO%m$Ti%n$Ti%|$Ti~P&!QO#U#SX#V#SX$U#SX$V#SX$W#SX$X#SX$Y#SX$Z#SX$[#SX$_#SX$`#SX$a#SX$b#SX$c#SX$d#SX$e#SX$f#SX$g#SX$h#SX$i#SX%n#SX%|#SX%}#SX~O#T(aO%m#SX~P'+{O#T(_O~Q#SX#T(^O$w#SX%n#SX$O#SX%s#SXV#SXm#SX!a#SX!b#SX$r#SX$t#SX$v#SX%Y#SX%_#SX&Q#SX$P#SX$Q#SX~O$U#SX$V#SX$W#SX$X#SX$Y#SX$Z#SX$[#SX$_#SX$`#SX$a#SX$b#SX$c#SX$d#SX$e#SX~P'-wO$U#SX$V#SX$W#SX$X#SX$Y#SX$Z#SX$[#SX$_#SX$`#SX$a#SX$b#SX$c#SX$d#SX$e#SX%c#SX%n#SX~O#T!|O~P'0OO#T(dO#U#SX#V#SX%}#SX~P'0OO$U#SX$V#SX$W#SX$X#SX$Y#SX$Z#SX$[#SX$_#SX$`#SX$a#SX$b#SX$c#SX$d#SX$e#SX%m#SX%|#SX~O#T(bO%s#SX&Q#SX~P'1kO#T(cO%n#SX~P'1kO%m#WX%n#WX~P&!QO%m+]O%n&Oq~O#T(bO%m#SX%|#SX&Q#SX~O#T(cO%m#SX%n#SX%|#SX~O$U!zX$V!zX$W!zX$X!zX$Y!zX$Z!zX$[!zX$_!zX$`!zX$a!zX$b!zX$c!zX$d!zX$e!zX%c!zX%n!zX#U!zX#V!zX%}!zX~P#@QO#U!yX#V!yX$f!yX$g!yX$h!yX$i!yX%m!yX%n!yX%|!yX%}!yX~P%NOO#U!yX#V!yX$f!yX$g!yX$h!yX$i!yX%s!yX%|!yX%}!yX%n!yX~P&LOO$f)dO$g)dO%n!xX~P!#PO$f)eO$g)eO#U!xX#V!xX$h!xX$i!xX%s!xX%|!xX%}!xX%n!xX~O$h)fO$i)fO%n!wX~P!$nO%m)hO#U%xX#V%xX%n%xX%|%xX%}%xX~O#U+rO#V+rO%|)iO%}+rO%m!uX%n!uX~O%c,XO~O%c)|O~O%c)}O~O%c*OO~O%c*PO~O%c*QO~O%c*RO~O%c*SO~O`hOahOdhOfhOghOhhOihOk!UO!d!SO!p!RO!q!RO%cfO%ggO%h!PO%j!QO~P$IUO%m*{O~O%m#pO%c!mX~P$EoO%m+]O%n&Oi~O%m#pO#T!ma$U!ma$V!ma$W!ma$X!ma$Y!ma$Z!ma$[!ma$_!ma$`!ma$a!ma$b!ma$c!ma$d!ma$e!ma%c!ma%n!ma#U!ma#V!ma%}!ma~O#U+yO#V+yO%}+yO$w!za%n!za$O!zaV!zam!za!a!za!b!za$r!za$t!za$v!za%Y!za%_!za$P!za$Q!za~P' oO#U+{O#V+{O%}+{O%m!za%|!za~P$<fO#U+sO#V+sO%|#fO%}+sO%m!uX&Q!uX~O%m+tO%n!mX%s!mX#T!mX$w!mX%|!mX&Q!mX$O!mXV!mXm!mX!a!mX!b!mX$r!mX$t!mX$v!mX%Y!mX%_!mX$P!mX$Q!mX~O#U#gO#V#gO%|)iO%}#gO%n!uX~O%c,UO~O%c)jO~O%i%e%yXW%u!pU%f&Tiha`a!d%c~",
  goto: "!8a&WPPPP&X&aPPPP&iPPP&t&wPP*^*^P*^PPPP*^P-oP-rPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP.RP1ZPPPPP4^7f7p9d:vPP>aApBYBhCzDlE`F^G_Lk!!]P!%X!%_!%f!%k!%pPPP!'kPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP!'{PPPPPPPPPPPPPPPPPPPP!(V>aPP!(q&X&X&XP&XP&XPP!({P!)R!)a!)p!)v!)|!*S!*Y!*`!*q!+P!+Z!+e!+o!,RPPP!,X!,aP!,iP!,lPPPPPPPPPPPP!,o!0j!4X!7^PPPPP!7mPP!8XPP!%XPPPPPP!8^]TOV!o$a$b&X]SOV!o$a$b&XcQORSV^!o$a$b&XR$O!^'j!RYkntv!Y!Z![!h!i!|#O#P#Q#R#S#T#U#V#W#Z#^#_#`#a#b#c#d#e#f#g#h#k#p#w$R$^$_$n%Q%S%T%u%|%}&V&W&_&`&a&b&d&}'O'P'Q'_'i'}(O(P(Q(R(S(T(U(V(W(X(Y(Z([(](^(_(`(a(b(c(d(h(i(j(k(l(m(n(o(p(q(r(s(t(u(v(w(x(y(z({(|(})O)P)Q)R)S)T)U)V)W)X)Y)Z)[)])^)_)`)a)b)c)d)e)f)g)h)i)j)t)|)}*O*P*Q*R*S*T*{+]+r+s+t+w+x+y+z+{,P,U,XQ#|!^R&y%y'ohYkntv!Y!Z![!^!h!i!|#O#P#Q#R#S#T#U#V#W#Z#^#_#`#a#b#c#d#e#f#g#h#k#p#w$R$^$_$n%Q%S%T%u%y%|%}&V&W&_&`&a&b&d&}'O'P'Q'_'i'}(O(P(Q(R(S(T(U(V(W(X(Y(Z([(](^(_(`(a(b(c(d(h(i(j(k(l(m(n(o(p(q(r(s(t(u(v(w(x(y(z({(|(})O)P)Q)R)S)T)U)V)W)X)Y)Z)[)])^)_)`)a)b)c)d)e)f)g)h)i)j)t)|)}*O*P*Q*R*S*T*{+]+r+s+t+w+x+y+z+{,P,U,XR#v!UQ!eaQ!ndQ!oeQ$T!fR$U!g%jlYkntv!Y!Z![#P#Q#R#S#T#U#V#W#^#_#`#a#b#c#d#e#f#h#k#w$^$_%S%u%|%}&V&W&_&a&b&d&}'O'P'Q'_'i'}(O(P(S(T(V(W(X([(](^(_(`(a(b(c(h(o(p(q(t(u(v(w(x({(|(})O)P)S)T)U)V)W)Z)[)])^)_)b)c)d)e)f)g)h)i)j)t)|)}*O*R*S*{+],U,XY!bade!f!gQ$e!t!X't!|#O$n(Q(R(U(Y(Z(d(i(j(k(l(m(n(r(s(y(z)Q)R)X)Y)`)a*P*Q&rqYkntv!Y!Z![!|#O#P#Q#R#S#T#U#V#W#^#_#`#a#b#c#d#e#f#h#k#w$^$_$n%S%u%|%}&V&W&_&a&b&d&}'O'P'Q'_'i'}(O(P(Q(R(S(T(U(V(W(X(Y(Z([(](^(_(`(a(b(c(d(h(i(j(k(l(m(n(o(p(q(r(s(t(u(v(w(x(y(z({(|(})O)P)Q)R)S)T)U)V)W)X)Y)Z)[)])^)_)`)a)b)c)d)e)f)g)h)i)j)t)|)}*O*P*Q*R*S*{+],U,XZ!dade!f!g%jmYkntv!Y!Z![#P#Q#R#S#T#U#V#W#^#_#`#a#b#c#d#e#f#h#k#w$^$_%S%u%|%}&V&W&_&a&b&d&}'O'P'Q'_'i'}(O(P(S(T(V(W(X([(](^(_(`(a(b(c(h(o(p(q(t(u(v(w(x({(|(})O)P)S)T)U)V)W)Z)[)])^)_)b)c)d)e)f)g)h)i)j)t)|)}*O*R*S*{+],U,XQ$f!t!W'u!|#O$n(Q(R(U(Y(Z(d(i(j(k(l(m(n(r(s(y(z)Q)R)X)Y)`)a*P*QZ'vade!f!ga!jd!e!k!n!o$T$U$a!joYkntv!Z#P#Q#Z#h#k#w$^$_%u%|%}&V&W&a&d&}'O'P'Q'_'}(O(P(Q(R(S(T)j,U,XS$X!h$RQ$Z!iQ&f%TQ+T+wQ+U+xQ+V+yQ+W*TQ+X,PQ+Y+zQ+Z+{U+_#g%Q&`Q+`+sR+a+r!j!TYkntv!Z#P#Q#Z#h#k#w$^$_%u%|%}&V&W&a&d&}'O'P'Q'_'}(O(P(Q(R(S(T)j,U,XS%j#p+t[&h%T+w+x+y+z+{S+|*T,Pa,T!h!i#g$R%Q&`+r+s%Yq!Y![!|#O#R#S#T#U#V#W#^#_#`#a#b#c#d#e#f$n%S&_&b'i(U(V(W(X(Y(Z([(](^(_(`(a(b(c(d(h(i(j(k(l(m(n(o(p(q(r(s(t(u(v(w(x(y(z({(|(})O)P)Q)R)S)T)U)V)W)X)Y)Z)[)])^)_)`)a)b)c)d)e)f)g)h)i)t)|)}*O*P*Q*R*S*{+]zrYktv!Z#P#h$^$_%u%|%}&V&W&}'O'P'Q'_(S,Uv!S!h!i#Z#g#p$R%Q%T&`*T+r+s+t+w+x+y+z+{,PS'z(Q(RU'{&a(O(Pc'|n#Q#k#w&d'}(T)j,X'k!RYkntv!Y!Z![!h!i!|#O#P#Q#R#S#T#U#V#W#Z#^#_#`#a#b#c#d#e#f#g#h#k#p#w$R$^$_$n%Q%S%T%u%|%}&V&W&_&`&a&b&d&}'O'P'Q'_'i'}(O(P(Q(R(S(T(U(V(W(X(Y(Z([(](^(_(`(a(b(c(d(h(i(j(k(l(m(n(o(p(q(r(s(t(u(v(w(x(y(z({(|(})O)P)Q)R)S)T)U)V)W)X)Y)Z)[)])^)_)`)a)b)c)d)e)f)g)h)i)j)t)|)}*O*P*Q*R*S*T*{+]+r+s+t+w+x+y+z+{,P,U,XQ#l!PQ#n!QW%b#l%c%e&lQ%e#mW%f#n%g%i&oR%i#oi#j!P!Q#l#m#n#o%c%e%g%i&l&oQ!]YS!zk#wQ!{nQ#YtQ#z!ZW%_#h)j,U,XQ%a#kQ&T$^Q&U$_Q&u%uQ&{%|Q&|%}Q'R&VQ'S&WQ'Z&dQ'd&}Q'e'OQ'f'PQ'g'QR'l'_n{Y!Z#h$^$_%u%|%}&V&W&}'O'P'Q'_U+ik#w)jS,St,UX,Vn#k&d,XrzYt!Z#h$^$_%u%|%}&V&W&}'O'P'Q'_,UQ%^#fQ*w)i_+hkn#k#w&d)j,XtyYt!Z#f#h$^$_%u%|%}&V&W&}'O'P'Q'_,UU$p#P#Q&aQ%]#eQ'U&_Q*v)ha+gkn#k#w&d)i)j,XvxYt!Z#e#f#h$^$_%u%|%}&V&W&}'O'P'Q'_,UQ%[#dQ*t)fQ*u)gb+ekn#k#w&d)h)i)j,XX+f#P#Q&_&axwYt!Z#d#e#f#h$^$_%u%|%}&V&W&}'O'P'Q'_,Uh#]v!['}(O(R(V(W(X(Y(Z([(]Q$m!|Q$w#P`%U#^(o(p(q(r(s(t(uQ%V#_Q%W#`Q%X#aQ%Y#bQ%Z#cQ&](QQ&e%SS'X&b'iQ)m(^Q)n(_Q)o(`Q)p(aQ)q(bQ)r(cQ)s(dQ)v#QQ*U(vQ*V(wQ*W(xQ*X(yQ*Y(zQ*Z({Q*[(|Q*](}Q*^)OQ*_)PQ*`)QQ*a)RQ*b)SQ*c)TQ*d)UQ*e)VQ*f)WQ*g)XQ*h)YQ*i)ZQ*j)[Q*k)]Q*l)^Q*m)_Q*n)`Q*o)aQ*p)bQ*q)cQ*r)dQ*s)eQ*y(SQ*|)|Q*})}Q+O*OQ+P*PQ+Q*QQ+R*RQ+S*SS+[*{+]d+ckn#k#w&d)f)h)i)j,XU+d&_&a)gQ,Q(PR,R(T%WsYkntv!Z![#P#Q#^#_#`#a#b#c#d#e#f#h#k#w$^$_%S%u%|%}&V&W&_&a&b&d&}'O'P'Q'_'i'}(O(P(S(T(V(W(X([(](^(_(`(a(b(c(o(p(q(t(u(v(w(x({(|(})O)P)S)T)U)V)W)Z)[)])^)_)b)c)d)e)f)g)h)i)j)|)}*O*R*S*{+],U,XQ#y!YS$j#R(iQ$o#OQ$z#SQ${#TQ$|#UQ$}#VQ%O#WQ&^$nQ)k(UQ)u(hQ)w(jQ)x(kQ)y(lQ)z(mQ){(nQ*z)tu+b!|(Q(R(Y(Z(d(r(s(y(z)Q)R)X)Y)`)a*P*Q&sqYkntv!Y!Z![!|#O#P#Q#R#S#T#U#V#W#^#_#`#a#b#c#d#e#f#h#k#w$^$_$n%S%u%|%}&V&W&_&a&b&d&}'O'P'Q'_'i'}(O(P(Q(R(S(T(U(V(W(X(Y(Z([(](^(_(`(a(b(c(d(h(i(j(k(l(m(n(o(p(q(r(s(t(u(v(w(x(y(z({(|(})O)P)Q)R)S)T)U)V)W)X)Y)Z)[)])^)_)`)a)b)c)d)e)f)g)h)i)j)t)|)}*O*P*Q*R*S*{+],U,XQ$k#QR$y#PS$v#P#QR'V&aV$q#P#Q&aV$t#P#Q&an}Y!Z#h$^$_%u%|%}&V&W&}'O'P'Q'_Q!wkQ#[vU$s#P#Q&aQ%R#ZU%_#g+r+sQ&c%Q`&g%T*T+w+x+y+z+{,PQ'V&`W+jn#k&d,XQ+k'}Q+l(OQ+m(PQ+n(QQ+o(RQ+p(SQ+q(TS,Wt,UT,Y#w)jQ$x#PQ'Y&bS'o'i+]Q+v#QR+}*{a#]v'}(O(P(Q(R(S(T!R!OYknt!Z#h#k#w$^$_%u%|%}&V&W&d&}'O'P'Q'_)j,U,XY!ld!e!n$T$UR$]!kQ%w#{R'a&wQVOU_V$b&XQ$b!oR&X$a[ROV!o$a$b&XS]R^R^SQ%m#rR&p%mQ%p#sR&r%pQ%r#tR&s%rQ%t#uR&t%tQ%z#|R&z%zS!ujmU$P!`!c'vS$g!u$PT&['s'uY!kd!e!n$T$US$[!k$aR$a!oQ'j'YS'p'j+^R+^+}Q%c#lS&j%c&lR&l%eQ%g#nS&m%g&oR&o%iQ#q!TW%k#q'[+u,OQ'[&hQ+u,TR,O+|Q&x%wR'b&x]UOV!o$a$b&X]XOV!o$a$b&XRZPR#}!^zpYktv!Z#P#h$^$_%u%|%}&V&W&}'O'P'Q'_(S,UY!dade!f!g%Y#x!Y![!|#O#R#S#T#U#V#W#^#_#`#a#b#c#d#e#f$n%S&_&b'i(U(V(W(X(Y(Z([(](^(_(`(a(b(c(d(h(i(j(k(l(m(n(o(p(q(r(s(t(u(v(w(x(y(z({(|(})O)P)Q)R)S)T)U)V)W)X)Y)Z)[)])^)_)`)a)b)c)d)e)f)g)h)i)t)|)}*O*P*Q*R*S*{+]n$V!h!i#g$R%Q%T&`+r+s+t+w+x+y+z+{S%v#{&wQ'`&vS'w(Q(RU'x&a(O(Pb'yn#Q#k#w&d'}(T)j,XX)l#Z#p*T,P%jjYkntv!Y!Z![#P#Q#R#S#T#U#V#W#^#_#`#a#b#c#d#e#f#h#k#w$^$_%S%u%|%}&V&W&_&a&b&d&}'O'P'Q'_'i'}(O(P(S(T(V(W(X([(](^(_(`(a(b(c(h(o(p(q(t(u(v(w(x({(|(})O)P)S)T)U)V)W)Z)[)])^)_)b)c)d)e)f)g)h)i)j)t)|)}*O*R*S*{+],U,X|!W!h!i#Z#g#p#{$R%Q%T&`&v&w*T+r+s+t+w+x+y+z+{,PY!`ade!f!g!X's!|#O$n(Q(R(U(Y(Z(d(i(j(k(l(m(n(r(s(y(z)Q)R)X)Y)`)a*P*Q%jmYkntv!Y!Z![#P#Q#R#S#T#U#V#W#^#_#`#a#b#c#d#e#f#h#k#w$^$_%S%u%|%}&V&W&_&a&b&d&}'O'P'Q'_'i'}(O(P(S(T(V(W(X([(](^(_(`(a(b(c(h(o(p(q(t(u(v(w(x({(|(})O)P)S)T)U)V)W)Z)[)])^)_)b)c)d)e)f)g)h)i)j)t)|)}*O*R*S*{+],U,XY!cade!f!g!X'u!|#O$n(Q(R(U(Y(Z(d(i(j(k(l(m(n(r(s(y(z)Q)R)X)Y)`)a*P*QQ!mdQ$S!eQ$`!nQ&O$TR&P$U!R|Yknt!Z#h#k#w$^$_%u%|%}&V&W&d&}'O'P'Q'_)j,U,XV$r#P#Q&aR%x#{",
  nodeNames: "⚠ LineComment BlockComment Program DefinitionStatement Docstring BasicId Keyword DocstringLiteral MultilineDocstringLiteral Attribute AttributeKeyword AttributeKeyword AttributeKeyword AttributeParams BaseLiteral IntLiteral FloatLiteral RelnameLiteral RelnameStringLiteral StaticStringLiteral RelnameMultilineStringLiteral StaticMultilineStringLiteral CharLiteral DateLiteral DateTimeLiteral RawStringLiteral Keyword RawStringSequence Keyword LhsId Type Type Type Type Type Type Type Type Type Type Type Type Type Type Type Type Type Type Type Type Type Type Type Type Type Type Type Type Type Type Type Keyword Keyword Keyword ParenOpId Operator QualifiedName Emphasis Emphasis Emphasis Emphasis Emphasis QualifiedNameElem FormalParamsBracket FormalParams FormalParam Literal BooleanLiteral SpecializeIntLiteral InterpolationLiteral Interpolation InterpolationId Expression UnionExpression JoinExpression OverrideExpression RestrictExpression LogicalExpression BasicExpression SpecializeExpression OperatorKeyword NocommaParam NocommaExpression NocommaUnionExpression NocommaAbstractExpression Bindings Keyword Keyword Keyword LogicalParam OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword Keyword Keyword Keyword Keyword Keyword Keyword LogicalAbstractExpression Keyword OperatorKeyword Keyword OperatorKeyword Keyword OperatorKeyword OperatorKeyword Keyword OperatorKeyword Keyword OperatorKeyword OperatorKeyword Keyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword OperatorKeyword AbstractExpression InterpolationMultilineLiteral Keyword OperatorKeyword FormalParamsParen ValueTypeStatement EntityTypeStatement ConstraintStatement Keyword ModuleStatement Keyword UseStatement Keyword Keyword Alias Keyword",
  maxTerm: 237,
  nodeProps: [
    ["group", -6,4,169,170,171,173,175,"Declaration"]
  ],
  skippedNodes: [0,1,2],
  repeatNodeCount: 14,
  tokenData: "%:W~R#dOX(aXY5cYZ8iZ](a]^8i^p(apq5cqr9krs;cst!)Vtu(auv!1rvw(awx!2Txy!<hyz!=cz{!>^{|!?X|}!AV}!O!>^!O!P!BQ!P!Q!I_!Q!R#Na!R![$?z![!]$A_!]!^$DU!^!_$EP!_!`$GZ!`!a$HW!a!b(a!b!c$IX!c!}$JS!}#O$Mf#O#P$Na#P#Q% t#Q#R%!o#R#S%'f#S#T(a#T#Y$JS#Y#Z%)V#Z#h$JS#h#i%2R#i#o$JS#o#p%5q#p#q%6l#q#r%7g#r$r(a$r$s!>^$s%o(a%o%p!>^%p&a(a&a&b!>^&b4w(a4w5b$JS5b5i(a5i6S$JS6S%#t(a%#t%#u!>^%#u%#v(a%#v%#w!>^%#w%%U(a%%U%%V!>^%%V%%W(a%%W%%X!>^%%X%%Y(a%%Y%%Z!>^%%Z%%[(a%%[%%]!>^%%]%&Y(a%&Y%&Z%8b%&Z%&](a%&]%&^%9]%&^%&b(a%&b%&c!>^%&c%'R(a%'R%'S!>^%'S%'T!>^%'T%'U!>^%'U%'V!>^%'V%'h(a%'h%'i!>^%'i%'t(a%'t%'u!>^%'u%(^(a%(^%(_!>^%(_%(`!>^%(`%(a!>^%(a%(b(a%(b%(c!>^%(c%(d!>^%(d%(x(a%(x%(y!>^%(y%(z!>^%(z%({!>^%({%(|!>^%(|%)Q(a%)Q%)R!>^%)R%)S!>^%)S%)U(a%)U%)V!>^%)V%)W!>^%)W%)c(a%)c%)d!>^%)d%)e!>^%)e%)f!>^%)f%)g(a%)g%)h!>^%)h%)i(a%)i%)j!>^%)j%*](a%*]%*^!>^%*^~(a!Y(jY%ip%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv#O)Y#O#P0S#P~)Yh)aY%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv#O)Y#O#P0S#P~)Y`*UU&T`Or*Prs*hsu*Pv#O*P#O#P+a#P~*P`*kUOr*Prs*}su*Pv#O*P#O#P+a#P~*P`+QTOr*Psu*Pv#O*P#O#P+a#P~*P`+ddrs*Puv*Pwx*P!Q!R,r!R!S,r!S!T,r!T!U,r!U!Y-a!w!x.O#O#P*P#T#U*P#U#V*P#X#Y*P#Y#Z*P#b#c*P#f#g*P#h#i*P#i#j/Q#j#k*P#l#m/j`,wW&T`Or*Prs*hsu*Pv!Q*P!Q!Y-a!Y#O*P#O#P+a#P~*P`-fW&T`Or*Prs*hsu*Pv!Q*P!Q!Y*P!Y#O*P#O#P+a#P~*P`.RR!Q![.[!c!i.[#T#Z.[`._R!Q![.h!c!i.h#T#Z.h`.kR!Q![.t!c!i.t#T#Z.t`.wR!Q![/Q!c!i/Q#T#Z/Q`/TR!Q![/^!c!i/^#T#Z/^`/aR!Q![/j!c!i/j#T#Z/j`/mR!Q![/v!c!i/v#T#Z/v`/yR!Q![*P!c!i*P#T#Z*Ph0Vdrs)Yuv)Ywx)Y!Q!R1e!R!S1e!S!T1e!T!U1e!U!Y2b!w!x3_#O#P)Y#T#U)Y#U#V)Y#X#Y)Y#Y#Z)Y#b#c)Y#f#g)Y#h#i)Y#i#j4a#j#k)Y#l#m4yh1l[%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q!Y2b!Y#O)Y#O#P0S#P~)Yh2i[%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q!Y)Y!Y#O)Y#O#P0S#P~)Yh3bR!Q![3k!c!i3k#T#Z3kh3nR!Q![3w!c!i3w#T#Z3wh3zR!Q![4T!c!i4T#T#Z4Th4WR!Q![4a!c!i4a#T#Z4ah4dR!Q![4m!c!i4m#T#Z4mh4pR!Q![4y!c!i4y#T#Z4yh4|R!Q![5V!c!i5V#T#Z5Vh5YR!Q![)Y!c!i)Y#T#Z)Y~5n]%ip%[~%uW&T`OX)YXY6gYZ7iZ])Y]^7i^p)Ypq6gqr)Yrs*hsu)Yv#O)Y#O#P0S#P~)Y~6p]%[~%uW&T`OX)YXY6gYZ7iZ])Y]^7i^p)Ypq6gqr)Yrs*hsu)Yv#O)Y#O#P0S#P~)Y~7p]%[~&T`OX*PXY7iYZ7iZ]*P]^7i^p*Ppq7iqr*Prs*hsu*Pv#O*P#O#P+a#P~*P~8r]%ip%[~&T`OX*PXY7iYZ7iZ]*P]^7i^p*Ppq7iqr*Prs*hsu*Pv#O*P#O#P+a#P~*P![9t[%ip%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!_)Y!_!`:j!`#O)Y#O#P0S#P~)Yj:sY%uW&T`!dQOY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv#O)Y#O#P0S#P~)Y!a;hZ%hzOY<ZYZ*PZ]<Z]^*P^r<ZrsHasu<Zuv=lv#O<Z#O#PCO#P~<Zg<`Z&T`OY<ZYZ*PZ]<Z]^*P^r<Zrs=Rsu<Zuv=lv#O<Z#O#PCO#P~<Zg=YUdUWPOr*Prs*}su*Pv#O*P#O#P+a#P~*PP=oVOY=lZ]=l^r=lrs>Us#O=l#O#P>Z#P~=lP>ZOWPP>^drs=luv=lwx=l!Q!R?l!R!S?l!S!T?l!T!U?l!U!Y@[!w!x@z#O#P=l#T#U=l#U#V=l#X#Y=l#Y#Z=l#b#c=l#f#g=l#h#i=l#i#jA|#j#k=l#l#mBfP?oXOY=lZ]=l^r=lrs>Us!Q=l!Q!Y@[!Y#O=l#O#P>Z#P~=lP@_XOY=lZ]=l^r=lrs>Us!Q=l!Q!Y=l!Y#O=l#O#P>Z#P~=lP@}R!Q![AW!c!iAW#T#ZAWPAZR!Q![Ad!c!iAd#T#ZAdPAgR!Q![Ap!c!iAp#T#ZApPAsR!Q![A|!c!iA|#T#ZA|PBPR!Q![BY!c!iBY#T#ZBYPB]R!Q![Bf!c!iBf#T#ZBfPBiR!Q![Br!c!iBr#T#ZBrPBuR!Q![=l!c!i=l#T#Z=lgCRdrs<Zuv<Zwx<Z!Q!RDa!R!SDa!S!TDa!T!UDa!U!YE_!w!xF]#O#P<Z#T#U<Z#U#V<Z#X#Y<Z#Y#Z<Z#b#c<Z#f#g<Z#h#i<Z#i#jG_#j#k<Z#l#mGwgDf]&T`OY<ZYZ*PZ]<Z]^*P^r<Zrs=Rsu<Zuv=lv!Q<Z!Q!YE_!Y#O<Z#O#PCO#P~<ZgEd]&T`OY<ZYZ*PZ]<Z]^*P^r<Zrs=Rsu<Zuv=lv!Q<Z!Q!Y<Z!Y#O<Z#O#PCO#P~<ZgF`R!Q![Fi!c!iFi#T#ZFigFlR!Q![Fu!c!iFu#T#ZFugFxR!Q![GR!c!iGR#T#ZGRgGUR!Q![G_!c!iG_#T#ZG_gGbR!Q![Gk!c!iGk#T#ZGkgGnR!Q![Gw!c!iGw#T#ZGwgGzR!Q![HT!c!iHT#T#ZHTgHWR!Q![<Z!c!i<Z#T#Z<Z!aHhUdUWPOr*PrsHzsu*Pv#O*P#O#P+a#P~*P!aIPV%j![OrIfrs!'rsuIfuvKXv#OIf#O#P!!}#P~IfVIiVOrIfrsJOsuIfuvKXv#OIf#O#P!!}#P~IfVJRVOrIfrsJhsuIfuvKXv#OIf#O#P!!}#P~IfVJkVOrIfrsKQsuIfuvKXv#OIf#O#P!!}#P~IfVKXOfUXPPK[TOrKXrsKks#OKX#O#PLf#P~KXPKnTOrKXrsK}s#OKX#O#PLf#P~KXPLQTOrKXrsLas#OKX#O#PLf#P~KXPLfOXPPLidrsKXuvKXwxKX!Q!RMw!R!SMw!S!TMw!T!UMw!U!YNa!w!xNy#O#PKX#T#UKX#U#VKX#X#YKX#Y#ZKX#b#cKX#f#gKX#h#iKX#i#j! {#j#kKX#l#m!!ePMzVOrKXrsKks!QKX!Q!YNa!Y#OKX#O#PLf#P~KXPNdVOrKXrsKks!QKX!Q!YKX!Y#OKX#O#PLf#P~KXPN|R!Q![! V!c!i! V#T#Z! VP! YR!Q![! c!c!i! c#T#Z! cP! fR!Q![! o!c!i! o#T#Z! oP! rR!Q![! {!c!i! {#T#Z! {P!!OR!Q![!!X!c!i!!X#T#Z!!XP!![R!Q![!!e!c!i!!e#T#Z!!eP!!hR!Q![!!q!c!i!!q#T#Z!!qP!!tR!Q![KX!c!iKX#T#ZKXV!#QdrsIfuvIfwxIf!Q!R!$`!R!S!$`!S!T!$`!T!U!$`!U!Y!%O!w!x!%n#O#PIf#T#UIf#U#VIf#X#YIf#Y#ZIf#b#cIf#f#gIf#h#iIf#i#j!&p#j#kIf#l#m!'YV!$cXOrIfrsJOsuIfuvKXv!QIf!Q!Y!%O!Y#OIf#O#P!!}#P~IfV!%RXOrIfrsJOsuIfuvKXv!QIf!Q!YIf!Y#OIf#O#P!!}#P~IfV!%qR!Q![!%z!c!i!%z#T#Z!%zV!%}R!Q![!&W!c!i!&W#T#Z!&WV!&ZR!Q![!&d!c!i!&d#T#Z!&dV!&gR!Q![!&p!c!i!&p#T#Z!&pV!&sR!Q![!&|!c!i!&|#T#Z!&|V!'PR!Q![!'Y!c!i!'Y#T#Z!'YV!']R!Q![!'f!c!i!'f#T#Z!'fV!'iR!Q![If!c!iIf#T#ZIf!P!'uVOrIfrs!([suIfuvKXv#OIf#O#P!!}#P~If!P!(aV%kxOrIfrs!(vsuIfuvKXv#OIf#O#P!!}#P~If!P!(}PfUXPrs!)Qx!)VO%lx![!)`_%ip%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yvx)Yxy!*_y!Q)Y!Q!R!+W!R![!,c![#O)Y#O#P0S#P~)Yj!*hY%zQ%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv#O)Y#O#P0S#P~)Yj!+a`!qQ%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![!,c![#O)Y#O#P0S#P#c)Y#c#d!-b#d#l)Y#l#m!/^#m~)Yj!,l[!qQ%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![!,c![#O)Y#O#P0S#P~)Yj!-i[%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q!Y!._!Y#O)Y#O#P0S#P~)Yj!.h[!qQ%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q!Y!._!Y#O)Y#O#P0S#P~)Yj!/e`%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![!0g![!c)Y!c!i!0g!i#O)Y#O#P0S#P#T)Y#T#Z!0g#Z~)Yj!0p`!qQ%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![!0g![!c)Y!c!i!0g!i#O)Y#O#P0S#P#T)Y#T#Z!0g#Z~)Y!]!1{P%vi%ip!dQxy!2Oi!2TO%wi![!2^]%ip%uW&T`OY!3VYZ!4{Z]!3V]^!4{^r!3Vrs!6Tsu!3Vuv!6pvw!3Vwx)Yx#O!3V#O#P!6{#P~!3Vj!3^[%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yvw)Ywx!4Sx#O)Y#O#P0S#P~)Yj!4]YgQ%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv#O)Y#O#P0S#P~)Yb!5QW&T`Or*Prs*hsu*Pvw*Pwx!5jx#O*P#O#P+a#P~*Pb!5qUgQ&T`Or*Prs*hsu*Pv#O*P#O#P+a#P~*Pb!6WWOr*Prs*}su*Pvw*Pwx!5jx#O*P#O#P+a#P~*PQ!6sPwx!6vQ!6{OgQj!7Odrs!3Vuv!3Vwx!3V!Q!R!8^!R!S!8^!S!T!8^!T!U!8^!U!Y!9a!w!x!:d#O#P!3V#T#U!3V#U#V!3V#X#Y!3V#Y#Z!3V#b#c!3V#f#g!3V#h#i!3V#i#j!;f#j#k!3V#l#m!<Oj!8e^%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yvw)Ywx!4Sx!Q)Y!Q!Y!9a!Y#O)Y#O#P0S#P~)Yj!9h^%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yvw)Ywx!4Sx!Q)Y!Q!Y!3V!Y#O)Y#O#P0S#P~)Yj!:gR!Q![!:p!c!i!:p#T#Z!:pj!:sR!Q![!:|!c!i!:|#T#Z!:|j!;PR!Q![!;Y!c!i!;Y#T#Z!;Yj!;]R!Q![!;f!c!i!;f#T#Z!;fj!;iR!Q![!;r!c!i!;r#T#Z!;rj!;uR!Q![!<O!c!i!<O#T#Z!<Oj!<RR!Q![!<[!c!i!<[#T#Z!<[j!<_R!Q![!3V!c!i!3V#T#Z!3V!]!<sY%aR%ip%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv#O)Y#O#P0S#P~)Y!]!=nY%nR%ip%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv#O)Y#O#P0S#P~)Y![!>iY%ip%uW&T`!dQOY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv#O)Y#O#P0S#P~)Y![!?d[%ip%uW&T`!dQOY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv{)Y{|!@Y|#O)Y#O#P0S#P~)Yj!@a[%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!`)Y!`!a:j!a#O)Y#O#P0S#P~)Y!]!AbY%mR%ip%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv#O)Y#O#P0S#P~)Y![!B]^%ip%uW&T`!dQOY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!O)Y!O!P!CX!P!Q)Y!Q![!D}![#O)Y#O#P0S#P~)Yj!C`[%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!O)Y!O!P!DU!P#O)Y#O#P0S#P~)Yj!D_Y%yQ%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv#O)Y#O#P0S#P~)Yj!EW`%uW&T`aQOY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![!D}![!g)Y!g!h!FY!h#O)Y#O#P0S#P#X)Y#X#Y!FY#Y~)Yj!Fa`%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv{)Y{|!Gc|})Y}!O!Gc!O!Q)Y!Q![!H`![#O)Y#O#P0S#P~)Yj!Gj[%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![!H`![#O)Y#O#P0S#P~)Yj!Hi[%uW&T`aQOY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![!H`![#O)Y#O#P0S#P~)Y~!Ij^%ip%uW&T`!dQOY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yvz)Yz{!Jf{!P)Y!P!Q#6m!Q#O)Y#O#P0S#P~)Y~!Jm]%uW&T`OY!JfYZ!KfZ]!Jf]^!Kf^r!Jfrs!LWsu!Jfuv!Mfvz!Jfz{#*v{#O!Jf#O#P#,u#P~!Jf~!KkX&T`Or!Kfrs!LWsu!Kfuv!Mfvz!Kfz{!NZ{#O!Kf#O#P# l#P~!Kf~!LZXOr!Kfrs!Lvsu!Kfuv!Mfvz!Kfz{!NZ{#O!Kf#O#P# l#P~!Kf~!LyXOr!Kfrs!Mfsu!Kfuv!Mfvz!Kfz{!NZ{#O!Kf#O#P# l#P~!Kf~!MiROz!Mfz{!Mr{~!Mf~!MuTOz!Mfz{!Mr{!P!Mf!P!Q!NU!Q~!Mf~!NZOQ~~!N`Z&T`Or!Kfrs!LWsu!Kfuv!Mfvz!Kfz{!NZ{!P!Kf!P!Q# R!Q#O!Kf#O#P# l#P~!Kf~# YUQ~&T`Or*Prs*hsu*Pv#O*P#O#P+a#P~*P~# osOr!Mfrs!Kfsu!Mfuv!Kfvw!Mfwx!Kfxz!Mfz{!Mr{!Q!Mf!Q!R##|!R!S##|!S!T##|!T!U##|!U!Y#$t!Y!w!Mf!w!x#%l!x#O!Mf#O#P!Kf#P#T!Mf#T#U!Kf#U#V!Kf#V#X!Mf#X#Y!Kf#Y#Z!Kf#Z#b!Mf#b#c!Kf#c#f!Mf#f#g!Kf#g#h!Mf#h#i!Kf#i#j#(Y#j#k!Kf#k#l!Mf#l#m#)h#m~!Mf~#$RZ&T`Or!Kfrs!LWsu!Kfuv!Mfvz!Kfz{!NZ{!Q!Kf!Q!Y#$t!Y#O!Kf#O#P# l#P~!Kf~#$yZ&T`Or!Kfrs!LWsu!Kfuv!Mfvz!Kfz{!NZ{!Q!Kf!Q!Y!Kf!Y#O!Kf#O#P# l#P~!Kf~#%oXOz!Mfz{!Mr{!Q!Mf!Q![#&[![!c!Mf!c!i#&[!i#T!Mf#T#Z#&[#Z~!Mf~#&_XOz!Mfz{!Mr{!Q!Mf!Q![#&z![!c!Mf!c!i#&z!i#T!Mf#T#Z#&z#Z~!Mf~#&}XOz!Mfz{!Mr{!Q!Mf!Q![#'j![!c!Mf!c!i#'j!i#T!Mf#T#Z#'j#Z~!Mf~#'mXOz!Mfz{!Mr{!Q!Mf!Q![#(Y![!c!Mf!c!i#(Y!i#T!Mf#T#Z#(Y#Z~!Mf~#(]XOz!Mfz{!Mr{!Q!Mf!Q![#(x![!c!Mf!c!i#(x!i#T!Mf#T#Z#(x#Z~!Mf~#({XOz!Mfz{!Mr{!Q!Mf!Q![#)h![!c!Mf!c!i#)h!i#T!Mf#T#Z#)h#Z~!Mf~#)kXOz!Mfz{!Mr{!Q!Mf!Q![#*W![!c!Mf!c!i#*W!i#T!Mf#T#Z#*W#Z~!Mf~#*ZXOz!Mfz{!Mr{!Q!Mf!Q![!Kf![!c!Mf!c!i!Kf!i#T!Mf#T#Z!Kf#Z~!Mf~#*}_%uW&T`OY!JfYZ!KfZ]!Jf]^!Kf^r!Jfrs!LWsu!Jfuv!Mfvz!Jfz{#*v{!P!Jf!P!Q#+|!Q#O!Jf#O#P#,u#P~!Jf~#,VYQ~%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv#O)Y#O#P0S#P~)Y~#,xsOr!Mfrs!Jfsu!Mfuv!Jfvw!Mfwx!Jfxz!Mfz{!Mr{!Q!Mf!Q!R#/V!R!S#/V!S!T#/V!T!U#/V!U!Y#0]!Y!w!Mf!w!x#1c!x#O!Mf#O#P!Jf#P#T!Mf#T#U!Jf#U#V!Jf#V#X!Mf#X#Y!Jf#Y#Z!Jf#Z#b!Mf#b#c!Jf#c#f!Mf#f#g!Jf#g#h!Mf#h#i!Jf#i#j#4P#j#k!Jf#k#l!Mf#l#m#5_#m~!Mf~#/^_%uW&T`OY!JfYZ!KfZ]!Jf]^!Kf^r!Jfrs!LWsu!Jfuv!Mfvz!Jfz{#*v{!Q!Jf!Q!Y#0]!Y#O!Jf#O#P#,u#P~!Jf~#0d_%uW&T`OY!JfYZ!KfZ]!Jf]^!Kf^r!Jfrs!LWsu!Jfuv!Mfvz!Jfz{#*v{!Q!Jf!Q!Y!Jf!Y#O!Jf#O#P#,u#P~!Jf~#1fXOz!Mfz{!Mr{!Q!Mf!Q![#2R![!c!Mf!c!i#2R!i#T!Mf#T#Z#2R#Z~!Mf~#2UXOz!Mfz{!Mr{!Q!Mf!Q![#2q![!c!Mf!c!i#2q!i#T!Mf#T#Z#2q#Z~!Mf~#2tXOz!Mfz{!Mr{!Q!Mf!Q![#3a![!c!Mf!c!i#3a!i#T!Mf#T#Z#3a#Z~!Mf~#3dXOz!Mfz{!Mr{!Q!Mf!Q![#4P![!c!Mf!c!i#4P!i#T!Mf#T#Z#4P#Z~!Mf~#4SXOz!Mfz{!Mr{!Q!Mf!Q![#4o![!c!Mf!c!i#4o!i#T!Mf#T#Z#4o#Z~!Mf~#4rXOz!Mfz{!Mr{!Q!Mf!Q![#5_![!c!Mf!c!i#5_!i#T!Mf#T#Z#5_#Z~!Mf~#5bXOz!Mfz{!Mr{!Q!Mf!Q![#5}![!c!Mf!c!i#5}!i#T!Mf#T#Z#5}#Z~!Mf~#6QXOz!Mfz{!Mr{!Q!Mf!Q![!Jf![!c!Mf!c!i!Jf!i#T!Mf#T#Z!Jf#Z~!Mf~#6vZP~%uW&T`OY#6mYZ*PZ]#6m]^*P^r#6mrs#7isu#6muv#9Zv#O#6m#O#P#D_#P~#6m~#7nZP~OY#8aYZ*PZ]#8a]^*P^r#8ars#Cgsu#8auv#9Zv#O#8a#O#P#9i#P~#8a~#8hZP~&T`OY#8aYZ*PZ]#8a]^*P^r#8ars#7isu#8auv#9Zv#O#8a#O#P#9i#P~#8a~#9`RP~OY#9ZZ]#9Z^~#9Z~#9nsP~OY#9ZZ]#9Z^r#9Zrs#8asu#9Zuv#8avw#9Zwx#8ax!Q#9Z!Q!R#;{!R!S#;{!S!T#;{!T!U#;{!U!Y#<{!Y!w#9Z!w!x#={!x#O#9Z#O#P#8a#P#T#9Z#T#U#8a#U#V#8a#V#X#9Z#X#Y#8a#Y#Z#8a#Z#b#9Z#b#c#8a#c#f#9Z#f#g#8a#g#h#9Z#h#i#8a#i#j#@q#j#k#8a#k#l#9Z#l#m#BT#m~#9Z~#<S]P~&T`OY#8aYZ*PZ]#8a]^*P^r#8ars#7isu#8auv#9Zv!Q#8a!Q!Y#<{!Y#O#8a#O#P#9i#P~#8a~#=S]P~&T`OY#8aYZ*PZ]#8a]^*P^r#8ars#7isu#8auv#9Zv!Q#8a!Q!Y#8a!Y#O#8a#O#P#9i#P~#8a~#>QXP~OY#9ZZ]#9Z^!Q#9Z!Q![#>m![!c#9Z!c!i#>m!i#T#9Z#T#Z#>m#Z~#9Z~#>rXP~OY#9ZZ]#9Z^!Q#9Z!Q![#?_![!c#9Z!c!i#?_!i#T#9Z#T#Z#?_#Z~#9Z~#?dXP~OY#9ZZ]#9Z^!Q#9Z!Q![#@P![!c#9Z!c!i#@P!i#T#9Z#T#Z#@P#Z~#9Z~#@UXP~OY#9ZZ]#9Z^!Q#9Z!Q![#@q![!c#9Z!c!i#@q!i#T#9Z#T#Z#@q#Z~#9Z~#@vXP~OY#9ZZ]#9Z^!Q#9Z!Q![#Ac![!c#9Z!c!i#Ac!i#T#9Z#T#Z#Ac#Z~#9Z~#AhXP~OY#9ZZ]#9Z^!Q#9Z!Q![#BT![!c#9Z!c!i#BT!i#T#9Z#T#Z#BT#Z~#9Z~#BYXP~OY#9ZZ]#9Z^!Q#9Z!Q![#Bu![!c#9Z!c!i#Bu!i#T#9Z#T#Z#Bu#Z~#9Z~#BzXP~OY#9ZZ]#9Z^!Q#9Z!Q![#8a![!c#9Z!c!i#8a!i#T#9Z#T#Z#8a#Z~#9Z~#ClZP~OY#8aYZ*PZ]#8a]^*P^r#8ars#9Zsu#8auv#9Zv#O#8a#O#P#9i#P~#8a~#DdsP~OY#9ZZ]#9Z^r#9Zrs#6msu#9Zuv#6mvw#9Zwx#6mx!Q#9Z!Q!R#Fq!R!S#Fq!S!T#Fq!T!U#Fq!U!Y#Gs!Y!w#9Z!w!x#Hu!x#O#9Z#O#P#6m#P#T#9Z#T#U#6m#U#V#6m#V#X#9Z#X#Y#6m#Y#Z#6m#Z#b#9Z#b#c#6m#c#f#9Z#f#g#6m#g#h#9Z#h#i#6m#i#j#Kk#j#k#6m#k#l#9Z#l#m#L}#m~#9Z~#Fz]P~%uW&T`OY#6mYZ*PZ]#6m]^*P^r#6mrs#7isu#6muv#9Zv!Q#6m!Q!Y#Gs!Y#O#6m#O#P#D_#P~#6m~#G|]P~%uW&T`OY#6mYZ*PZ]#6m]^*P^r#6mrs#7isu#6muv#9Zv!Q#6m!Q!Y#6m!Y#O#6m#O#P#D_#P~#6m~#HzXP~OY#9ZZ]#9Z^!Q#9Z!Q![#Ig![!c#9Z!c!i#Ig!i#T#9Z#T#Z#Ig#Z~#9Z~#IlXP~OY#9ZZ]#9Z^!Q#9Z!Q![#JX![!c#9Z!c!i#JX!i#T#9Z#T#Z#JX#Z~#9Z~#J^XP~OY#9ZZ]#9Z^!Q#9Z!Q![#Jy![!c#9Z!c!i#Jy!i#T#9Z#T#Z#Jy#Z~#9Z~#KOXP~OY#9ZZ]#9Z^!Q#9Z!Q![#Kk![!c#9Z!c!i#Kk!i#T#9Z#T#Z#Kk#Z~#9Z~#KpXP~OY#9ZZ]#9Z^!Q#9Z!Q![#L]![!c#9Z!c!i#L]!i#T#9Z#T#Z#L]#Z~#9Z~#LbXP~OY#9ZZ]#9Z^!Q#9Z!Q![#L}![!c#9Z!c!i#L}!i#T#9Z#T#Z#L}#Z~#9Z~#MSXP~OY#9ZZ]#9Z^!Q#9Z!Q![#Mo![!c#9Z!c!i#Mo!i#T#9Z#T#Z#Mo#Z~#9Z~#MtXP~OY#9ZZ]#9Z^!Q#9Z!Q![#6m![!c#9Z!c!i#6m!i#T#9Z#T#Z#6m#Z~#9Z![#Nlf%ip%uW&T``QOY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!O)Y!O!P!D}!P!Q)Y!Q![$!Q![!g)Y!g!h!FY!h#O)Y#O#P0S#P#X)Y#X#Y!FY#Y#c)Y#c#d$;j#d#l)Y#l#m$=f#m~)Yj$!Zb%uW&T``QOY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!O)Y!O!P!D}!P!Q)Y!Q![$#c![!g)Y!g!h!FY!h#O)Y#O#P0S#P#X)Y#X#Y!FY#Y~)Yj$#lb%uW&T``QOY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!O)Y!O!P!D}!P!Q)Y!Q![$$t![!g)Y!g!h!FY!h#O)Y#O#P0S#P#X)Y#X#Y!FY#Y~)Yj$$}c%uW&T``QOY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv})Y}!O$&Y!O!P!D}!P!Q)Y!Q![$:X![!g)Y!g!h!FY!h#O)Y#O#P0S#P#X)Y#X#Y!FY#Y~)Yj$&a[%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![$'V![#O)Y#O#P0S#P~)Yj$'^[%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![$(S![#O)Y#O#P0S#P~)Yj$(Z[%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv})Y}!O$)P!O#O)Y#O#P0S#P~)Yj$)W[%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![$)|![#O)Y#O#P0S#P~)Yj$*T[%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![$*y![#O)Y#O#P0S#P~)Yj$+S[%uW&T`hQOY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!v)Y!v!w$+x!w#O)Y#O#P0S#P~)Yj$,P[%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![$,u![#O)Y#O#P0S#P~)Yj$,|[%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![$-r![#O)Y#O#P0S#P~)Yj$-y[%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv![)Y![!]$.o!]#O)Y#O#P0S#P~)Yj$.v[%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![$/l![#O)Y#O#P0S#P~)Yj$/s[%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![$0i![#O)Y#O#P0S#P~)Yj$0p[%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv![)Y![!]$1f!]#O)Y#O#P0S#P~)Yj$1m[%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![$2c![#O)Y#O#P0S#P~)Yj$2j[%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![$3`![#O)Y#O#P0S#P~)Yj$3gb%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv{)Y{|$4o|})Y}!O$4o!O!Q)Y!Q![$5l![!|)Y!|!}$9`!}#O)Y#O#P0S#P~)Yj$4v[%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![$5l![#O)Y#O#P0S#P~)Yj$5s[%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![$6i![#O)Y#O#P0S#P~)Yj$6p[%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv![)Y![!]$7f!]#O)Y#O#P0S#P~)Yj$7m[%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![$8c![#O)Y#O#P0S#P~)Yj$8j[%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![$9`![#O)Y#O#P0S#P~)Yj$9iY%uW&T`iQOY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv#O)Y#O#P0S#P~)Yj$:bb%uW&T``QOY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!O)Y!O!P!D}!P!Q)Y!Q![$:X![!g)Y!g!h!FY!h#O)Y#O#P0S#P#X)Y#X#Y!FY#Y~)Yj$;q[%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q!Y$<g!Y#O)Y#O#P0S#P~)Yj$<p[%uW&T``QOY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q!Y$<g!Y#O)Y#O#P0S#P~)Yj$=m`%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![$>o![!c)Y!c!i$>o!i#O)Y#O#P0S#P#T)Y#T#Z$>o#Z~)Yj$>x`%uW&T``QOY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![$>o![!c)Y!c!i$>o!i#O)Y#O#P0S#P#T)Y#T#Z$>o#Z~)Y![$@Vb%ip%uW&T``QOY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!O)Y!O!P!D}!P!Q)Y!Q![$!Q![!g)Y!g!h!FY!h#O)Y#O#P0S#P#X)Y#X#Y!FY#Y~)Y!]$Aj]%ip%uW&T`%cROY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!`)Y!`!a:j!a!})Y!}#O$Bc#O#P0S#P~)Yj$BjZ%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv#O)Y#O#P0S#P#Q$C]#Q~)Yj$CfY%gQ%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv#O)Y#O#P0S#P~)Y!]$DaY%|R%ip%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv#O)Y#O#P0S#P~)Y![$E[`%ip%uW&T`!dQOY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv{)Y{|$F^|![)Y![!]:j!]!_)Y!_!`:j!`#O)Y#O#P0S#P~)Yj$Fe[%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv{)Y{|:j|#O)Y#O#P0S#P~)Y!]$GhY&UP%ip%uW&T`!dQOY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv#O)Y#O#P0S#P~)Y![$Hc[%ip%uW&T`!dQOY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!_)Y!_!`:j!`#O)Y#O#P0S#P~)Y!]$IdY%_R%ip%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv#O)Y#O#P0S#P~)Y!a$Jaf%ip%eS%uWUR&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![$Ku![!c)Y!c!}$Ku!}#O)Y#O#P0S#P#R)Y#R#S$Ku#S#T)Y#T#o$Ku#o4w)Y4w5b$Ku5b5i)Y5i6S$Ku6S~)Yo$LQf%eS%uWUR&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![$Ku![!c)Y!c!}$Ku!}#O)Y#O#P0S#P#R)Y#R#S$Ku#S#T)Y#T#o$Ku#o4w)Y4w5b$Ku5b5i)Y5i6S$Ku6S~)Y!]$MqY%tR%ip%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv#O)Y#O#P0S#P~)Y!Y$Nfd%iprs)Yuv)Ywx)Y!Q!R1e!R!S1e!S!T1e!T!U1e!U!Y2b!w!x3_#O#P)Y#T#U)Y#U#V)Y#X#Y)Y#Y#Z)Y#b#c)Y#f#g)Y#h#i)Y#i#j4a#j#k)Y#l#m4y!]%!PY%sR%ip%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv#O)Y#O#P0S#P~)Y!a%!|d%dS%ip%uW&T`!dQOY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!c)Y!c!}%$[!}#O)Y#O#P0S#P#R)Y#R#S%%y#S#T)Y#T#o%$[#o4w)Y4w5b%$[5b5i)Y5i6S%$[6S~)Yk%$ef%uWUR&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![%$[![!c)Y!c!}%$[!}#O)Y#O#P0S#P#R)Y#R#S%$[#S#T)Y#T#o%$[#o4w)Y4w5b%$[5b5i)Y5i6S%$[6S~)Yk%&Qf%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![%$[![!c)Y!c!}%$[!}#O)Y#O#P0S#P#R)Y#R#S%$[#S#T)Y#T#o%$[#o4w)Y4w5b%$[5b5i)Y5i6S%$[6S~)Y!a%'qf%ip%uW%fU&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![$Ku![!c)Y!c!}$Ku!}#O)Y#O#P0S#P#R)Y#R#S$Ku#S#T)Y#T#o$Ku#o4w)Y4w5b$Ku5b5i)Y5i6S$Ku6S~)Y!a%)dg%ip%eS%uWUR&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![$Ku![!c)Y!c!}$Ku!}#O)Y#O#P0S#P#R)Y#R#S$Ku#S#T)Y#T#U%*{#U#o$Ku#o4w)Y4w5b$Ku5b5i)Y5i6S$Ku6S~)Yo%+Wh%eS%uWUR&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![$Ku![!c)Y!c!}$Ku!}#O)Y#O#P0S#P#R)Y#R#S$Ku#S#T)Y#T#`$Ku#`#a%,r#a#o$Ku#o4w)Y4w5b$Ku5b5i)Y5i6S$Ku6S~)Yo%,}h%eS%uWUR&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![$Ku![!c)Y!c!}$Ku!}#O)Y#O#P0S#P#R)Y#R#S$Ku#S#T)Y#T#g$Ku#g#h%.i#h#o$Ku#o4w)Y4w5b$Ku5b5i)Y5i6S$Ku6S~)Yo%.th%eS%uWUR&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![$Ku![!c)Y!c!}$Ku!}#O)Y#O#P0S#P#R)Y#R#S$Ku#S#T)Y#T#X$Ku#X#Y%0`#Y#o$Ku#o4w)Y4w5b$Ku5b5i)Y5i6S$Ku6S~)Yo%0mf%eS%uW!pQUR&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![$Ku![!c)Y!c!}$Ku!}#O)Y#O#P0S#P#R)Y#R#S$Ku#S#T)Y#T#o$Ku#o4w)Y4w5b$Ku5b5i)Y5i6S$Ku6S~)Y!a%2`h%ip%eS%uWUR&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![$Ku![!c)Y!c!}$Ku!}#O)Y#O#P0S#P#R)Y#R#S$Ku#S#T)Y#T#f$Ku#f#g%3z#g#o$Ku#o4w)Y4w5b$Ku5b5i)Y5i6S$Ku6S~)Yo%4Vh%eS%uWUR&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv!Q)Y!Q![$Ku![!c)Y!c!}$Ku!}#O)Y#O#P0S#P#R)Y#R#S$Ku#S#T)Y#T#i$Ku#i#j%.i#j#o$Ku#o4w)Y4w5b$Ku5b5i)Y5i6S$Ku6S~)Y!]%5|Y&PR%ip%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv#O)Y#O#P0S#P~)Y!]%6wY%}R%ip%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv#O)Y#O#P0S#P~)Y!]%7rY&QR%ip%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv#O)Y#O#P0S#P~)Y![%8mY&RQ%ip%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv#O)Y#O#P0S#P~)Y![%9hY&SQ%ip%uW&T`OY)YYZ*PZ])Y]^*P^r)Yrs*hsu)Yv#O)Y#O#P0S#P~)Y",
  tokenizers: [0, 1, 2, 3, 4, 5],
  topRules: {"Program":[0,3]},
  dynamicPrecedences: {"217":1},
  specialized: [{term: 6, get: value => spec_BasicId[value] || -1},{term: 66, get: value => spec_Operator[value] || -1}],
  tokenPrec: 14162
});

const autocompleteList = [
    { label: "Any", type: "type" },
    { label: "AutoNumber", type: "type" },
    { label: "Boolean", type: "type" },
    { label: "Char", type: "type" },
    { label: "Day", type: "type" },
    { label: "Date", type: "type" },
    { label: "DateTime", type: "type" },
    { label: "Year", type: "type" },
    { label: "Month", type: "type" },
    { label: "Week", type: "type" },
    { label: "Hour", type: "type" },
    { label: "Minute", type: "type" },
    { label: "Second", type: "type" },
    { label: "Millisecond", type: "type" },
    { label: "Microsecond", type: "type" },
    { label: "Nanosecond", type: "type" },
    { label: "Entity", type: "type" },
    { label: "Int", type: "type" },
    { label: "Number", type: "type" },
    { label: "Missing", type: "type" },
    { label: "Floating", type: "type" },
    { label: "UnsignedInt", type: "type" },
    { label: "SignedInt", type: "type" },
    { label: "Rational", type: "type" },
    { label: "FixedDecimal", type: "type" },
    { label: "Hash", type: "type" },
    { label: "FilePos", type: "type" },
    { label: "String", type: "type" },
    { label: "def", type: "keyword" },
    { label: "output", type: "interface" },
    { label: "insert", type: "interface" },
    { label: "delete", type: "interface" },
    { label: "export", type: "interface" },
    { label: "from", type: "keyword" },
    { label: "if", type: "keyword" },
    { label: "iff", type: "keyword" },
    { label: "then", type: "keyword" },
    { label: "else", type: "keyword" },
    { label: "end", type: "keyword" },
    { label: "exists", type: "keyword" },
    { label: "where", type: "keyword" },
    { label: "with", type: "keyword" },
    { label: "select", type: "keyword" },
    { label: "implies", type: "keyword" },
    { label: "use", type: "keyword" },
    { label: "forall", type: "keyword" },
    { label: "in", type: "keyword" },
    { label: "ic", type: "keyword" },
    { label: "not", type: "keyword" },
    { label: "and", type: "keyword" },
    { label: "or", type: "keyword" },
    { label: "xor", type: "keyword" },
    { label: "union", type: "keyword" },
    { label: "_flatten", type: "function" },
    { label: "abelian_group", type: "function" },
    { label: "abs", type: "function" },
    { label: "absorption_laws", type: "function" },
    { label: "acos", type: "function" },
    { label: "acosh", type: "function" },
    { label: "acot", type: "function" },
    { label: "add", type: "function" },
    { label: "antisymmetric", type: "function" },
    { label: "approximate_abelian_group", type: "function" },
    { label: "approximate_commutative_monoid", type: "function" },
    { label: "approximate_group", type: "function" },
    { label: "approximate_monoid", type: "function" },
    { label: "approximate_ring", type: "function" },
    { label: "approximate_semiring", type: "function" },
    { label: "approximately_associative", type: "function" },
    { label: "approximately_commutative", type: "function" },
    { label: "approximately_distributive", type: "function" },
    { label: "approximately_has_inverse", type: "function" },
    { label: "approximately_left_distributive", type: "function" },
    { label: "approximately_right_distributive", type: "function" },
    { label: "approximately_zero_annihilation", type: "function" },
    { label: "argmax", type: "function" },
    { label: "argmin", type: "function" },
    { label: "arity", type: "function" },
    { label: "asin", type: "function" },
    { label: "asinh", type: "function" },
    { label: "associative", type: "function" },
    { label: "atan", type: "function" },
    { label: "atanh", type: "function" },
    { label: "auto_number", type: "function" },
    { label: "binary_operator", type: "function" },
    { label: "binary_relation", type: "function" },
    { label: "binary_relation_substitution_laws", type: "function" },
    { label: "bitwise_and", type: "function" },
    { label: "bitwise_left_shift", type: "function" },
    { label: "bitwise_not", type: "function" },
    { label: "bitwise_or", type: "function" },
    { label: "bitwise_right_shift", type: "function" },
    { label: "bitwise_unsigned_right_shift", type: "function" },
    { label: "bitwise_xor", type: "function" },
    { label: "boolean_and", type: "function" },
    { label: "boolean_false", type: "function" },
    { label: "boolean_not", type: "function" },
    { label: "boolean_or", type: "function" },
    { label: "boolean_true", type: "function" },
    { label: "bottom", type: "function" },
    { label: "bounded_lattice", type: "function" },
    { label: "bounded_semilattice", type: "function" },
    { label: "byte", type: "function" },
    { label: "capture_group_by_index", type: "function" },
    { label: "capture_group_by_name", type: "function" },
    { label: "cart", type: "function" },
    { label: "cbrt", type: "function" },
    { label: "ceil", type: "function" },
    { label: "char", type: "function" },
    { label: "clamp", type: "function" },
    { label: "commutative", type: "function" },
    { label: "commutative_monoid", type: "function" },
    { label: "comparable", type: "function" },
    { label: "complement", type: "function" },
    { label: "concat", type: "function" },
    { label: "cos", type: "function" },
    { label: "cosh", type: "function" },
    { label: "cot", type: "function" },
    { label: "count", type: "function" },
    { label: "date_add", type: "function" },
    { label: "date_day", type: "function" },
    { label: "date_dayname", type: "function" },
    { label: "date_dayofquarter", type: "function" },
    { label: "date_dayofweek", type: "function" },
    { label: "date_dayofweekofmonth", type: "function" },
    { label: "date_dayofyear", type: "function" },
    { label: "date_daysinmonth", type: "function" },
    { label: "date_isleapyear", type: "function" },
    { label: "date_month", type: "function" },
    { label: "date_monthname", type: "function" },
    { label: "date_quarterofyear", type: "function" },
    { label: "date_subtract", type: "function" },
    { label: "date_week", type: "function" },
    { label: "date_year", type: "function" },
    { label: "dates_period_days", type: "function" },
    { label: "datetime_add", type: "function" },
    { label: "datetime_day", type: "function" },
    { label: "datetime_day_", type: "function" },
    { label: "datetime_dayname", type: "function" },
    { label: "datetime_dayofquarter", type: "function" },
    { label: "datetime_dayofweek", type: "function" },
    { label: "datetime_dayofweekofmonth", type: "function" },
    { label: "datetime_dayofyear", type: "function" },
    { label: "datetime_daysinmonth", type: "function" },
    { label: "datetime_hour", type: "function" },
    { label: "datetime_hour_", type: "function" },
    { label: "datetime_isleapyear", type: "function" },
    { label: "datetime_minute", type: "function" },
    { label: "datetime_minute_", type: "function" },
    { label: "datetime_month", type: "function" },
    { label: "datetime_month_", type: "function" },
    { label: "datetime_monthname", type: "function" },
    { label: "datetime_now", type: "function" },
    { label: "datetime_quarterofyear", type: "function" },
    { label: "datetime_second", type: "function" },
    { label: "datetime_subtract", type: "function" },
    { label: "datetime_to_nanoseconds", type: "function" },
    { label: "datetime_week", type: "function" },
    { label: "datetime_week_", type: "function" },
    { label: "datetime_year", type: "function" },
    { label: "datetime_year_", type: "function" },
    { label: "datetimes_period_milliseconds", type: "function" },
    { label: "decimal", type: "function" },
    { label: "decimal_bit_length", type: "function" },
    { label: "decimal_int_convert", type: "function" },
    { label: "decimal_precision", type: "function" },
    { label: "decode_base", type: "function" },
    { label: "default_value", type: "function" },
    { label: "deg", type: "function" },
    { label: "denominator", type: "function" },
    { label: "describe", type: "function" },
    { label: "diff", type: "function" },
    { label: "disjoint", type: "function" },
    { label: "distributive", type: "function" },
    { label: "divide", type: "function" },
    { label: "docstring", type: "function" },
    { label: "domain", type: "function" },
    { label: "dot_join", type: "function" },
    { label: "double_metaphone", type: "function" },
    { label: "empty", type: "function" },
    { label: "encode_base", type: "function" },
    { label: "epoch_milliseconds", type: "function" },
    { label: "eq", type: "function" },
    { label: "equal", type: "function" },
    { label: "equivalence_relation", type: "function" },
    { label: "erf", type: "function" },
    { label: "erfinv", type: "function" },
    { label: "escape_regex_metachars", type: "function" },
    { label: "export_csv", type: "function" },
    { label: "export_json", type: "function" },
    { label: "factorial", type: "function" },
    { label: "filepos", type: "function" },
    { label: "filepos_value", type: "function" },
    { label: "first", type: "function" },
    { label: "float", type: "function" },
    { label: "float_int_convert", type: "function" },
    { label: "floor", type: "function" },
    { label: "floor_divide", type: "function" },
    { label: "floor_to_int", type: "function" },
    { label: "format_date", type: "function" },
    { label: "format_datetime", type: "function" },
    { label: "formula_card_est", type: "function" },
    { label: "frequency", type: "function" },
    { label: "function", type: "function" },
    { label: "geometric_mean", type: "function" },
    { label: "glm_generic", type: "function" },
    { label: "glm_linear_regression", type: "function" },
    { label: "glm_logistic_regression", type: "function" },
    { label: "glm_predict", type: "function" },
    { label: "glm_probit_regression", type: "function" },
    { label: "graphviz", type: "function" },
    { label: "group", type: "function" },
    { label: "gt", type: "function" },
    { label: "gt_eq", type: "function" },
    { label: "harmonic_mean", type: "function" },
    { label: "has_identity", type: "function" },
    { label: "has_left_identity", type: "function" },
    { label: "has_left_zero", type: "function" },
    { label: "has_maximal_element", type: "function" },
    { label: "has_minimal_element", type: "function" },
    { label: "has_right_identity", type: "function" },
    { label: "has_right_zero", type: "function" },
    { label: "hash", type: "function" },
    { label: "hash_value_uint", type: "function" },
    { label: "haversine", type: "function" },
    { label: "help", type: "function" },
    { label: "html", type: "function" },
    { label: "ic", type: "function" },
    { label: "idempotent", type: "function" },
    { label: "identity", type: "function" },
    { label: "int", type: "function" },
    { label: "int_float_convert", type: "function" },
    { label: "int_spread_by_even", type: "function" },
    { label: "int_spread_by_ratio", type: "function" },
    { label: "intersect", type: "function" },
    { label: "irreflexive", type: "function" },
    { label: "is_", type: "function" },
    { label: "jacobian", type: "function" },
    { label: "join_bounded_lattice", type: "function" },
    { label: "last", type: "function" },
    { label: "lattice", type: "function" },
    { label: "left_distributive", type: "function" },
    { label: "left_identity", type: "function" },
    { label: "left_override", type: "function" },
    { label: "left_zero", type: "function" },
    { label: "levenshtein", type: "function" },
    { label: "like_match", type: "function" },
    { label: "linear_regression", type: "function" },
    { label: "linear_regression_objective", type: "function" },
    { label: "linear_regression_predict", type: "function" },
    { label: "lined_csv", type: "function" },
    { label: "load_csv", type: "function" },
    { label: "load_csv_row_wise", type: "function" },
    { label: "load_json", type: "function" },
    { label: "log", type: "function" },
    { label: "log_card_est", type: "function" },
    { label: "lowercase", type: "function" },
    { label: "lr_random_initial_point", type: "function" },
    { label: "lt", type: "function" },
    { label: "lt_eq", type: "function" },
    { label: "mae", type: "function" },
    { label: "markdown", type: "function" },
    { label: "max", type: "function" },
    { label: "max_k", type: "function" },
    { label: "maximal_element", type: "function" },
    { label: "maximum", type: "function" },
    { label: "mean", type: "function" },
    { label: "mean_normalization", type: "function" },
    { label: "median", type: "function" },
    { label: "meet_bounded_lattice", type: "function" },
    { label: "metaphone", type: "function" },
    { label: "min", type: "function" },
    { label: "min_k", type: "function" },
    { label: "min_max_normalization", type: "function" },
    { label: "minimal_element", type: "function" },
    { label: "minimize_initial_point", type: "function" },
    { label: "minimum", type: "function" },
    { label: "missing", type: "function" },
    { label: "mlpack_adaboost", type: "function" },
    { label: "mlpack_adaboost_predict", type: "function" },
    { label: "mlpack_approx_kfn", type: "function" },
    { label: "mlpack_approx_kfn_build", type: "function" },
    { label: "mlpack_dbscan", type: "function" },
    { label: "mlpack_decision_tree", type: "function" },
    { label: "mlpack_decision_tree_predict", type: "function" },
    { label: "mlpack_det", type: "function" },
    { label: "mlpack_det_build", type: "function" },
    { label: "mlpack_emst", type: "function" },
    { label: "mlpack_fastmks", type: "function" },
    { label: "mlpack_fastmks_build", type: "function" },
    { label: "mlpack_gmm_generate", type: "function" },
    { label: "mlpack_gmm_probability", type: "function" },
    { label: "mlpack_gmm_train", type: "function" },
    { label: "mlpack_hoeffding_tree", type: "function" },
    { label: "mlpack_hoeffding_tree_predict", type: "function" },
    { label: "mlpack_kernel_pca", type: "function" },
    { label: "mlpack_kfn", type: "function" },
    { label: "mlpack_kfn_build", type: "function" },
    { label: "mlpack_kmeans", type: "function" },
    { label: "mlpack_kmeans_centroids", type: "function" },
    { label: "mlpack_knn", type: "function" },
    { label: "mlpack_knn_build", type: "function" },
    { label: "mlpack_krann", type: "function" },
    { label: "mlpack_krann_build", type: "function" },
    { label: "mlpack_lars", type: "function" },
    { label: "mlpack_lars_predict", type: "function" },
    { label: "mlpack_linear_regression", type: "function" },
    { label: "mlpack_linear_regression_predict", type: "function" },
    { label: "mlpack_linear_svm", type: "function" },
    { label: "mlpack_linear_svm_predict", type: "function" },
    { label: "mlpack_logistic_regression", type: "function" },
    { label: "mlpack_logistic_regression_predict", type: "function" },
    { label: "mlpack_lsh", type: "function" },
    { label: "mlpack_lsh_build", type: "function" },
    { label: "mlpack_mean_shift", type: "function" },
    { label: "mlpack_nbc", type: "function" },
    { label: "mlpack_nbc_predict", type: "function" },
    { label: "mlpack_nmf", type: "function" },
    { label: "mlpack_pca", type: "function" },
    { label: "mlpack_perceptron", type: "function" },
    { label: "mlpack_perceptron_predict", type: "function" },
    { label: "mlpack_preprocess_split", type: "function" },
    { label: "mlpack_radical", type: "function" },
    { label: "mlpack_random_forest", type: "function" },
    { label: "mlpack_random_forest_predict", type: "function" },
    { label: "mlpack_softmax_regression", type: "function" },
    { label: "mlpack_softmax_regression_predict", type: "function" },
    { label: "mode", type: "function" },
    { label: "modulo", type: "function" },
    { label: "monoid", type: "function" },
    { label: "mse", type: "function" },
    { label: "multiply", type: "function" },
    { label: "murmurhash", type: "function" },
    { label: "nanoseconds_to_datetime", type: "function" },
    { label: "natural_exp", type: "function" },
    { label: "natural_log", type: "function" },
    { label: "neq", type: "function" },
    { label: "not", type: "function" },
    { label: "nullary_relation", type: "function" },
    { label: "num_bytes", type: "function" },
    { label: "num_chars", type: "function" },
    { label: "numerator", type: "function" },
    { label: "pack", type: "function" },
    { label: "parse_date", type: "function" },
    { label: "parse_datetime", type: "function" },
    { label: "parse_decimal", type: "function" },
    { label: "parse_float", type: "function" },
    { label: "parse_int", type: "function" },
    { label: "parse_json", type: "function" },
    { label: "parse_uuid", type: "function" },
    { label: "partial_order", type: "function" },
    { label: "partial_order_and_bounded_lattice", type: "function" },
    { label: "partial_order_and_join_bounded_lattice", type: "function" },
    { label: "partial_order_and_lattice", type: "function" },
    { label: "partial_order_and_meet_bounded_lattice", type: "function" },
    { label: "pattern_match", type: "function" },
    { label: "percentile", type: "function" },
    { label: "percentile_nearest", type: "function" },
    { label: "period_add", type: "function" },
    { label: "period_day_to_int", type: "function" },
    { label: "period_max", type: "function" },
    { label: "period_min", type: "function" },
    { label: "pi_float", type: "function" },
    { label: "pivot", type: "function" },
    { label: "pop_standard_deviation", type: "function" },
    { label: "pop_variance", type: "function" },
    { label: "pop_zscore_normalization", type: "function" },
    { label: "power", type: "function" },
    { label: "prefix_join", type: "function" },
    { label: "preorder", type: "function" },
    { label: "product", type: "function" },
    { label: "proper_subset", type: "function" },
    { label: "proper_superset", type: "function" },
    { label: "rad", type: "function" },
    { label: "random_mersenne_twister", type: "function" },
    { label: "random_threefry_float", type: "function" },
    { label: "random_threefry_uint", type: "function" },
    { label: "random_uint", type: "function" },
    { label: "range", type: "function" },
    { label: "rational", type: "function" },
    { label: "rational_convert", type: "function" },
    { label: "reflexive", type: "function" },
    { label: "regex_compile", type: "function" },
    { label: "regex_match", type: "function" },
    { label: "regex_match_all", type: "function" },
    { label: "rel", type: "function" },
    { label: "relname_string", type: "function" },
    { label: "remainder", type: "function" },
    { label: "reverse_sort", type: "function" },
    { label: "right_distributive", type: "function" },
    { label: "right_identity", type: "function" },
    { label: "right_override", type: "function" },
    { label: "right_zero", type: "function" },
    { label: "ring", type: "function" },
    { label: "rmse", type: "function" },
    { label: "round", type: "function" },
    { label: "sample_standard_deviation", type: "function" },
    { label: "sample_variance", type: "function" },
    { label: "sample_zscore_normalization", type: "function" },
    { label: "second", type: "function" },
    { label: "semilattice", type: "function" },
    { label: "semiring", type: "function" },
    { label: "sign", type: "function" },
    { label: "sin", type: "function" },
    { label: "sinh", type: "function" },
    { label: "sort", type: "function" },
    { label: "soundex", type: "function" },
    { label: "spread", type: "function" },
    { label: "sqrt", type: "function" },
    { label: "squared", type: "function" },
    { label: "squared_deviation", type: "function" },
    { label: "strict_partial_order", type: "function" },
    { label: "strict_total_order", type: "function" },
    { label: "string", type: "function" },
    { label: "string_join", type: "function" },
    { label: "string_length", type: "function" },
    { label: "string_replace", type: "function" },
    { label: "string_replace_multiple", type: "function" },
    { label: "string_split", type: "function" },
    { label: "string_trim", type: "function" },
    { label: "subset", type: "function" },
    { label: "substring", type: "function" },
    { label: "substring_bytes", type: "function" },
    { label: "subtract", type: "function" },
    { label: "suffix_join", type: "function" },
    { label: "sum", type: "function" },
    { label: "sum_int", type: "function" },
    { label: "superset", type: "function" },
    { label: "svg", type: "function" },
    { label: "symmetric", type: "function" },
    { label: "table", type: "function" },
    { label: "tan", type: "function" },
    { label: "tanh", type: "function" },
    { label: "ternary_relation", type: "function" },
    { label: "top", type: "function" },
    { label: "total", type: "function" },
    { label: "total_order", type: "function" },
    { label: "transitive", type: "function" },
    { label: "transpose", type: "function" },
    { label: "trunc", type: "function" },
    { label: "trunc_divide", type: "function" },
    { label: "trunc_to_int", type: "function" },
    { label: "uint", type: "function" },
    { label: "unary_operator", type: "function" },
    { label: "unary_relation", type: "function" },
    { label: "unary_relation_substitution_laws", type: "function" },
    { label: "union", type: "function" },
    { label: "unit_normalization", type: "function" },
    { label: "unix_epoch", type: "function" },
    { label: "unpack", type: "function" },
    { label: "uppercase", type: "function" },
    { label: "uuid_string", type: "function" },
    { label: "vega", type: "function" },
    { label: "vegalite", type: "function" },
    { label: "vegalite_utils", type: "function" },
    { label: "view_json", type: "function" },
    { label: "weighted_mean", type: "function" },
    { label: "xgboost_classifier", type: "function" },
    { label: "xgboost_classifier_predict", type: "function" },
    { label: "xgboost_classifier_probabilities", type: "function" },
    { label: "xgboost_feature_importances", type: "function" },
    { label: "xgboost_regressor", type: "function" },
    { label: "xgboost_regressor_predict", type: "function" },
    { label: "zero_annihilation", type: "function" },
    { label: "zero_of_operator", type: "function" },
    { label: "zip", type: "function" },
    { label: "registered", type: "variable", info: "Registered Sign / Registered Trade Mark Sign", apply: "®" },
    { label: "degree", type: "variable", info: "Degree Sign", apply: "°" },
    { label: "pm", type: "variable", info: "Plus-Minus Sign / Plus-Or-Minus Sign", apply: "±" },
    { label: "\\^2", info: "Superscript Two / Superscript Digit Two", apply: "²" },
    { label: "\\^3", info: "Superscript Three / Superscript Digit Three", apply: "³" },
    { label: "\\^1", info: "Superscript One / Superscript Digit One", apply: "¹" },
    { label: "\\1/4", type: "variable", info: "Vulgar Fraction One Quarter / Fraction One Quarter", apply: "¼" },
    { label: "\\1/2", type: "variable", info: "Vulgar Fraction One Half / Fraction One Half", apply: "½" },
    { label: "\\3/4", type: "variable", info: "Vulgar Fraction Three Quarters / Fraction Three Quarters", apply: "¾" },
    { label: "\\questiondown", type: "variable", info: "Inverted Question Mark", apply: "¿" },
    { label: "\\times", type: "variable", info: "Multiplication Sign", apply: "×" },
    { label: "\\div", type: "variable", info: "Division Sign", apply: "÷" },
    { label: "\\Alpha", type: "variable", info: "Greek Capital Letter Alpha", apply: "Α" },
    { label: "\\Beta", type: "variable", info: "Greek Capital Letter Beta", apply: "Β" },
    { label: "\\Gamma", type: "variable", info: "Greek Capital Letter Gamma", apply: "Γ" },
    { label: "\\Delta", type: "variable", info: "Greek Capital Letter Delta", apply: "Δ" },
    { label: "\\Epsilon", type: "variable", info: "Greek Capital Letter Epsilon", apply: "Ε" },
    { label: "\\Zeta", type: "variable", info: "Greek Capital Letter Zeta", apply: "Ζ" },
    { label: "\\Eta", type: "variable", info: "Greek Capital Letter Eta", apply: "Η" },
    { label: "\\Theta", type: "variable", info: "Greek Capital Letter Theta", apply: "Θ" },
    { label: "\\Iota", type: "variable", info: "Greek Capital Letter Iota", apply: "Ι" },
    { label: "\\Kappa", type: "variable", info: "Greek Capital Letter Kappa", apply: "Κ" },
    { label: "\\Lambda", type: "variable", info: "Greek Capital Letter Lamda / Greek Capital Letter Lambda", apply: "Λ" },
    { label: "\\upMu", type: "variable", info: "Greek Capital Letter Mu", apply: "Μ" },
    { label: "\\upNu", type: "variable", info: "Greek Capital Letter Nu", apply: "Ν" },
    { label: "\\Xi", type: "variable", info: "Greek Capital Letter Xi", apply: "Ξ" },
    { label: "\\upOmicron", type: "variable", info: "Greek Capital Letter Omicron", apply: "Ο" },
    { label: "\\Pi", type: "variable", info: "Greek Capital Letter Pi", apply: "Π" },
    { label: "\\Rho", type: "variable", info: "Greek Capital Letter Rho", apply: "Ρ" },
    { label: "\\Sigma", type: "variable", info: "Greek Capital Letter Sigma", apply: "Σ" },
    { label: "\\Tau", type: "variable", info: "Greek Capital Letter Tau", apply: "Τ" },
    { label: "\\Upsilon", type: "variable", info: "Greek Capital Letter Upsilon", apply: "Υ" },
    { label: "\\Phi", type: "variable", info: "Greek Capital Letter Phi", apply: "Φ" },
    { label: "\\Chi", type: "variable", info: "Greek Capital Letter Chi", apply: "Χ" },
    { label: "\\Psi", type: "variable", info: "Greek Capital Letter Psi", apply: "Ψ" },
    { label: "\\Omega", type: "variable", info: "Greek Capital Letter Omega", apply: "Ω" },
    { label: "\\alpha", type: "variable", info: "Greek Small Letter Alpha", apply: "α" },
    { label: "\\beta", type: "variable", info: "Greek Small Letter Beta", apply: "β" },
    { label: "\\gamma", type: "variable", info: "Greek Small Letter Gamma", apply: "γ" },
    { label: "\\delta", type: "variable", info: "Greek Small Letter Delta", apply: "δ" },
    { label: "\\varepsilon", type: "variable", info: "Greek Small Letter Epsilon", apply: "ε" },
    { label: "\\zeta", type: "variable", info: "Greek Small Letter Zeta", apply: "ζ" },
    { label: "\\eta", type: "variable", info: "Greek Small Letter Eta", apply: "η" },
    { label: "\\theta", type: "variable", info: "Greek Small Letter Theta", apply: "θ" },
    { label: "\\iota", type: "variable", info: "Greek Small Letter Iota", apply: "ι" },
    { label: "\\kappa", type: "variable", info: "Greek Small Letter Kappa", apply: "κ" },
    { label: "\\lambda", type: "variable", info: "Greek Small Letter Lamda / Greek Small Letter Lambda", apply: "λ" },
    { label: "\\mu", type: "variable", info: "Greek Small Letter Mu", apply: "μ" },
    { label: "\\nu", type: "variable", info: "Greek Small Letter Nu", apply: "ν" },
    { label: "\\xi", type: "variable", info: "Greek Small Letter Xi", apply: "ξ" },
    { label: "\\upomicron", type: "variable", info: "Greek Small Letter Omicron", apply: "ο" },
    { label: "\\pi", type: "variable", info: "Greek Small Letter Pi", apply: "π" },
    { label: "\\rho", type: "variable", info: "Greek Small Letter Rho", apply: "ρ" },
    { label: "\\varsigma", type: "variable", info: "Greek Small Letter Final Sigma", apply: "ς" },
    { label: "\\sigma", type: "variable", info: "Greek Small Letter Sigma", apply: "σ" },
    { label: "\\tau", type: "variable", info: "Greek Small Letter Tau", apply: "τ" },
    { label: "\\upsilon", type: "variable", info: "Greek Small Letter Upsilon", apply: "υ" },
    { label: "\\varphi", type: "variable", info: "Greek Small Letter Phi", apply: "φ" },
    { label: "\\chi", type: "variable", info: "Greek Small Letter Chi", apply: "χ" },
    { label: "\\psi", type: "variable", info: "Greek Small Letter Psi", apply: "ψ" },
    { label: "\\omega", type: "variable", info: "Greek Small Letter Omega", apply: "ω" },
    { label: "\\upvarbeta", type: "variable", info: "Greek Beta Symbol / Greek Small Letter Curled Beta", apply: "ϐ" },
    { label: "\\vartheta", type: "variable", info: "Greek Theta Symbol / Greek Small Letter Script Theta", apply: "ϑ" },
    { label: "\\phi", type: "variable", info: "Greek Phi Symbol / Greek Small Letter Script Phi", apply: "ϕ" },
    { label: "\\varpi", type: "variable", info: "Greek Pi Symbol / Greek Small Letter Omega Pi", apply: "ϖ" },
    { label: "\\upoldKoppa", type: "variable", info: "Greek Letter Archaic Koppa", apply: "Ϙ" },
    { label: "\\upoldkoppa", type: "variable", info: "Greek Small Letter Archaic Koppa", apply: "ϙ" },
    { label: "\\Stigma", type: "variable", info: "Greek Letter Stigma / Greek Capital Letter Stigma", apply: "Ϛ" },
    { label: "\\upstigma", type: "variable", info: "Greek Small Letter Stigma", apply: "ϛ" },
    { label: "\\Digamma", type: "variable", info: "Greek Letter Digamma / Greek Capital Letter Digamma", apply: "Ϝ" },
    { label: "\\digamma", type: "variable", info: "Greek Small Letter Digamma", apply: "ϝ" },
    { label: "\\Koppa", type: "variable", info: "Greek Letter Koppa / Greek Capital Letter Koppa", apply: "Ϟ" },
    { label: "\\upkoppa", type: "variable", info: "Greek Small Letter Koppa", apply: "ϟ" },
    { label: "\\Sampi", type: "variable", info: "Greek Letter Sampi / Greek Capital Letter Sampi", apply: "Ϡ" },
    { label: "\\upsampi", type: "variable", info: "Greek Small Letter Sampi", apply: "ϡ" },
    { label: "\\varkappa", type: "variable", info: "Greek Kappa Symbol / Greek Small Letter Script Kappa", apply: "ϰ" },
    { label: "\\varrho", type: "variable", info: "Greek Rho Symbol / Greek Small Letter Tailed Rho", apply: "ϱ" },
    { label: "\\varTheta", type: "variable", info: "Greek Capital Theta Symbol", apply: "ϴ" },
    { label: "\\epsilon", type: "variable", info: "Greek Lunate Epsilon Symbol", apply: "ϵ" },
    { label: "\\backepsilon", type: "variable", info: "Greek Reversed Lunate Epsilon Symbol", apply: "϶" },
    { label: "\\^0", info: "Superscript Zero / Superscript Digit Zero", apply: "⁰" },
    { label: "\\^i", info: "Superscript Latin Small Letter I", apply: "ⁱ" },
    { label: "\\^4", info: "Superscript Four / Superscript Digit Four", apply: "⁴" },
    { label: "\\^5", info: "Superscript Five / Superscript Digit Five", apply: "⁵" },
    { label: "\\^6", info: "Superscript Six / Superscript Digit Six", apply: "⁶" },
    { label: "\\^7", info: "Superscript Seven / Superscript Digit Seven", apply: "⁷" },
    { label: "\\^8", info: "Superscript Eight / Superscript Digit Eight", apply: "⁸" },
    { label: "\\^9", info: "Superscript Nine / Superscript Digit Nine", apply: "⁹" },
    { label: "\\^+", info: "Superscript Plus Sign", apply: "⁺" },
    { label: "\\^-", info: "Superscript Minus / Superscript Hyphen-Minus", apply: "⁻" },
    { label: "\\^=", info: "Superscript Equals Sign", apply: "⁼" },
    { label: "\\^(", info: "Superscript Left Parenthesis / Superscript Opening Parenthesis", apply: "⁽" },
    { label: "\\^)", info: "Superscript Right Parenthesis / Superscript Closing Parenthesis", apply: "⁾" },
    { label: "\\^n", info: "Superscript Latin Small Letter N", apply: "ⁿ" },
    { label: "\\_0", type: "variable", info: "Subscript Zero / Subscript Digit Zero", apply: "₀" },
    { label: "\\_1", type: "variable", info: "Subscript One / Subscript Digit One", apply: "₁" },
    { label: "\\_2", type: "variable", info: "Subscript Two / Subscript Digit Two", apply: "₂" },
    { label: "\\_3", type: "variable", info: "Subscript Three / Subscript Digit Three", apply: "₃" },
    { label: "\\_4", type: "variable", info: "Subscript Four / Subscript Digit Four", apply: "₄" },
    { label: "\\_5", type: "variable", info: "Subscript Five / Subscript Digit Five", apply: "₅" },
    { label: "\\_6", type: "variable", info: "Subscript Six / Subscript Digit Six", apply: "₆" },
    { label: "\\_7", type: "variable", info: "Subscript Seven / Subscript Digit Seven", apply: "₇" },
    { label: "\\_8", type: "variable", info: "Subscript Eight / Subscript Digit Eight", apply: "₈" },
    { label: "\\_9", type: "variable", info: "Subscript Nine / Subscript Digit Nine", apply: "₉" },
    { label: "\\forall", type: "variable", info: "For All", apply: "∀" },
    { label: "\\complement", type: "variable", info: "Complement", apply: "∁" },
    { label: "\\partial", type: "variable", info: "Partial Differential", apply: "∂" },
    { label: "\\exists", type: "variable", info: "There Exists", apply: "∃" },
    { label: "\\nexists", type: "variable", info: "There Does Not Exist", apply: "∄" },
    { label: "\\emptyset", type: "variable", info: "Empty Set", apply: "∅" },
    { label: "\\increment", type: "variable", info: "Increment", apply: "∆" },
    { label: "\\nabla", type: "variable", info: "Nabla", apply: "∇" },
    { label: "\\in", type: "variable", info: "Element Of", apply: "∈" },
    { label: "\\notin", type: "variable", info: "Not An Element Of", apply: "∉" },
    { label: "\\sqrt", type: "variable", info: "Square Root", apply: "√" },
    { label: "\\cbrt", type: "variable", info: "Cube Root", apply: "∛" },
    { label: "\\fourthroot", type: "variable", info: "Fourth Root", apply: "∜" },
    { label: "\\propto", type: "variable", info: "Proportional To", apply: "∝" },
    { label: "\\infty", type: "variable", info: "Infinity", apply: "∞" },
    { label: "\\cap", type: "variable", info: "Intersection", apply: "∩" },
    { label: "\\cup", type: "variable", info: "Union", apply: "∪" },
    { label: "\\therefore", type: "variable", info: "Therefore", apply: "∴" },
    { label: "\\because", type: "variable", info: "Because", apply: "∵" },
    { label: "\\leq", type: "variable", info: "Less-Than Or Equal To / Less Than Or Equal To", apply: "≤" },
    { label: "\\geq", type: "variable", info: "Greater-Than Or Equal To / Greater Than Or Equal To", apply: "≥" },
    { label: "\\subset", type: "variable", info: "Subset Of", apply: "⊂" },
    { label: "\\supset", type: "variable", info: "Superset Of", apply: "⊃" },
    { label: "\\nsubset", type: "variable", info: "Not A Subset Of", apply: "⊄" },
    { label: "\\nsupset", type: "variable", info: "Not A Superset Of", apply: "⊅" },
    { label: "\\subseteq", type: "variable", info: "Subset Of Or Equal To", apply: "⊆" },
    { label: "\\supseteq", type: "variable", info: "Superset Of Or Equal To", apply: "⊇" },
    { label: "\\nsubseteq", type: "variable", info: "Neither A Subset Of Nor Equal To", apply: "⊈" },
    { label: "\\nsupseteq", type: "variable", info: "Neither A Superset Of Nor Equal To", apply: "⊉" },
    { label: "\\bowtie", type: "variable", info: "Bowtie", apply: "⋈" },
    { label: "\\ltimes", type: "variable", info: "Left Normal Factor Semidirect Product", apply: "⋉" },
    { label: "\\rtimes", type: "variable", info: "Right Normal Factor Semidirect Product", apply: "⋊" },
    { label: "\\vdots", type: "variable", info: "Vertical Ellipsis", apply: "⋮" },
    { label: "\\cdots", type: "variable", info: "Midline Horizontal Ellipsis", apply: "⋯" },
    { label: "\\adots", type: "variable", info: "Up Right Diagonal Ellipsis", apply: "⋰" },
    { label: "\\ddots", type: "variable", info: "Down Right Diagonal Ellipsis", apply: "⋱" }
];

const relLanguage = LRLanguage.define({
    parser: parser.configure({
        props: [
            // indentNodeProp.add({
            //   Application: delimitedIndent({closing: ")", align: false})
            // }),
            // foldNodeProp.add({
            //   Application: foldInside
            // }),
            styleTags({
                Keyword: tags.keyword,
                AttributeKeyword: tags.keyword,
                Type: tags.typeName,
                Emphasis: tags.emphasis,
                IntLiteral: tags.number,
                FloatLiteral: tags.number,
                BooleanLiteral: tags.bool,
                CharLiteral: tags.character,
                DocstringLiteral: tags.string,
                MultilineDocstringLiteral: tags.string,
                "StaticStringLiteral/...": tags.string,
                "StaticStringLiteral/StaticSequence/EscapeChar": tags.escape,
                StaticMultilineStringLiteral: tags.string,
                RawStringSequence: tags.string,
                InterpolationLiteral: tags.string,
                InterpolationMultilineLiteral: tags.string,
                LineComment: tags.lineComment,
                BlockComment: tags.blockComment,
                BasicId: tags.definition(tags.variableName),
                "LhsId/BasicId": tags.definition(tags.variableName),
                "LogicalParam/LogicalExpression/BasicExpression/BasicId": tags.definition(tags.attributeName),
                "BasicExpression/BasicId": tags.definition(tags.labelName),
                InterpolationId: tags.definition(tags.labelName),
                "FormalId/BasicId": tags.definition(tags.attributeName),
                "QualifiedNameElem/BasicId RelnameLiteral": tags.literal,
                ValueTypeLiteral: tags.literal,
                DefineStatement: tags.atom,
                DateLiteral: tags.string,
                DateTimeLiteral: tags.string,
                Operator: tags.operatorKeyword,
                OperatorKeyword: tags.operatorKeyword,
                '( )': tags.paren,
                '[ ]': tags.squareBracket,
                '{ }': tags.brace,
                ':': tags.derefOperator,
                ', ;': tags.separator
            }),
        ]
    }),
    languageData: {
        closeBrackets: { brackets: ["(", "[", "{", "'", '"', "`", '"""'] },
        commentTokens: { line: "//", block: { open: "/*", close: "*/" } },
        // indentOnInput: /^\s*(?:case |default:|\{|\}|<\/)$/,
        wordChars: "$"
    }
});
// Autocomplete
const relCompletion = relLanguage.data.of({
    autocomplete: completeFromList(autocompleteList)
});
function rel() {
    return new LanguageSupport(relLanguage, [relCompletion]);
}

export { rel, relCompletion, relLanguage };

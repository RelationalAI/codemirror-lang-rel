'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var lr = require('@lezer/lr');
var common = require('@lezer/common');
var language = require('@codemirror/language');
var highlight = require('@codemirror/highlight');

// This file was generated by lezer-generator. You probably shouldn't edit it.
const spec_identifier = {__proto__:null,inline:10, if:16, then:20, else:22, end:24, from:28, module:32, forall:36, for:40, in:42, implies:46, def:50, output:54, with:60, use:62, ic:66, doc:70, entity:76, true:80, false:80, Int:94, String:98, Any:102, Number:106, Char:110, Missing:114, Floating:118, UnsignedInt:122, SignedInt:126, Rational:130, FixedDecimal:134, RelName:138, Entity:142, AutoNumber:146, Hash:150, FilePos:154, Date:158, DateTime:162, Year:166, Month:170, Week:174, Day:178, Hour:182, Minute:186, Second:190, Millisecond:194, Microsecond:198, Nanosecond:202};
const parser = lr.LRParser.deserialize({
  version: 13,
  states: "0zO]QPOOOOQO'#Es'#EsOOQO'#DT'#DTOOQO'#Et'#EtOOQO'#DZ'#DZOOQO'#Ek'#EkOOQO'#Ef'#EfQ]QPOOO$[QPO'#C`O]QPO'#CcO$aQPO'#CiO$aQPO'#CkO]QPO'#CmO$aQPO'#CoO]QPO'#CrO$fQPO'#CtO$aQPO'#CyO$aQPO'#C|O$nQQO'#DOO$aQPO'#DRO$sQPO'#D[O(XQPO'#D^O+mQPO'#D`O/RQPO'#DbO2gQPO'#DdO5{QPO'#DfO9aQPO'#DhO<uQPO'#DjO@ZQPO'#DlOCoQPO'#DnOGTQPO'#DpOJiQPO'#DrOM}QPO'#DtO!#cQPO'#DvO!&wQPO'#DxO!*]QPO'#DzO!-qQPO'#D|O!1VQPO'#EOO!4kQPO'#EQO!8PQPO'#ESO!;eQPO'#EUO!>yQPO'#EWO!B_QPO'#EYO!EsQPO'#E[O!IXQPO'#E^O!LmQPO'#E`O#!RQPO'#EbO#%gQPO'#EdOOQO-E8d-E8dO#({QPO,58zO#,aQPO'#CeO#,nQPO,58}OOQO'#Cb'#CbOOQO,59T,59TO]QPO,59VO#,yQPO,59XO#-OQPO,59ZOOQO,59^,59^OOQO,59`,59`O#-TQPO,59bO#0lQPO,59eO#0qQPO,59hOOQO,59j,59jOOQO,59m,59mOOQO,59v,59vOOQO,59x,59xOOQO,59z,59zOOQO,59|,59|OOQO,5:O,5:OOOQO,5:Q,5:QOOQO,5:S,5:SOOQO,5:U,5:UOOQO,5:W,5:WOOQO,5:Y,5:YOOQO,5:[,5:[OOQO,5:^,5:^OOQO,5:`,5:`OOQO,5:b,5:bOOQO,5:d,5:dOOQO,5:f,5:fOOQO,5:h,5:hOOQO,5:j,5:jOOQO,5:l,5:lOOQO,5:n,5:nOOQO,5:p,5:pOOQO,5:r,5:rOOQO,5:t,5:tOOQO,5:v,5:vOOQO,5:x,5:xOOQO,5:z,5:zOOQO,5:|,5:|OOQO,5;O,5;OOOQO1G.f1G.fO#0yQPO1G.iO]QPO'#EgOOQO1G.i1G.iO]QPO1G.iO#1UQPO1G.qO]QPO1G.sO$aQPO1G.uOOQO'#Cx'#CxOOQO1G.|1G.|O#1ZQPO1G.|O$aQPO1G/POOQO1G/S1G/SO$aQPO1G/SOOQO-E8e-E8eOOQO7+$T7+$TO]QPO7+$TOOQO,5;R,5;RO#4oQPO7+$TOOQO7+$]7+$]O#4tQPO7+$_OOQO7+$a7+$aOOQO7+$h7+$hOOQO7+$k7+$kO#4yQPO7+$nO#5OQPO<<GoOOQO<<Go<<GoOOQO<<Gy<<GyOOQO<<HY<<HYOOQOAN=ZAN=Z",
  stateData: "#5T~O#^OSPOSQOS~OWXO^YO`ZOb[Od]Og^Oi_On`OqaOsbOvcOxPOyPOzPO{PO|PO!PdO!ReO!TfO!VgO!XhO!ZiO!]jO!_kO!alO!cmO!enO!goO!ipO!kqO!mrO!osO!qtO!suO!uvO!wwO!yxO!{yO!}zO#P{O#R|O#T}O#V!OO#X!PO#`WO~OT!RO~O#a!UO~Ok!]O#a!UO~Ot!`O~O#a!UOW!OX^!OX`!OXb!OXd!OXg!OXi!OXn!OXq!OXs!OXv!OXx!OXy!OXz!OX{!OX|!OX!P!OX!R!OX!T!OX!V!OX!X!OX!Z!OX!]!OX!_!OX!a!OX!c!OX!e!OX!g!OX!i!OX!k!OX!m!OX!o!OX!q!OX!s!OX!u!OX!w!OX!y!OX!{!OX!}!OX#P!OX#R!OX#T!OX#V!OX#X!OX#[!OX#`!OXY!OXZ!OX[!OX#c!OX#b!OX~O#a!UOW!QX^!QX`!QXb!QXd!QXg!QXi!QXn!QXq!QXs!QXv!QXx!QXy!QXz!QX{!QX|!QX!P!QX!R!QX!T!QX!V!QX!X!QX!Z!QX!]!QX!_!QX!a!QX!c!QX!e!QX!g!QX!i!QX!k!QX!m!QX!o!QX!q!QX!s!QX!u!QX!w!QX!y!QX!{!QX!}!QX#P!QX#R!QX#T!QX#V!QX#X!QX#[!QX#`!QXY!QXZ!QX[!QX#c!QX#b!QX~O#a!UOW!SX^!SX`!SXb!SXd!SXg!SXi!SXn!SXq!SXs!SXv!SXx!SXy!SXz!SX{!SX|!SX!P!SX!R!SX!T!SX!V!SX!X!SX!Z!SX!]!SX!_!SX!a!SX!c!SX!e!SX!g!SX!i!SX!k!SX!m!SX!o!SX!q!SX!s!SX!u!SX!w!SX!y!SX!{!SX!}!SX#P!SX#R!SX#T!SX#V!SX#X!SX#[!SX#`!SXY!SXZ!SX[!SX#c!SX#b!SX~O#a!UOW!UX^!UX`!UXb!UXd!UXg!UXi!UXn!UXq!UXs!UXv!UXx!UXy!UXz!UX{!UX|!UX!P!UX!R!UX!T!UX!V!UX!X!UX!Z!UX!]!UX!_!UX!a!UX!c!UX!e!UX!g!UX!i!UX!k!UX!m!UX!o!UX!q!UX!s!UX!u!UX!w!UX!y!UX!{!UX!}!UX#P!UX#R!UX#T!UX#V!UX#X!UX#[!UX#`!UXY!UXZ!UX[!UX#c!UX#b!UX~O#a!UOW!WX^!WX`!WXb!WXd!WXg!WXi!WXn!WXq!WXs!WXv!WXx!WXy!WXz!WX{!WX|!WX!P!WX!R!WX!T!WX!V!WX!X!WX!Z!WX!]!WX!_!WX!a!WX!c!WX!e!WX!g!WX!i!WX!k!WX!m!WX!o!WX!q!WX!s!WX!u!WX!w!WX!y!WX!{!WX!}!WX#P!WX#R!WX#T!WX#V!WX#X!WX#[!WX#`!WXY!WXZ!WX[!WX#c!WX#b!WX~O#a!UOW!YX^!YX`!YXb!YXd!YXg!YXi!YXn!YXq!YXs!YXv!YXx!YXy!YXz!YX{!YX|!YX!P!YX!R!YX!T!YX!V!YX!X!YX!Z!YX!]!YX!_!YX!a!YX!c!YX!e!YX!g!YX!i!YX!k!YX!m!YX!o!YX!q!YX!s!YX!u!YX!w!YX!y!YX!{!YX!}!YX#P!YX#R!YX#T!YX#V!YX#X!YX#[!YX#`!YXY!YXZ!YX[!YX#c!YX#b!YX~O#a!UOW![X^![X`![Xb![Xd![Xg![Xi![Xn![Xq![Xs![Xv![Xx![Xy![Xz![X{![X|![X!P![X!R![X!T![X!V![X!X![X!Z![X!]![X!_![X!a![X!c![X!e![X!g![X!i![X!k![X!m![X!o![X!q![X!s![X!u![X!w![X!y![X!{![X!}![X#P![X#R![X#T![X#V![X#X![X#[![X#`![XY![XZ![X[![X#c![X#b![X~O#a!UOW!^X^!^X`!^Xb!^Xd!^Xg!^Xi!^Xn!^Xq!^Xs!^Xv!^Xx!^Xy!^Xz!^X{!^X|!^X!P!^X!R!^X!T!^X!V!^X!X!^X!Z!^X!]!^X!_!^X!a!^X!c!^X!e!^X!g!^X!i!^X!k!^X!m!^X!o!^X!q!^X!s!^X!u!^X!w!^X!y!^X!{!^X!}!^X#P!^X#R!^X#T!^X#V!^X#X!^X#[!^X#`!^XY!^XZ!^X[!^X#c!^X#b!^X~O#a!UOW!`X^!`X`!`Xb!`Xd!`Xg!`Xi!`Xn!`Xq!`Xs!`Xv!`Xx!`Xy!`Xz!`X{!`X|!`X!P!`X!R!`X!T!`X!V!`X!X!`X!Z!`X!]!`X!_!`X!a!`X!c!`X!e!`X!g!`X!i!`X!k!`X!m!`X!o!`X!q!`X!s!`X!u!`X!w!`X!y!`X!{!`X!}!`X#P!`X#R!`X#T!`X#V!`X#X!`X#[!`X#`!`XY!`XZ!`X[!`X#c!`X#b!`X~O#a!UOW!bX^!bX`!bXb!bXd!bXg!bXi!bXn!bXq!bXs!bXv!bXx!bXy!bXz!bX{!bX|!bX!P!bX!R!bX!T!bX!V!bX!X!bX!Z!bX!]!bX!_!bX!a!bX!c!bX!e!bX!g!bX!i!bX!k!bX!m!bX!o!bX!q!bX!s!bX!u!bX!w!bX!y!bX!{!bX!}!bX#P!bX#R!bX#T!bX#V!bX#X!bX#[!bX#`!bXY!bXZ!bX[!bX#c!bX#b!bX~O#a!UOW!dX^!dX`!dXb!dXd!dXg!dXi!dXn!dXq!dXs!dXv!dXx!dXy!dXz!dX{!dX|!dX!P!dX!R!dX!T!dX!V!dX!X!dX!Z!dX!]!dX!_!dX!a!dX!c!dX!e!dX!g!dX!i!dX!k!dX!m!dX!o!dX!q!dX!s!dX!u!dX!w!dX!y!dX!{!dX!}!dX#P!dX#R!dX#T!dX#V!dX#X!dX#[!dX#`!dXY!dXZ!dX[!dX#c!dX#b!dX~O#a!UOW!fX^!fX`!fXb!fXd!fXg!fXi!fXn!fXq!fXs!fXv!fXx!fXy!fXz!fX{!fX|!fX!P!fX!R!fX!T!fX!V!fX!X!fX!Z!fX!]!fX!_!fX!a!fX!c!fX!e!fX!g!fX!i!fX!k!fX!m!fX!o!fX!q!fX!s!fX!u!fX!w!fX!y!fX!{!fX!}!fX#P!fX#R!fX#T!fX#V!fX#X!fX#[!fX#`!fXY!fXZ!fX[!fX#c!fX#b!fX~O#a!UOW!hX^!hX`!hXb!hXd!hXg!hXi!hXn!hXq!hXs!hXv!hXx!hXy!hXz!hX{!hX|!hX!P!hX!R!hX!T!hX!V!hX!X!hX!Z!hX!]!hX!_!hX!a!hX!c!hX!e!hX!g!hX!i!hX!k!hX!m!hX!o!hX!q!hX!s!hX!u!hX!w!hX!y!hX!{!hX!}!hX#P!hX#R!hX#T!hX#V!hX#X!hX#[!hX#`!hXY!hXZ!hX[!hX#c!hX#b!hX~O#a!UOW!jX^!jX`!jXb!jXd!jXg!jXi!jXn!jXq!jXs!jXv!jXx!jXy!jXz!jX{!jX|!jX!P!jX!R!jX!T!jX!V!jX!X!jX!Z!jX!]!jX!_!jX!a!jX!c!jX!e!jX!g!jX!i!jX!k!jX!m!jX!o!jX!q!jX!s!jX!u!jX!w!jX!y!jX!{!jX!}!jX#P!jX#R!jX#T!jX#V!jX#X!jX#[!jX#`!jXY!jXZ!jX[!jX#c!jX#b!jX~O#a!UOW!lX^!lX`!lXb!lXd!lXg!lXi!lXn!lXq!lXs!lXv!lXx!lXy!lXz!lX{!lX|!lX!P!lX!R!lX!T!lX!V!lX!X!lX!Z!lX!]!lX!_!lX!a!lX!c!lX!e!lX!g!lX!i!lX!k!lX!m!lX!o!lX!q!lX!s!lX!u!lX!w!lX!y!lX!{!lX!}!lX#P!lX#R!lX#T!lX#V!lX#X!lX#[!lX#`!lXY!lXZ!lX[!lX#c!lX#b!lX~O#a!UOW!nX^!nX`!nXb!nXd!nXg!nXi!nXn!nXq!nXs!nXv!nXx!nXy!nXz!nX{!nX|!nX!P!nX!R!nX!T!nX!V!nX!X!nX!Z!nX!]!nX!_!nX!a!nX!c!nX!e!nX!g!nX!i!nX!k!nX!m!nX!o!nX!q!nX!s!nX!u!nX!w!nX!y!nX!{!nX!}!nX#P!nX#R!nX#T!nX#V!nX#X!nX#[!nX#`!nXY!nXZ!nX[!nX#c!nX#b!nX~O#a!UOW!pX^!pX`!pXb!pXd!pXg!pXi!pXn!pXq!pXs!pXv!pXx!pXy!pXz!pX{!pX|!pX!P!pX!R!pX!T!pX!V!pX!X!pX!Z!pX!]!pX!_!pX!a!pX!c!pX!e!pX!g!pX!i!pX!k!pX!m!pX!o!pX!q!pX!s!pX!u!pX!w!pX!y!pX!{!pX!}!pX#P!pX#R!pX#T!pX#V!pX#X!pX#[!pX#`!pXY!pXZ!pX[!pX#c!pX#b!pX~O#a!UOW!rX^!rX`!rXb!rXd!rXg!rXi!rXn!rXq!rXs!rXv!rXx!rXy!rXz!rX{!rX|!rX!P!rX!R!rX!T!rX!V!rX!X!rX!Z!rX!]!rX!_!rX!a!rX!c!rX!e!rX!g!rX!i!rX!k!rX!m!rX!o!rX!q!rX!s!rX!u!rX!w!rX!y!rX!{!rX!}!rX#P!rX#R!rX#T!rX#V!rX#X!rX#[!rX#`!rXY!rXZ!rX[!rX#c!rX#b!rX~O#a!UOW!tX^!tX`!tXb!tXd!tXg!tXi!tXn!tXq!tXs!tXv!tXx!tXy!tXz!tX{!tX|!tX!P!tX!R!tX!T!tX!V!tX!X!tX!Z!tX!]!tX!_!tX!a!tX!c!tX!e!tX!g!tX!i!tX!k!tX!m!tX!o!tX!q!tX!s!tX!u!tX!w!tX!y!tX!{!tX!}!tX#P!tX#R!tX#T!tX#V!tX#X!tX#[!tX#`!tXY!tXZ!tX[!tX#c!tX#b!tX~O#a!UOW!vX^!vX`!vXb!vXd!vXg!vXi!vXn!vXq!vXs!vXv!vXx!vXy!vXz!vX{!vX|!vX!P!vX!R!vX!T!vX!V!vX!X!vX!Z!vX!]!vX!_!vX!a!vX!c!vX!e!vX!g!vX!i!vX!k!vX!m!vX!o!vX!q!vX!s!vX!u!vX!w!vX!y!vX!{!vX!}!vX#P!vX#R!vX#T!vX#V!vX#X!vX#[!vX#`!vXY!vXZ!vX[!vX#c!vX#b!vX~O#a!UOW!xX^!xX`!xXb!xXd!xXg!xXi!xXn!xXq!xXs!xXv!xXx!xXy!xXz!xX{!xX|!xX!P!xX!R!xX!T!xX!V!xX!X!xX!Z!xX!]!xX!_!xX!a!xX!c!xX!e!xX!g!xX!i!xX!k!xX!m!xX!o!xX!q!xX!s!xX!u!xX!w!xX!y!xX!{!xX!}!xX#P!xX#R!xX#T!xX#V!xX#X!xX#[!xX#`!xXY!xXZ!xX[!xX#c!xX#b!xX~O#a!UOW!zX^!zX`!zXb!zXd!zXg!zXi!zXn!zXq!zXs!zXv!zXx!zXy!zXz!zX{!zX|!zX!P!zX!R!zX!T!zX!V!zX!X!zX!Z!zX!]!zX!_!zX!a!zX!c!zX!e!zX!g!zX!i!zX!k!zX!m!zX!o!zX!q!zX!s!zX!u!zX!w!zX!y!zX!{!zX!}!zX#P!zX#R!zX#T!zX#V!zX#X!zX#[!zX#`!zXY!zXZ!zX[!zX#c!zX#b!zX~O#a!UOW!|X^!|X`!|Xb!|Xd!|Xg!|Xi!|Xn!|Xq!|Xs!|Xv!|Xx!|Xy!|Xz!|X{!|X|!|X!P!|X!R!|X!T!|X!V!|X!X!|X!Z!|X!]!|X!_!|X!a!|X!c!|X!e!|X!g!|X!i!|X!k!|X!m!|X!o!|X!q!|X!s!|X!u!|X!w!|X!y!|X!{!|X!}!|X#P!|X#R!|X#T!|X#V!|X#X!|X#[!|X#`!|XY!|XZ!|X[!|X#c!|X#b!|X~O#a!UOW#OX^#OX`#OXb#OXd#OXg#OXi#OXn#OXq#OXs#OXv#OXx#OXy#OXz#OX{#OX|#OX!P#OX!R#OX!T#OX!V#OX!X#OX!Z#OX!]#OX!_#OX!a#OX!c#OX!e#OX!g#OX!i#OX!k#OX!m#OX!o#OX!q#OX!s#OX!u#OX!w#OX!y#OX!{#OX!}#OX#P#OX#R#OX#T#OX#V#OX#X#OX#[#OX#`#OXY#OXZ#OX[#OX#c#OX#b#OX~O#a!UOW#QX^#QX`#QXb#QXd#QXg#QXi#QXn#QXq#QXs#QXv#QXx#QXy#QXz#QX{#QX|#QX!P#QX!R#QX!T#QX!V#QX!X#QX!Z#QX!]#QX!_#QX!a#QX!c#QX!e#QX!g#QX!i#QX!k#QX!m#QX!o#QX!q#QX!s#QX!u#QX!w#QX!y#QX!{#QX!}#QX#P#QX#R#QX#T#QX#V#QX#X#QX#[#QX#`#QXY#QXZ#QX[#QX#c#QX#b#QX~O#a!UOW#SX^#SX`#SXb#SXd#SXg#SXi#SXn#SXq#SXs#SXv#SXx#SXy#SXz#SX{#SX|#SX!P#SX!R#SX!T#SX!V#SX!X#SX!Z#SX!]#SX!_#SX!a#SX!c#SX!e#SX!g#SX!i#SX!k#SX!m#SX!o#SX!q#SX!s#SX!u#SX!w#SX!y#SX!{#SX!}#SX#P#SX#R#SX#T#SX#V#SX#X#SX#[#SX#`#SXY#SXZ#SX[#SX#c#SX#b#SX~O#a!UOW#UX^#UX`#UXb#UXd#UXg#UXi#UXn#UXq#UXs#UXv#UXx#UXy#UXz#UX{#UX|#UX!P#UX!R#UX!T#UX!V#UX!X#UX!Z#UX!]#UX!_#UX!a#UX!c#UX!e#UX!g#UX!i#UX!k#UX!m#UX!o#UX!q#UX!s#UX!u#UX!w#UX!y#UX!{#UX!}#UX#P#UX#R#UX#T#UX#V#UX#X#UX#[#UX#`#UXY#UXZ#UX[#UX#c#UX#b#UX~O#a!UOW#WX^#WX`#WXb#WXd#WXg#WXi#WXn#WXq#WXs#WXv#WXx#WXy#WXz#WX{#WX|#WX!P#WX!R#WX!T#WX!V#WX!X#WX!Z#WX!]#WX!_#WX!a#WX!c#WX!e#WX!g#WX!i#WX!k#WX!m#WX!o#WX!q#WX!s#WX!u#WX!w#WX!y#WX!{#WX!}#WX#P#WX#R#WX#T#WX#V#WX#X#WX#[#WX#`#WXY#WXZ#WX[#WX#c#WX#b#WX~O#a!UOWSa^Sa`SabSadSagSaiSanSaqSasSavSaxSaySazSa{Sa|Sa!PSa!RSa!TSa!VSa!XSa!ZSa!]Sa!_Sa!aSa!cSa!eSa!gSa!iSa!kSa!mSa!oSa!qSa!sSa!uSa!wSa!ySa!{Sa!}Sa#PSa#RSa#TSa#VSa#XSa#[Sa#`SaYSaZSa[Sa#cSa#bSa~OYXXZXX[XX~P]OY#QOZ#SO[#RO~O#c#UO~Oe#VO~O#a!UO#d#WOWja^ja`jabjadjagjaijanjaqjasjavjaxjayjazja{ja|ja!Pja!Rja!Tja!Vja!Xja!Zja!]ja!_ja!aja!cja!eja!gja!ija!kja!mja!oja!qja!sja!uja!wja!yja!{ja!}ja#Pja#Rja#Tja#Vja#Xja#[ja#`jaYjaZja[ja#cja#bja~Oo#ZO~O#d#[O#e#]O~OY#QOZ#`O[#_O~O[#cO~O#a!UOWji^ji`jibjidjigjiijinjiqjisjivjixjiyjizji{ji|ji!Pji!Rji!Tji!Vji!Xji!Zji!]ji!_ji!aji!cji!eji!gji!iji!kji!mji!oji!qji!sji!uji!wji!yji!{ji!}ji#Pji#Rji#Tji#Vji#Xji#[ji#`jiYjiZji[ji#cji#bji~O[#jO~O#b#kO~O#f#lO~O[#mO~O",
  goto: "(l#iPPPP#jP#w#jP&hPPP#jP#jP#jP#jPP#jP#jP#jP&w#jPP#jP#jPP#jP#jPPPPP#j&zP&zP&zP&zP&zP&zP&zP&zP&zP&zP&zP&zP&zP&zP&zP&zP&zP&zP&zP&zP&zP&zP&zP&zP&zP&zP&zP&zP'X'gPPP'mPPPPPPP(Q(_gTOVX[^!S!W#Q#S#U#`Q!VYQ!WZQ!Y]Q![_Q!^`Q!_aQ!acQ!bdQ!ceQ!dfQ!egQ!fhQ!giQ!hjQ!ikQ!jlQ!kmQ!lnQ!moQ!npQ!oqQ!prQ!qsQ!rtQ!suQ!tvQ!uwQ!vxQ!wyQ!xzQ!y{Q!z|Q!{}Q!|!OQ!}!PQ#O!RQ#X!]Q#e#VQ#f#YQ#g#ZR#h#]Q!TXQ#T!WQ#a#QQ#b#SR#i#`R#Y!]gROVX[^!S!W#Q#S#U#`QVOS!QV!SZ!SX!W#Q#S#`Q#P!TR#^#P`UOVX!S!W#Q#S#`Q!X[Q!Z^R#d#UgQOVX[^!S!W#Q#S#U#`gSOVX[^!S!W#Q#S#U#`",
  nodeNames: "⚠ LineComment BlockComment Rel InlineStatement inline VariableName IfStatement if Body then else end FromStatement from ModuleStatement module ForallStatement forall ForInStatement for in ImpliesStatement implies DefineStatement def OutputDefinitionStatement output AssignOp WithUseStatement with use ConstraintStatement ic DocstringStatement doc DocstringLiteral EntityStatement entity ExpressionStatement BooleanLiteral Number StringLiteral RelnameLiteral RelnameStringLiteral TypeStatement IntType Int StringType String AnyType Any NumberType Number CharType Char MissingType Missing FloatingType Floating UnsignedIntType UnsignedInt SignedIntType SignedInt RationalType Rational FixedDecimalType FixedDecimal RelNameType RelName EntityType Entity AutoNumberType AutoNumber HashType Hash FilePosType FilePos DateType Date DateTimeType DateTime YearType Year MonthType Month WeekType Week DayType Day HourType Hour MinuteType Minute SecondType Second MillisecondType Millisecond MicrosecondType Microsecond NanosecondType Nanosecond",
  maxTerm: 116,
  nodeProps: [
    [common.NodeProp.group, -5,40,41,42,43,44,"Expression",-28,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,"Type"]
  ],
  skippedNodes: [0,1,2],
  repeatNodeCount: 2,
  tokenData: "Et~RfXY!gYZ!g]^!gpq!grs!xwx8vxy9eyz9j!O!P9o!P!Q:o!Q!R;x!R![<m![!]=x!_!`Db!b!cDg!c!}Dl#R#SET#T#oDl#o#pEj#q#rEo4w5bDl5i6SDl~!lS#^~XY!gYZ!g]^!gpq!gR!}ZzPOY#pYZ$dZ]#p]^!x^r#prs)ps#O#p#O#P*W#P#Q#p#Q#R!x#R~#pP#uUzPOY#pZr#prs$Xs#O#p#O#P$^#P~#pP$^OzPP$aPO~#pQ$gTYZ$d]^$drs$v#O#P%[#Q#R$dQ${TtQYZ$d]^$drs$v#O#P%[#Q#R$dQ%_eYZ$d]^$drs$v!Q!R&p!R!S&p!S!T&p!T!U&p!U!Y'V!w!x'l#O#P%[#Q#R$d#T#U$d#U#V$d#X#Y$d#Y#Z$d#b#c$d#f#g$d#h#i$d#i#j(n#j#k$d#l#m)WQ&sUYZ$d]^$drs$v!Q!Y'V#O#P%[#Q#R$dQ'YUYZ$d]^$drs$v!Q!Y$d#O#P%[#Q#R$dQ'oR!Q!['x!c!i'x#T#Z'xQ'{R!Q![(U!c!i(U#T#Z(UQ(XR!Q![(b!c!i(b#T#Z(bQ(eR!Q![(n!c!i(n#T#Z(nQ(qR!Q![(z!c!i(z#T#Z(zQ(}R!Q![)W!c!i)W#T#Z)WQ)ZR!Q![)d!c!i)d#T#Z)dQ)gR!Q![$d!c!i$d#T#Z$dR)wTtQzPYZ$d]^$drs$v#O#P%[#Q#R$dR*ZsOY#pYZ!xZ]#p]^!x^r#prs,hs!Q#p!Q!R-b!R!S-b!S!T-b!T!U-b!U!Y.`!Y!w#p!w!x/^!x#O#p#O#P6d#P#Q#p#Q#R!x#R#T#p#T#U!x#U#V!x#V#X#p#X#Y!x#Y#Z!x#Z#b#p#b#c!x#c#f#p#f#g!x#g#h#p#h#i!x#i#j2x#j#k!x#k#l#p#l#m4n#m~#pR,oZtQzPOY#pYZ$dZ]#p]^!x^r#prs)ps#O#p#O#P*W#P#Q#p#Q#R!x#R~#pR-g]zPOY#pYZ$dZ]#p]^!x^r#prs)ps!Q#p!Q!Y.`!Y#O#p#O#P*W#P#Q#p#Q#R!x#R~#pR.e]zPOY#pYZ$dZ]#p]^!x^r#prs)ps!Q#p!Q!Y!x!Y#O#p#O#P*W#P#Q#p#Q#R!x#R~#pR/c[zPOY#pZr#prs$Xs!Q#p!Q![0X![!c#p!c!i0X!i#O#p#O#P$^#P#T#p#T#Z0X#Z~#pR0^[zPOY#pZr#prs$Xs!Q#p!Q![1S![!c#p!c!i1S!i#O#p#O#P$^#P#T#p#T#Z1S#Z~#pR1X[zPOY#pZr#prs$Xs!Q#p!Q![1}![!c#p!c!i1}!i#O#p#O#P$^#P#T#p#T#Z1}#Z~#pR2S[zPOY#pZr#prs$Xs!Q#p!Q![2x![!c#p!c!i2x!i#O#p#O#P$^#P#T#p#T#Z2x#Z~#pR2}[zPOY#pZr#prs$Xs!Q#p!Q![3s![!c#p!c!i3s!i#O#p#O#P$^#P#T#p#T#Z3s#Z~#pR3x[zPOY#pZr#prs$Xs!Q#p!Q![4n![!c#p!c!i4n!i#O#p#O#P$^#P#T#p#T#Z4n#Z~#pR4s[zPOY#pZr#prs$Xs!Q#p!Q![5i![!c#p!c!i5i!i#O#p#O#P$^#P#T#p#T#Z5i#Z~#pR5n[zPOY#pZr#prs$Xs!Q#p!Q![!x![!c#p!c!i!x!i#O#p#O#P$^#P#T#p#T#Z!x#Z~#pR6iszPOY#pYZ$dZ]#p]^!x^r#prs)ps!Q#p!Q!R-b!R!S-b!S!T-b!T!U-b!U!Y.`!Y!w#p!w!x/^!x#O#p#O#P*W#P#Q#p#Q#R!x#R#T#p#T#U!x#U#V!x#V#X#p#X#Y!x#Y#Z!x#Z#b#p#b#c!x#c#f#p#f#g!x#g#h#p#h#i!x#i#j2x#j#k!x#k#l#p#l#m4n#m~#pP8{UzPOY8vZw8vwx$Xx#O8v#O#P9_#P~8vP9bPO~8v~9jO#c~~9oO#b~~9rP!Q![9u~9zRy~!Q![9u!g!h:T#X#Y:T~:WR{|:a}!O:a!Q![:g~:dP!Q![:g~:lPy~!Q![:g~:rQz{:x!P!Q;m~:{ROz:xz{;U{~:x~;XTOz:xz{;U{!P:x!P!Q;h!Q~:x~;mOQ~~;rQP~OY;mZ~;m~;}Uy~!O!P<a!Q![<m!g!h:T#X#Y:T#c#d=O#l#m=^~<dR!Q![<a!g!h:T#X#Y:T~<rSy~!O!P<a!Q![<m!g!h:T#X#Y:T~=RP!Q!Y=U~=ZPy~!Q!Y=U~=aR!Q![=j!c!i=j#T#Z=j~=oRy~!Q![=j!c!i=j#T#Z=j~={Vrs>b!c!}Cn!}#ODV#R#SCn#T#oCn4w5bCn5i6SCn~>eTYZ>b]^>brs>t#O#P?Y#Q#R>b~>yT|~YZ>b]^>brs>t#O#P?Y#Q#R>b~?]eYZ>b]^>brs>t!Q!R@n!R!S@n!S!T@n!T!U@n!U!YAT!w!xAj#O#P?Y#Q#R>b#T#U>b#U#V>b#X#Y>b#Y#Z>b#b#c>b#f#g>b#h#i>b#i#jBl#j#k>b#l#mCU~@qUYZ>b]^>brs>t!Q!YAT#O#P?Y#Q#R>b~AWUYZ>b]^>brs>t!Q!Y>b#O#P?Y#Q#R>b~AmR!Q![Av!c!iAv#T#ZAv~AyR!Q![BS!c!iBS#T#ZBS~BVR!Q![B`!c!iB`#T#ZB`~BcR!Q![Bl!c!iBl#T#ZBl~BoR!Q![Bx!c!iBx#T#ZBx~B{R!Q![CU!c!iCU#T#ZCU~CXR!Q![Cb!c!iCb#T#ZCb~CeR!Q![>b!c!i>b#T#Z>b~CsU{~!Q![Cn!c!}Cn#R#SCn#T#oCn4w5bCn5i6SCn~DYP#P#QD]~DbO{~~DgO#d~~DlO#`~~DqU#a~!Q![Dl!c!}Dl#R#SDl#T#oDl4w5bDl5i6SDl~EWU!Q![Dl!c!}Dl#R#SDl#T#oDl4w5bDl5i6SDl~EoO#e~~EtO#f~",
  tokenizers: [0, 1],
  topRules: {"Rel":[0,3]},
  specialized: [{term: 109, get: value => spec_identifier[value] || -1}],
  tokenPrec: 0
});

// import {completeFromList} from "@codemirror/autocomplete"
const relLanguage = language.LRLanguage.define({
    parser: parser.configure({
        props: [
            // indentNodeProp.add({
            //   Application: delimitedIndent({closing: ")", align: false})
            // }),
            // foldNodeProp.add({
            //   Application: foldInside
            // }),
            highlight.styleTags({
                'use forall for in iff if then else end where with select implies': highlight.tags.controlKeyword,
                'not and or xor': highlight.tags.operatorKeyword,
                'as from output inline ic doc entity': highlight.tags.keyword,
                'def': highlight.tags.definitionKeyword,
                'module': highlight.tags.moduleKeyword,
                'Any String Int Number Char Missing Floating UnsignedInt SignedInt Rational FixedDecimal RelName Entity AutoNumber Hash FilePos Date DateTime Year Month Week Day Hour Minute Second Millisecond Microsecond Nanosecond Boolean': highlight.tags.typeName,
                Number: highlight.tags.number,
                BooleanLiteral: highlight.tags.bool,
                StringLiteral: highlight.tags.string,
                // DateLiteral: t.string,
                // DateTimeLiteral: t.string,
                AssignOp: highlight.tags.definitionOperator,
                LineComment: highlight.tags.lineComment,
                BlockComment: highlight.tags.blockComment,
                VariableName: highlight.tags.definition(highlight.tags.variableName),
                Atom: highlight.tags.atom,
                RelnameLiteral: highlight.tags.atom,
                RelnameStringLiteral: highlight.tags.atom,
                DefineStatement: highlight.tags.atom,
                '( )': highlight.tags.paren,
                '[ ]': highlight.tags.squareBracket,
                '{ }': highlight.tags.brace,
                '.': highlight.tags.derefOperator,
                ', ;': highlight.tags.separator,
            })
        ]
    }),
    languageData: {
        closeBrackets: { brackets: ["(", "[", "{", "'", '"', "`"] },
        commentTokens: { line: "//", block: { open: "/*", close: "*/" } },
        // indentOnInput: /^\s*(?:case |default:|\{|\}|<\/)$/,
        wordChars: "$"
    }
});
// Autocomplete
// export const relCompletion = relLanguage.data.of({
//   autocomplete: completeFromList([
//     { label: "Any", type: "type" },
//     { label: "AutoNumber", type: "type" },
//     { label: "Boolean", type: "type" },
//     { label: "Char", type: "type" },
//     { label: "Day", type: "type" },
//     { label: "Date", type: "type" },
//     { label: "DateTime", type: "type" },
//     { label: "Year", type: "type" },
//     { label: "Month", type: "type" },
//     { label: "Week", type: "type" },
//     { label: "Hour", type: "type" },
//     { label: "Minute", type: "type" },
//     { label: "Second", type: "type" },
//     { label: "Millisecond", type: "type" },
//     { label: "Microsecond", type: "type" },
//     { label: "Nanosecond", type: "type" },
//     { label: "Entity", type: "type" },
//     { label: "Int", type: "type" },
//     { label: "Number", type: "type" },
//     { label: "Missing", type: "type" },
//     { label: "Floating", type: "type" },
//     { label: "UnsignedInt", type: "type" },
//     { label: "SignedInt", type: "type" },
//     { label: "Rational", type: "type" },
//     { label: "FixedDecimal", type: "type" },
//     { label: "Hash", type: "type" },
//     { label: "FilePos", type: "type" },
//     { label: "String", type: "type" },
//     { label: "def", type: "keyword" },
//     { label: "output", type: "keyword" },
//     { label: "from", type: "keyword" },
//     { label: "if", type: "keyword" },
//     { label: "iff", type: "keyword" },
//     { label: "then", type: "keyword" },
//     { label: "else", type: "keyword" },
//     { label: "end", type: "keyword" },
//     { label: "exists", type: "keyword" },
//     { label: "where", type: "keyword" },
//     { label: "with", type: "keyword" },
//     { label: "select", type: "keyword" },
//     { label: "implies", type: "keyword" },
//     { label: "use", type: "keyword" },
//     { label: "forall", type: "keyword" },
//     { label: "in", type: "keyword" },
//     { label: "ic", type: "keyword" },
//     { label: "not", type: "keyword" },
//     { label: "and", type: "keyword" },
//     { label: "or", type: "keyword" },
//     { label: "xor", type: "keyword" },
//     { label: "union", type: "keyword" },
//   ])
// })
function rel() {
    // return new LanguageSupport(relLanguage, [relCompletion])
    return new language.LanguageSupport(relLanguage);
}

exports.rel = rel;
exports.relLanguage = relLanguage;

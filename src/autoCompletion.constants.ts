import {Completion} from "@codemirror/autocomplete";

const attributeKeywordOptions: Completion[] = [
  "function",
  "inline",
  "ondemand"
].map(tag => ({
  label: `@${tag}`,
  type: "keyword"
}));

const mainKeywordOptions: Completion[] = [
  "def",
  "module",
  "doc",
  "end",
  "with",
  "ic",
  "entity",
  "value",
  "type"
].map(tag => ({
  label: tag,
  type: "keyword"
}));

const emphasisOptions: Completion[] = [
  "output",
  "insert",
  "delete",
  "abort",
  "export",
].map(tag => ({
  label: tag,
  type: "interface"
}));

const typeOptions: Completion[] = [
  "Any",
  "AutoNumber",
  "Boolean",
  "Char",
  "Day",
  "Date",
  "DateTime",
  "Year",
  "Month",
  "Week",
  "Hour",
  "Minute",
  "Second",
  "Millisecond",
  "Microsecond",
  "Nanosecond",
  "Entity",
  "Int",
  "Number",
  "Missing",
  "Floating",
  "UnsignedInt",
  "SignedInt",
  "Rational",
  "FixedDecimal",
  "Hash",
  "FilePos",
  "String",
].map(tag => ({
  label: tag,
  type: "type"
}));

const functionOptions: Completion[] = [
  "_flatten",
  "abelian_group",
  "abs",
  "absorption_laws",
  "acos",
  "acosh",
  "acot",
  "add",
  "antisymmetric",
  "approximate_abelian_group",
  "approximate_commutative_monoid",
  "approximate_group",
  "approximate_monoid",
  "approximate_ring",
  "approximate_semiring",
  "approximately_associative",
  "approximately_commutative",
  "approximately_distributive",
  "approximately_has_inverse",
  "approximately_left_distributive",
  "approximately_right_distributive",
  "approximately_zero_annihilation",
  "argmax",
  "argmin",
  "arity",
  "asin",
  "asinh",
  "associative",
  "atan",
  "atanh",
  "auto_number",
  "binary_operator",
  "binary_relation",
  "binary_relation_substitution_laws",
  "bitwise_and",
  "bitwise_left_shift",
  "bitwise_not",
  "bitwise_or",
  "bitwise_right_shift",
  "bitwise_unsigned_right_shift",
  "bitwise_xor",
  "boolean_and",
  "boolean_false",
  "boolean_not",
  "boolean_or",
  "boolean_true",
  "bottom",
  "bounded_lattice",
  "bounded_semilattice",
  "byte",
  "capture_group_by_index",
  "capture_group_by_name",
  "cart",
  "cbrt",
  "ceil",
  "char",
  "clamp",
  "commutative",
  "commutative_monoid",
  "comparable",
  "complement",
  "concat",
  "cos",
  "cosh",
  "cot",
  "count",
  "date_add",
  "date_day",
  "date_dayname",
  "date_dayofquarter",
  "date_dayofweek",
  "date_dayofweekofmonth",
  "date_dayofyear",
  "date_daysinmonth",
  "date_isleapyear",
  "date_month",
  "date_monthname",
  "date_quarterofyear",
  "date_subtract",
  "date_week",
  "date_year",
  "dates_period_days",
  "datetime_add",
  "datetime_day",
  "datetime_dayname",
  "datetime_dayofquarter",
  "datetime_dayofweek",
  "datetime_dayofweekofmonth",
  "datetime_dayofyear",
  "datetime_daysinmonth",
  "datetime_hour",
  "datetime_isleapyear",
  "datetime_minute",
  "datetime_month",
  "datetime_monthname",
  "datetime_now",
  "datetime_quarterofyear",
  "datetime_second",
  "datetime_subtract",
  "datetime_to_nanoseconds",
  "datetime_week",
  "datetime_year",
  "datetimes_period_milliseconds",
  "decimal",
  "decimal_bit_length",
  "decimal_int_convert",
  "decimal_precision",
  "decode_base",
  "default_value",
  "deg",
  "denominator",
  "describe",
  "diff",
  "disjoint",
  "distributive",
  "divide",
  "docstring",
  "domain",
  "dot_join",
  "double_metaphone",
  "empty",
  "encode_base",
  "epoch_milliseconds",
  "eq",
  "equal",
  "equivalence_relation",
  "erf",
  "erfinv",
  "escape_regex_metachars",
  "export_csv",
  "export_json",
  "factorial",
  "filepos",
  "filepos_value",
  "first",
  "float",
  "float_int_convert",
  "floor",
  "floor_divide",
  "floor_to_int",
  "format_date",
  "format_datetime",
  "formula_card_est",
  "frequency",
  "function",
  "  geometric_mean",
  "glm_generic",
  "glm_linear_regression",
  "glm_logistic_regression",
  "glm_predict",
  "glm_probit_regression",
  "graphviz",
  "group",
  "gt",
  "gt_eq",
  "harmonic_mean",
  "has_identity",
  "has_left_identity",
  "has_left_zero",
  "has_maximal_element",
  "has_minimal_element",
  "has_right_identity",
  "has_right_zero",
  "hash",
  "hash_value_uint",
  "haversine",
  "help",
  "html",
  "ic",
  "idempotent",
  "identity",
  "int",
  "int_float_convert",
  "int_spread_by_even",
  "int_spread_by_ratio",
  "intersect",
  "irreflexive",
  "jacobian",
  "join_bounded_lattice",
  "last",
  "lattice",
  "left_distributive",
  "left_identity",
  "left_override",
  "left_zero",
  "levenshtein",
  "like_match",
  "linear_regression",
  "linear_regression_objective",
  "linear_regression_predict",
  "lined_csv",
  "load_csv",
  "load_csv_row_wise",
  "load_json",
  "log",
  "log_card_est",
  "lowercase",
  "lr_random_initial_point",
  "lt",
  "lt_eq",
  "mae",
  "markdown",
  "max",
  "max_k",
  "maximal_element",
  "maximum",
  "mean",
  "mean_normalization",
  "median",
  "meet_bounded_lattice",
  "metaphone",
  "min",
  "min_k",
  "min_max_normalization",
  "minimal_element",
  "minimize_initial_point",
  "minimum",
  "missing",
  "mlpack_adaboost",
  "mlpack_adaboost_predict",
  "mlpack_approx_kfn",
  "mlpack_approx_kfn_build",
  "mlpack_dbscan",
  "mlpack_decision_tree",
  "mlpack_decision_tree_predict",
  "mlpack_det",
  "mlpack_det_build",
  "mlpack_emst",
  "mlpack_fastmks",
  "mlpack_fastmks_build",
  "mlpack_gmm_generate",
  "mlpack_gmm_probability",
  "mlpack_gmm_train",
  "mlpack_hoeffding_tree",
  "mlpack_hoeffding_tree_predict",
  "mlpack_kernel_pca",
  "mlpack_kfn",
  "mlpack_kfn_build",
  "mlpack_kmeans",
  "mlpack_kmeans_centroids",
  "mlpack_knn",
  "mlpack_knn_build",
  "mlpack_krann",
  "mlpack_krann_build",
  "mlpack_lars",
  "mlpack_lars_predict",
  "mlpack_linear_regression",
  "mlpack_linear_regression_predict",
  "mlpack_linear_svm",
  "mlpack_linear_svm_predict",
  "mlpack_logistic_regression",
  "mlpack_logistic_regression_predict",
  "mlpack_lsh",
  "mlpack_lsh_build",
  "mlpack_mean_shift",
  "mlpack_nbc",
  "mlpack_nbc_predict",
  "mlpack_nmf",
  "mlpack_pca",
  "mlpack_perceptron",
  "mlpack_perceptron_predict",
  "mlpack_preprocess_split",
  "mlpack_radical",
  "mlpack_random_forest",
  "mlpack_random_forest_predict",
  "mlpack_softmax_regression",
  "mlpack_softmax_regression_predict",
  "mode",
  "modulo",
  "monoid",
  "mse",
  "multiply",
  "murmurhash",
  "nanoseconds_to_datetime",
  "natural_exp",
  "natural_log",
  "neq",
  "not",
  "nullary_relation",
  "num_bytes",
  "num_chars",
  "numerator",
  "pack",
  "parse_date",
  "parse_datetime",
  "parse_decimal",
  "parse_float",
  "parse_int",
  "parse_json",
  "parse_uuid",
  "partial_order",
  "partial_order_and_bounded_lattice",
  "partial_order_and_join_bounded_lattice",
  "partial_order_and_lattice",
  "partial_order_and_meet_bounded_lattice",
  "pattern_match",
  "percentile",
  "percentile_nearest",
  "period_add",
  "period_day_to_int",
  "period_max",
  "period_min",
  "pi_float",
  "pivot",
  "pop_standard_deviation",
  "pop_variance",
  "pop_zscore_normalization",
  "power",
  "prefix_join",
  "preorder",
  "product",
  "proper_subset",
  "proper_superset",
  "rad",
  "random_mersenne_twister",
  "random_threefry_float",
  "random_threefry_uint",
  "random_uint",
  "range",
  "rational",
  "rational_convert",
  "reflexive",
  "regex_compile",
  "regex_match",
  "regex_match_all",
  "rel",
  "relname_string",
  "remainder",
  "reverse_sort",
  "right_distributive",
  "right_identity",
  "right_override",
  "right_zero",
  "ring",
  "rmse",
  "round",
  "sample_standard_deviation",
  "sample_variance",
  "sample_zscore_normalization",
  "second",
  "semilattice",
  "semiring",
  "sign",
  "sin",
  "sinh",
  "sort",
  "soundex",
  "spread",
  "sqrt",
  "squared",
  "squared_deviation",
  "strict_partial_order",
  "strict_total_order",
  "string",
  "string_join",
  "string_length",
  "string_replace",
  "string_replace_multiple",
  "string_split",
  "string_trim",
  "subset",
  "substring",
  "substring_bytes",
  "subtract",
  "suffix_join",
  "sum",
  "sum_int",
  "superset",
  "svg",
  "symmetric",
  "table",
  "tan",
  "tanh",
  "ternary_relation",
  "top",
  "total",
  "total_order",
  "transitive",
  "transpose",
  "trunc",
  "trunc_divide",
  "trunc_to_int",
  "uint",
  "unary_operator",
  "unary_relation",
  "unary_relation_substitution_laws",
  "union",
  "unit_normalization",
  "unix_epoch",
  "unpack",
  "uppercase",
  "uuid_string",
  "vega",
  "vegalite",
  "vegalite_utils",
  "view_json",
  "weighted_mean",
  "xgboost_classifier",
  "xgboost_classifier_predict",
  "xgboost_classifier_probabilities",
  "xgboost_feature_importances",
  "xgboost_regressor",
  "xgboost_regressor_predict",
  "zero_annihilation",
  "zero_of_operator",
  "zip",
].map(tag => ({
  label: tag,
  type: "function"
}));

export {
  attributeKeywordOptions,
  mainKeywordOptions,
  emphasisOptions,
  typeOptions,
  functionOptions
};
